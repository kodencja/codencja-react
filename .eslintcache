[{"C:\\CODING\\React\\codencr\\src\\index.js":"1","C:\\CODING\\React\\codencr\\src\\App.js":"2","C:\\CODING\\React\\codencr\\src\\reportWebVitals.js":"3","C:\\CODING\\React\\codencr\\src\\componentsHook\\Navbar.jsx":"4","C:\\CODING\\React\\codencr\\src\\componentsHook\\FrontPage.jsx":"5","C:\\CODING\\React\\codencr\\src\\componentsHook\\Skills.jsx":"6","C:\\CODING\\React\\codencr\\src\\componentsHook\\NavItem.jsx":"7","C:\\CODING\\React\\codencr\\src\\componentsHook\\About.jsx":"8","C:\\CODING\\React\\codencr\\src\\componentsHook\\Services.jsx":"9","C:\\CODING\\React\\codencr\\src\\componentsHook\\MenuIcon.jsx":"10","C:\\CODING\\React\\codencr\\src\\componentsHook\\Slider.jsx":"11","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useStateAsync.js":"12","C:\\CODING\\React\\codencr\\src\\componentsHook\\WriteText.jsx":"13","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useAppear.js":"14","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useParallaxBgrImage.js":"15","C:\\CODING\\React\\codencr\\src\\componentsHook\\Projects.jsx":"16","C:\\CODING\\React\\codencr\\src\\componentsHook\\Contact.jsx":"17","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useHide.js":"18","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useScrollTo.js":"19","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useMoveFrontPage.js":"20","C:\\CODING\\React\\codencr\\src\\componentsHook\\BrickBoxes.jsx":"21","C:\\CODING\\React\\codencr\\src\\componentsHook\\Curtain.jsx":"22"},{"size":836,"mtime":1622553000713,"results":"23","hashOfConfig":"24"},{"size":1118,"mtime":1647604566640,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":1333,"mtime":1622709838306,"results":"27","hashOfConfig":"24"},{"size":14295,"mtime":1648622320004,"results":"28","hashOfConfig":"24"},{"size":4704,"mtime":1641308573990,"results":"29","hashOfConfig":"24"},{"size":358,"mtime":1622709826406,"results":"30","hashOfConfig":"24"},{"size":1336,"mtime":1648622530300,"results":"31","hashOfConfig":"24"},{"size":2512,"mtime":1648621936321,"results":"32","hashOfConfig":"24"},{"size":328,"mtime":1622733276232,"results":"33","hashOfConfig":"24"},{"size":7647,"mtime":1626414670490,"results":"34","hashOfConfig":"24"},{"size":1275,"mtime":1622575896173,"results":"35","hashOfConfig":"24"},{"size":7453,"mtime":1648623043120,"results":"36","hashOfConfig":"24"},{"size":9191,"mtime":1622733175577,"results":"37","hashOfConfig":"24"},{"size":3041,"mtime":1622737047249,"results":"38","hashOfConfig":"24"},{"size":5836,"mtime":1645041278690,"results":"39","hashOfConfig":"24"},{"size":2270,"mtime":1627469720990,"results":"40","hashOfConfig":"24"},{"size":1936,"mtime":1622575782986,"results":"41","hashOfConfig":"24"},{"size":731,"mtime":1622575845573,"results":"42","hashOfConfig":"24"},{"size":2560,"mtime":1626930905347,"results":"43","hashOfConfig":"24"},{"size":13959,"mtime":1627634171506,"results":"44","hashOfConfig":"24"},{"size":3117,"mtime":1641297113043,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"o7i4az",{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"49"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"49"},"C:\\CODING\\React\\codencr\\src\\index.js",["99"],"import \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"bootstrap-slider/dist/css/bootstrap-slider.css\"\nimport \"react-multi-carousel/lib/styles.css\";\n// import $ from \"jquery\";\nimport Popper from \"popper.js\";\n// import \"bootstrap/dist/js/bootstrap.bundle.min\";\n// import './fontello/css/fontello.css';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import AppCl from \"./AppCl\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["100","101"],"C:\\CODING\\React\\codencr\\src\\App.js",["102","103"],"import React, { useState, useEffect, lazy, Suspense } from \"react\";\r\nimport \"./App.css\";\r\nimport \"./css/anims.css\";\r\nimport \"./fontello/css/fontello.css\";\r\nimport \"./icons/font/flaticon.css\";\r\nimport Curtain from \"./componentsHook/Curtain\";\r\nimport FrontPage from \"./componentsHook/FrontPage\";\r\nimport Navbar from \"./componentsHook/Navbar\";\r\n\r\n// let FrontPage;\r\n\r\nfunction App() {\r\n  const [transEnd, setTransEnd] = useState(true);\r\n\r\n  // useEffect(() => {\r\n  //   FrontPage = lazy(() => import(\"./componentsHook/FrontPage\"));\r\n  // }, [transEnd]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!transEnd ? (\r\n        <>\r\n          <button className=\"btn btn-sm skip\" onClick={() => setTransEnd(true)}>\r\n            Skip intro\r\n          </button>\r\n          <Curtain onTransEnd={setTransEnd} />\r\n        </>\r\n      ) : (\r\n        <Suspense fallback={<p>Loading...</p>}>\r\n          <FrontPage>\r\n            <div className=\"menuback col-12 header-top-menuback\">\r\n              <Navbar />\r\n            </div>\r\n          </FrontPage>\r\n        </Suspense>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\CODING\\React\\codencr\\src\\reportWebVitals.js",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\Navbar.jsx",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\FrontPage.jsx",["104","105","106","107","108","109","110"],"C:\\CODING\\React\\codencr\\src\\componentsHook\\Skills.jsx",["111"],"import React, { useEffect, useRef, memo } from \"react\";\r\nimport CountUp from \"react-countup\";\r\nimport(\"../css/skills.css\");\r\n\r\nconst hardSkills = [\r\n  \"HTML5\",\r\n  \"CSS3\",\r\n  \"JS(ES6)\",\r\n  \"jQUERY\",\r\n  \"REDUX\",\r\n  \"REACT.JS\",\r\n  \"Bootstrap\",\r\n  \"SASS\",\r\n  \"TypeScript\",\r\n  \"NodeJS\",\r\n  \"Express.js\",\r\n  \"GIT\",\r\n];\r\nconst hardSkillsPercent = [75, 75, 75, 75, 70, 75, 75, 70, 70, 60, 65, 70];\r\n\r\nconst softSkills = [\r\n  \"NPM\",\r\n  \"REST API\",\r\n  \"EJS View\",\r\n  \"mongoDB\",\r\n  \"C++\",\r\n  \"PHP\",\r\n  \"MySQL\",\r\n  \"Material UI\",\r\n  \"MVC\",\r\n  \"PhotoShop\",\r\n  \"Illustrator\",\r\n  \"Premiere\",\r\n];\r\n\r\nconst softQuotation = [\r\n  \"...\",\r\n  \"First,\",\r\n  \"solve\",\r\n  \"the\",\r\n  \"problem.\",\r\n  \"Then,\",\r\n  \"write\",\r\n  \"the\",\r\n  \"code\",\r\n  \" - \",\r\n  \"John\",\r\n  \"Johnson\",\r\n];\r\n\r\nconst hardQuotation = [\r\n  \"The most\",\r\n  \"important\",\r\n  \"property\",\r\n  \"of a\",\r\n  \"program is\",\r\n  \"whether it\",\r\n  \"accomp- lishes\",\r\n  \"the intention\",\r\n  \"of its\",\r\n  \"user.\",\r\n  \"- C.A.R.\",\r\n  \"Hoare\",\r\n];\r\n\r\nconst countingTime = 7;\r\n\r\nconst Skills = ({ handleStartCount, skillsDivs, refProp, onTitleAnim }) => {\r\n  const skillsRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Skills Comp. mounted\");\r\n    if (skillsRef.current.length > 0) {\r\n      skillsDivs(skillsRef.current);\r\n    }\r\n  }, []);\r\n\r\n  const addToSkillsRef = (el) => {\r\n    if (el && el !== undefined && !skillsRef.current.includes(el)) {\r\n      skillsRef.current.push(el);\r\n    }\r\n  };\r\n\r\n  const hardSkillsCircles = hardSkills.map((skill, index) => {\r\n    return (\r\n      <div\r\n        className=\"flip-card col-md-4 mx-4 mb-4 mt-5 px-0 animated NotInView fadeOutDown\"\r\n        key={index}\r\n        ref={addToSkillsRef}\r\n      >\r\n        <div className=\"flip-card-inner\">\r\n          <div className=\"flip-card-front\">\r\n            <div className={\"row-counting counting count-hard-\" + index}>\r\n              <div className=\"percent counting-percent\">\r\n                <CountUp\r\n                  end={\r\n                    handleStartCount[index] === false\r\n                      ? 0\r\n                      : hardSkillsPercent[index]\r\n                  }\r\n                  duration={countingTime}\r\n                  suffix=\"%\"\r\n                  delay={2}\r\n                >\r\n                  {({ countUpRef }) => (\r\n                    <div style={{ fontWeight: \"bold\" }}>\r\n                      <div ref={countUpRef}></div>\r\n                    </div>\r\n                  )}\r\n                </CountUp>\r\n              </div>\r\n              <div className=\"skillName counting-skillName\">{skill}</div>\r\n            </div>\r\n          </div>\r\n          <div className={\"flip-card-back row-counting flipBgrColor\" + index}>\r\n            <div\r\n              className={\r\n                index > hardSkills.length - 3\r\n                  ? \"flip-back-quote authorFontStyle\"\r\n                  : \"flip-back-quote\"\r\n              }\r\n            >\r\n              {hardQuotation[index]}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const softSkillsCircles = softSkills.map((skill, index) => {\r\n    return (\r\n      <div\r\n        className=\"flip-card col-md-4 mx-4 mb-4 mt-5 px-0 animated NotInView fadeOutDown\"\r\n        key={index}\r\n        ref={addToSkillsRef}\r\n      >\r\n        <div className=\"flip-card-inner\">\r\n          <div className=\"flip-card-front\">\r\n            <div\r\n              className={\"row-counting counting soft-row count-soft-\" + index}\r\n            >\r\n              <div className=\"skillName counting-skillName\">{skill}</div>\r\n            </div>\r\n          </div>\r\n          <div className={\"flip-card-back row-counting flipBgrColor\" + index}>\r\n            <div\r\n              className={\r\n                index > softSkills.length - 3\r\n                  ? \"flip-back-quote authorFontStyle\"\r\n                  : \"flip-back-quote\"\r\n              }\r\n            >\r\n              {softQuotation[index]}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <header className=\"title sec-title title-col-bright title-bgr-dark\">\r\n        {onTitleAnim(\"TECHNICAL\\u00A0SKILLS\")}\r\n      </header>\r\n      <div className=\"container sec-cont\">\r\n        <div className=\"align-middle py-4\">\r\n          <header className=\"skills-header\">Hard Skills</header>\r\n          <div className=\"row justify-content-center skills-row\">\r\n            {hardSkillsCircles}\r\n          </div>\r\n          <header className=\"skills-header\">Soft Skills</header>\r\n          <div className=\"row justify-content-center skills-row\">\r\n            {softSkillsCircles}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default memo(Skills);\r\n","C:\\CODING\\React\\codencr\\src\\componentsHook\\NavItem.jsx",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\About.jsx",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\Services.jsx",["112"],"C:\\CODING\\React\\codencr\\src\\componentsHook\\MenuIcon.jsx",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\Slider.jsx",["113","114","115"],"import React, { useState, useEffect, useRef, memo } from \"react\";\r\nimport $ from \"jquery\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport photo1 from \"../img/books2p.jpg\";\r\nimport photo2 from \"../img/iphone_and_ipad-wallpaper-1280x853.jpg\";\r\nimport sign50 from \"../img/sign50.png\";\r\nimport photo3 from \"../img/3ep.jpg\";\r\nimport photo4 from \"../img/matrix_1280.jpg\";\r\nimport photo5 from \"../img/ja_odb4-1.jpg\";\r\nimport photo6 from \"../img/web-design-2906159_1280.jpg\";\r\nimport photo7 from \"../img/altumcodep.jpg\";\r\nimport photo8 from \"../img/code-2620118_1280.jpg\";\r\nimport photo9 from \"../img/love_learnp.jpg\";\r\nimport photo10 from \"../img/monitors.jpg\";\r\nimport photo11 from \"../img/technology-785742_1280.jpg\";\r\nimport photo12 from \"../img/macbook-336704_1280.jpg\";\r\nimport(\"../css/slider.css\");\r\n// import { getAllByDisplayValue } from \"@testing-library/react\";\r\n\r\nconst carouselItemsPhotos = [\r\n  photo1,\r\n  photo2,\r\n  photo3,\r\n  photo4,\r\n  photo5,\r\n  photo6,\r\n  photo7,\r\n  photo8,\r\n  photo9,\r\n  photo10,\r\n  photo11,\r\n  photo12,\r\n];\r\nconst carouselHead = [\r\n  [\"Web-Developing & Designing\", \"Frontend Programming\"],\r\n  [\"Up to\", sign50, \"ideas / h\", \"in built-up area\"],\r\n  [\"To make sens\", \"to make order\"],\r\n  [\"from tangle\", \"of non-decimal numbers\"],\r\n  [\"Krzysztof Lalik\", \"Frontend developing\", \"Backend supporting\"],\r\n  [\r\n    \"Programming & designing websites\",\r\n    \"Eye-catching & functional\",\r\n    \"Fully Responsive\",\r\n  ],\r\n  [\"Modern Framework\", \"REACT.JS\", \"Interactive & Animated\"],\r\n  [\r\n    \"Desktop, Tablet, Mobile\",\r\n    \"Caring of details\",\r\n    \"standard & original templates\",\r\n  ],\r\n  [\"Meeting high standards\", \"adjusted to Customer expectations\"],\r\n  [\"creative design animations\", \"with one to one swipe movement!\"],\r\n  [\"Flexible working time\"],\r\n  [\"until the project is done\"],\r\n];\r\nconst nonVisibileClass = \"notvisible\";\r\nconst captionsClass = \"carl-caption-capt animated\";\r\nconst animShowArr1 = \"fadeInDown\";\r\nconst animShowArr2 = [\"fadeInDown\", \"fadeInUp\"];\r\nconst animShowArr3 = [\"fadeInDown\", \"fadeInLeft\", \"fadeInRight\"];\r\nconst animShowArr4 = [\r\n  \"fadeInDown\",\r\n  \"bounceInLeft\",\r\n  \"fadeInLeft\",\r\n  \"fadeInRight\",\r\n];\r\n\r\nconst Slider = React.forwardRef(({ windHeight, windWidth }, ref) => {\r\n  const [btnPrev, setBtnPrev] = useState();\r\n  const [btnNext, setBtnNext] = useState();\r\n  const [photoWidth, setPhotoWidth] = useState(0);\r\n  const [photoWindowWidthDifference, setPhotoWindowWidthDifference] =\r\n    useState(0);\r\n\r\n  const secSliderRef = React.createRef();\r\n  const captionsRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Slider Comp. mounted!\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const btnPrevC = secSliderRef.current.element.childNodes[2];\r\n    const btnNextC = secSliderRef.current.element.childNodes[3];\r\n    setBtnPrev(btnPrevC);\r\n    setBtnNext(btnNextC);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"useEffect setPhotoWidth\");\r\n    let phWidth;\r\n    const proportionOfPhoto = 1.5;\r\n    if (windHeight * proportionOfPhoto >= windWidth) {\r\n      phWidth = windWidth;\r\n    } else {\r\n      phWidth = windHeight * proportionOfPhoto;\r\n    }\r\n    setPhotoWidth(phWidth);\r\n    setPhotoWindowWidthDifference(windWidth - phWidth);\r\n  }, [windWidth, windHeight]);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"useEffect keepArrows\");\r\n\r\n    if (typeof btnPrev !== \"undefined\" && typeof btnNext !== \"undefined\") {\r\n      keepArrowsInsideImg(btnPrev, btnNext);\r\n    }\r\n  }, [photoWindowWidthDifference]);\r\n\r\n  const addToCaptionsRef = (el) => {\r\n    if (el && !captionsRef.current.includes(el)) {\r\n      // console.log(\"addToCaptionsRef Fn\");\r\n      captionsRef.current.push(el);\r\n    }\r\n  };\r\n\r\n  // ta funkcja reaguje na zmianę różnicy pomiedzy wartością photoWidth a windowWidth aby utrzymać strzałki wewnątrz szerokości zdjęcia  /  this function reacts to any changes of difference between values of photoWidth and windowWidth to keep arrows of carousel inside the photo's width\r\n  const keepArrowsInsideImg = (btnPrevVar, btnNextVar) => {\r\n    setArrowMargins(photoWidth, windWidth, btnPrevVar, btnNextVar);\r\n  };\r\n\r\n  const setArrowMargins = (photoW, windWidth, btnP, btnN) => {\r\n    if (windWidth > photoW) {\r\n      const mrgnExt = (windWidth - photoW) / 2.35;\r\n      setCss(btnP, \"margin-left\", mrgnExt + \"px\");\r\n      setCss(btnN, \"margin-right\", mrgnExt + \"px\");\r\n    } else {\r\n      setCss(btnP, \"margin-left\", 0);\r\n      setCss(btnN, \"margin-right\", 0);\r\n    }\r\n  };\r\n\r\n  const handleNextSlide = (ind) => {\r\n    const captionsNextArray = captionsRef.current[ind].childNodes;\r\n\r\n    let animationArray;\r\n    if (captionsNextArray.length < 3) animationArray = animShowArr2;\r\n    else if (captionsNextArray.length === 3) animationArray = animShowArr3;\r\n    else if (captionsNextArray.length > 3) animationArray = animShowArr4;\r\n    for (let i = 0; i < captionsNextArray.length; i++) {\r\n      captionsNextArray[i].classList.remove(nonVisibileClass);\r\n      captionsNextArray[i].classList.add(animationArray[i]);\r\n    }\r\n  };\r\n\r\n  const handlePrevSlide = (ind) => {\r\n    let index;\r\n    ind === 0 ? (index = carouselItemsPhotos.length - 1) : (index = ind - 1);\r\n    const captionsPrevArray = captionsRef.current[index].childNodes;\r\n\r\n    let animationArray;\r\n    if (captionsPrevArray.length < 3) animationArray = animShowArr2;\r\n    else if (captionsPrevArray.length === 3) animationArray = animShowArr3;\r\n    else if (captionsPrevArray.length > 3) animationArray = animShowArr4;\r\n\r\n    for (let i = 0; i < captionsPrevArray.length; i++) {\r\n      captionsPrevArray[i].classList.remove(animationArray[i]);\r\n      captionsPrevArray[i].classList.add(nonVisibileClass);\r\n    }\r\n  };\r\n\r\n  const setCss = (div, property, val) => {\r\n    // console.log(\"setCss FN\");\r\n    $(div).css(property, val);\r\n  };\r\n\r\n  const carslHeaders = (index) => {\r\n    // console.log(\"carslHeaders Fn\");\r\n    const carslCaptions = carouselHead[index].map((header, index2) => {\r\n      let carslCaption;\r\n      if (index2 === 1 && index === 1) {\r\n        carslCaption = (\r\n          <div\r\n            className={\r\n              captionsClass + \" sign carl-caption-sign \" + nonVisibileClass\r\n            }\r\n            key={index2}\r\n          >\r\n            <img src={header} alt=\"50 ideas/h\" className=\"sign-img\"></img>\r\n          </div>\r\n        );\r\n      } else {\r\n        carslCaption = (\r\n          <div\r\n            className={\r\n              index === 0\r\n                ? `${captionsClass} capt head1`\r\n                : index !== 0 && index2 === 0\r\n                ? `${captionsClass} capt head1 ${nonVisibileClass}`\r\n                : `${captionsClass} capt ${nonVisibileClass}`\r\n            }\r\n            key={index2}\r\n          >\r\n            {header}\r\n          </div>\r\n        );\r\n      }\r\n      return carslCaption;\r\n    });\r\n    return carslCaptions;\r\n  };\r\n\r\n  const carouselItemList = carouselItemsPhotos.map((photo, index) => {\r\n    return (\r\n      <Carousel.Item key={index}>\r\n        <img\r\n          src={photo}\r\n          alt={\"Slide \" + index}\r\n          className=\"carous-img carous-item-img\"\r\n        />\r\n        <Carousel.Caption key={index} ref={addToCaptionsRef}>\r\n          {carslHeaders(index)}\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Carousel\r\n        style={{ position: \"relative\" }}\r\n        fade={true}\r\n        ref={secSliderRef}\r\n        onSlide={(ind) => {\r\n          handleNextSlide(ind);\r\n        }}\r\n        onSlid={(ind) => {\r\n          handlePrevSlide(ind);\r\n        }}\r\n      >\r\n        {carouselItemList}\r\n      </Carousel>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default memo(Slider);\r\n","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useStateAsync.js",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\WriteText.jsx",["116","117","118"],"C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useAppear.js",["119","120"],"import { useState } from \"react\";\r\nimport $ from \"jquery\";\r\n\r\n// dealing with appearing and hiding divs while scrolling\r\nfunction useAppear(\r\n  animShow1,\r\n  animShow2,\r\n  animShow3,\r\n  animShow4,\r\n  animHide1,\r\n  animHide2,\r\n  animHide3,\r\n  animHide4\r\n) {\r\n  const [divJustAppeared, setDivJustAppeared] = useState();\r\n  // resolve must be inside setTimeout function otherwise the result will be executed immediately after invoking the Promise\r\n  // showDivsAnimation(divsToShowInOneRow[rowInd], rowLength, rowInd, appearTime);\r\n  const showDivsAnimation = (oneDiv, rowLength, rowIndex, time) => {\r\n    // console.log(\"showDivsAnimation\");\r\n\r\n    return new Promise((resolve, reject) => {\r\n      if (reject.length > 1) reject(new Error(\"Error\"));\r\n      else {\r\n        if (rowIndex >= 4) {\r\n          const maxIndexLength =\r\n            animShow4.length * Math.floor(rowIndex / animShow4.length);\r\n          // console.log(maxIndexLength);\r\n          rowIndex = rowIndex - maxIndexLength;\r\n        }\r\n        if (rowLength > 4) {\r\n          rowLength = 4;\r\n        }\r\n        const arrShowName = eval(\"animShow\" + rowLength);\r\n        // const arrHideName = eval(\"animHide\" + rowLength);\r\n        setTimeout(() => {\r\n          // remove hide classes\r\n          // resolve(function () {\r\n          if ($(oneDiv).hasClass(animHide1[0])) {\r\n            $(oneDiv).removeClass(animHide1[0]);\r\n            // console.log(\"remove fadeOutDown\");\r\n          } else {\r\n            $(oneDiv).removeClass(function (index, css) {\r\n              // console.log(css);\r\n              return (css.match(/(^|\\s)fade\\S+/g) || []).join(\" \");\r\n            });\r\n          }\r\n          // add the right show class\r\n          $(oneDiv).addClass(arrShowName[rowIndex]);\r\n          setDivJustAppeared(oneDiv);\r\n\r\n          setTimeout(() => {\r\n            // removed show classess\r\n            if ($(oneDiv).hasClass(animShow1[0])) {\r\n              $(oneDiv).removeClass(animShow1[0]);\r\n            } else {\r\n              // $(oneDiv).removeClass(state.arrHideName[rowIndex]);\r\n              $(oneDiv).removeClass(function (index, css) {\r\n                // console.log(css);\r\n                return (css.match(/(^|\\s)fade\\S+/g) || []).join(\" \");\r\n              });\r\n            }\r\n\r\n            $(oneDiv).addClass(\"appeared\");\r\n\r\n            if ($(oneDiv).hasClass(\"box\")) {\r\n              $(oneDiv).addClass(\"box-after-appear\");\r\n            } else if ($(oneDiv).hasClass(\"flip-card\")) {\r\n              $(oneDiv).addClass(\"flip-card-after-appear\");\r\n            }\r\n          }, 1300);\r\n          resolve(arrShowName);\r\n        }, time);\r\n      }\r\n    });\r\n  };\r\n\r\n  const hideDivsAnimation = (oneDiv, rowLength, rowIndex, time) => {\r\n    // console.log(\"hideDivsAnimation\");\r\n    return new Promise((resolve, reject) => {\r\n      if (reject.length > 1) reject(new Error(\"Error\"));\r\n      else {\r\n        if (rowIndex >= 4) {\r\n          const maxIndexLength =\r\n            animShow4.length * Math.floor(rowIndex / animShow4.length);\r\n          rowIndex = rowIndex - maxIndexLength;\r\n        }\r\n        if (rowLength > 4) {\r\n          rowLength = 4;\r\n        }\r\n\r\n        const arrHideName = eval(\"animHide\" + rowLength);\r\n        setTimeout(() => {\r\n          $(oneDiv).addClass(arrHideName[rowIndex]);\r\n          $(oneDiv).removeClass(\"appeared\");\r\n        }, time / 3);\r\n        resolve(arrHideName);\r\n      }\r\n    });\r\n  };\r\n\r\n  // usuwa klasę \"NotInView\" a dodaje \"inView\" dla elementów znajdujących się w jednym rzędzie\r\n  const showDiv = (\r\n    divsToAppear,\r\n    indexInAllAppearDivs,\r\n    elem,\r\n    elemTopConst,\r\n    elemNext,\r\n    elemNextTopConst\r\n  ) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      // console.log(\"showDiv Fn\");\r\n      if (divsToAppear.length <= 0) reject(new Error(\"Error\"));\r\n      else {\r\n        // if the element's top value is the same as its neighbour top value and the neighbour / next element exist at all\r\n        if (\r\n          (elemTopConst === elemNextTopConst && elemNext != null) ||\r\n          elemTopConst !== elemNextTopConst ||\r\n          elemNext === null ||\r\n          indexInAllAppearDivs === divsToAppear.length - 1\r\n        ) {\r\n          $(elem).removeClass(\"NotInView\");\r\n          $(elem).addClass(\"inView\");\r\n        }\r\n        resolve({\r\n          element: elem,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  // hiding elements\r\n  const hideDiv = (\r\n    divsToAppear,\r\n    indexInAllAppearDivs,\r\n    elem,\r\n    elemTopConst,\r\n    elemNext,\r\n    elemNextTopConst\r\n  ) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (divsToAppear.length <= 0) reject(new Error(\"Error\"));\r\n      else {\r\n        if (\r\n          (elemNextTopConst === elemTopConst && elemNext != null) ||\r\n          elemNextTopConst !== elemTopConst ||\r\n          elemNext === null ||\r\n          indexInAllAppearDivs === divsToAppear.length - 1\r\n        ) {\r\n          if ($(elem).hasClass(\"box-after-appear\")) {\r\n            $(elem).removeClass(\"box-after-appear\");\r\n          } else if ($(elem).hasClass(\"flip-card-after-appear\")) {\r\n            $(elem).removeClass(\"flip-card-after-appear\");\r\n          }\r\n          $(elem).removeClass(\"inView\");\r\n          $(elem).addClass(\"NotInView\");\r\n        }\r\n        resolve({\r\n          element: elem,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const getDivTopVal = (frontScroll, elem) => {\r\n    // console.log(\"getDivTopVal Fn\");\r\n    return new Promise((resolve, reject) => {\r\n      if (reject.length > 1)\r\n        reject(new Error(\"Error to get div appear top value\"));\r\n      else {\r\n        resolve({\r\n          elem: elem,\r\n          elTopConst: elem.offsetTop,\r\n          elTop: elem.offsetTop - frontScroll,\r\n          elHeight: elem.offsetHeight / 2,\r\n          elNext: elem.nextElementSibling,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleAppearing = async (\r\n    windowHeight,\r\n    pFrontScroll,\r\n    appearTime,\r\n    divsToAppear\r\n  ) => {\r\n    let divsToShowInOneRow = [];\r\n    let divsToHideInOneRow = [];\r\n    try {\r\n      let getDivTop,\r\n        elNextTopConst = null;\r\n      for (let i = 0; i < divsToAppear.length; i++) {\r\n        // console.log(\"try loop\");\r\n        getDivTop = await getDivTopVal(pFrontScroll, divsToAppear[i]);\r\n        if (getDivTop.elNext !== null) {\r\n          elNextTopConst = getDivTop.elNext.offsetTop;\r\n        }\r\n        // if the element's top offset value plus its height are smaller than windowHeight and it hasn't got a \"NotInView\" class and it hasn't appeared yet (nto having class 'appeared')\r\n        if (\r\n          windowHeight >= getDivTop.elTop + getDivTop.elHeight &&\r\n          $(divsToAppear[i]).hasClass(\"NotInView\") &&\r\n          $(divsToAppear[i]).not(\".appeared\")\r\n        ) {\r\n          // console.log(\"has class NotInView\");\r\n          // tu gdzieś trzeba zrobić pętlę żeby uzyskać oneRowOfDivs.length\r\n          // the below function pushes to an array all divs that stay in one row that has to appear\r\n          const showDivVar = await showDiv(\r\n            divsToAppear,\r\n            i,\r\n            getDivTop.elem,\r\n            getDivTop.elTopConst,\r\n            getDivTop.elNext,\r\n            elNextTopConst\r\n          );\r\n          divsToShowInOneRow.push(showDivVar.element);\r\n        } else if (\r\n          windowHeight < getDivTop.elTop + getDivTop.elHeight &&\r\n          $(divsToAppear[i]).hasClass(\"inView\") &&\r\n          $(divsToAppear[i]).hasClass(\"appeared\")\r\n        ) {\r\n          // console.log(\"has class inView\");\r\n          const hideDivVar = await hideDiv(\r\n            divsToAppear,\r\n            i,\r\n            divsToAppear[i],\r\n            getDivTop.elTopConst,\r\n            getDivTop.elNext,\r\n            elNextTopConst\r\n          );\r\n          divsToHideInOneRow.push(hideDivVar.element);\r\n        }\r\n      }\r\n      // po skończeniu loopowania wszystkich divów pokazujemy lub ukrywamy wybrane divy po kolei\r\n      if (divsToShowInOneRow.length > 0) {\r\n        let rowInd = 0;\r\n        let rowLength = divsToShowInOneRow.length;\r\n        if (\r\n          $(divsToShowInOneRow[divsToShowInOneRow.length - 1]).not(\".appeared\")\r\n        ) {\r\n          // console.log(\"showDivsAnimation not appeared yet\");\r\n          while (rowInd < rowLength) {\r\n            await showDivsAnimation(\r\n              divsToShowInOneRow[rowInd],\r\n              rowLength,\r\n              rowInd,\r\n              appearTime\r\n            );\r\n            rowInd++;\r\n          }\r\n        }\r\n      }\r\n      if (divsToHideInOneRow.length > 0) {\r\n        let rowInd = 0;\r\n        let rowLength = divsToHideInOneRow.length;\r\n        if (\r\n          $(divsToHideInOneRow[divsToHideInOneRow.length - 1]).hasClass(\r\n            \"appeared\"\r\n          )\r\n        ) {\r\n          // console.log(\"hideDivsAnimation not hidden yet\");\r\n          while (rowInd < rowLength) {\r\n            await hideDivsAnimation(\r\n              divsToHideInOneRow[rowInd],\r\n              rowLength,\r\n              rowInd,\r\n              appearTime\r\n            );\r\n            rowInd++;\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return { handleAppearing, divJustAppeared };\r\n}\r\n\r\nexport default useAppear;\r\n","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useParallaxBgrImage.js",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\Projects.jsx",["121","122","123"],"import React, { useRef, useEffect } from \"react\";\r\nimport clockWall from \"../img/projects/clock.jpg\";\r\nimport contact from \"../img/projects/contact.jpg\";\r\nimport counterApp from \"../img/projects/counter-app.jpg\";\r\nimport cssVariables from \"../img/projects/css-var.jpg\";\r\nimport exchange from \"../img/projects/exchange.jpg\";\r\nimport todoList from \"../img/projects/todoList.jpg\";\r\nimport vpanels from \"../img/projects/vpanels1.jpg\";\r\nimport codencja from \"../img/projects/codenc.jpg\";\r\nimport memoryCards from \"../img/projects/memorycards.jpg\";\r\nimport calculator from \"../img/projects/calcMVC.jpg\";\r\nimport forms from \"../img/projects/formsg1g.jpg\";\r\nimport php_get_xml from \"../img/projects/php_get_xml_p.jpg\";\r\nimport react_table_json_db from \"../img/projects/react-tab-json-mock-p.jpg\";\r\nimport dishReduxForm from \"../img/projects/dishRdxForm.jpg\";\r\nimport MuiDataGrid from \"../img/projects/MuiDataGrid.jpg\";\r\nimport SPOJ from \"../img/projects/SPOJEx.jpg\";\r\nimport \"../css/projects.css\";\r\n\r\nconst projectsPhotos = [\r\n  // [\r\n  //   codencja,\r\n  //   \"Portfolio Page - REACT.JS, CSS, Hooks, Bootstrap4, etc. Different start page for mobiles and moz\",\r\n  //   \"https://github.com/kodencja/codencja-react\",\r\n  // ],\r\n  [\r\n    MuiDataGrid,\r\n    \"JSON-SERVER database with Material UI dataGrid, React FINAL FORM, REDUX, AXIOS\",\r\n    \"https://database-table-json-server-mui.herokuapp.com/\",\r\n  ],\r\n  [\r\n    react_table_json_db,\r\n    \"JSON database (books) in react table - react.js, react-table, react-boostrap\",\r\n    \"https://kodencja.github.io/react-table-mocked-json/\",\r\n  ],\r\n  [\r\n    php_get_xml,\r\n    \"Get XML file to JSON - Get xml data from url or file and convert it to json format using PHP 8\",\r\n    \"https://github.com/kodencja/php-get-xml-data\",\r\n  ],\r\n  [\r\n    memoryCards,\r\n    \"Memory Cards Game - REACT.JS, CSS-GRID, SASS\",\r\n    \"https://kodencja.github.io/cards-memory/\",\r\n  ],\r\n  [\r\n    forms,\r\n    \"Forms Generator - TypeScript, SASS, HTML. Each input is generated through class instance\",\r\n    \"https://kodencja.github.io/forms-generator/index.html\",\r\n  ],\r\n  [\r\n    cssVariables,\r\n    \"Change css variables by inputs - REACT.JS, CSS, Bootstrap-4\",\r\n    \"https://kodencja.github.io/css-variables/\",\r\n  ],\r\n  [\r\n    counterApp,\r\n    \"Let's buy some products - REACT.JS, CSS, Bootstrap-4\",\r\n    \"https://kodencja.github.io/counter-app/\",\r\n  ],\r\n  [\r\n    vpanels,\r\n    \"Fun with flex - REACT.JS, SASS\",\r\n    \"https://kodencja.github.io/vpanels/\",\r\n  ],\r\n  // [\r\n  //   dishForm,\r\n  //   \"Form to order a dish - REACT.JS, SASS, API POST\",\r\n  //   \"https://kodencja.github.io/dish-form/\",\r\n  // ],\r\n  [\r\n    dishReduxForm,\r\n    \"Form to order a dish - REACT-REDUX, redux-form, SASS, API POST\",\r\n    \"https://kodencja.github.io/dish-redux-form/\",\r\n  ],\r\n  [\r\n    calculator,\r\n    \"Calculator - JS, SASS, HTML, MVC\",\r\n    \"https://kodencja.github.io/calc-mvc/\",\r\n  ],\r\n\r\n  [\r\n    clockWall,\r\n    \"Wall-clock animation - REACT.JS, CSS\",\r\n    \"https://kodencja.github.io/wall-clock/\",\r\n  ],\r\n\r\n  [\r\n    exchange,\r\n    \"Currency exchange rate with validation - React.js, Node.js, JS, CSS\",\r\n    \"https://exchange-codenc.herokuapp.com/\",\r\n  ],\r\n  // [\r\n  //   contact,\r\n  //   \"Contact Form Page with validation - React.js, Node.js, JS, CSS\",\r\n  //   \"https://contactcodenc.herokuapp.com/\",\r\n  // ],\r\n\r\n  // [\r\n  //   todoList,\r\n  //   \"Todo-list with axios - REACT.JS, CSS\",\r\n  //   \"https://kodencja.github.io/react-todo/\",\r\n  // ],\r\n  [\r\n    SPOJ,\r\n    \"Exercises from Polish SPOJ - C++\",\r\n    \"https://github.com/kodencja/SPOJ-exercises\",\r\n  ],\r\n];\r\n\r\nconst Projects = ({ onTitleAnim }) => {\r\n  const projectsRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Projects Comp. mounted\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const projCurrent = projectsRef.current;\r\n    projCurrent.forEach((project) => {\r\n      project.addEventListener(\"mousemove\", (e) => {\r\n        projectTransform(project, e);\r\n      });\r\n      project.addEventListener(\"mouseleave\", () => {\r\n        projectStartTransform(project);\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      projCurrent.forEach((project) => {\r\n        project.removeEventListener(\"mousemove\", (e) => {\r\n          projectTransform(project, e);\r\n        });\r\n        project.removeEventListener(\"mouseleave\", () => {\r\n          projectStartTransform(project);\r\n        });\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  const projectTransform = (project, e) => {\r\n    const deg = 30;\r\n    const stepX = deg / project.clientWidth;\r\n    const stepY = deg / project.clientHeight;\r\n    let rotateX = 0.5 * deg - e.layerY * stepY;\r\n    let rotateY = -0.5 * deg + e.layerX * stepX;\r\n    project.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(1.05)`;\r\n  };\r\n\r\n  const projectStartTransform = (project) => {\r\n    project.style.transform = `perspective(1000px) rotateX(0deg) rotateY(0deg) scale(1)`;\r\n  };\r\n\r\n  const addToProjectRef = (el) => {\r\n    if (el && !projectsRef.current.includes(el)) {\r\n      projectsRef.current.push(el);\r\n    }\r\n  };\r\n\r\n  const projects = projectsPhotos.map((project, ind) => {\r\n    return (\r\n      <div\r\n        key={ind}\r\n        className=\"project\"\r\n        ref={addToProjectRef}\r\n        style={{ backgroundImage: \"url(\" + project[0] + \")\" }}\r\n      >\r\n        <a\r\n          href={project[2]}\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n          className=\"project-link\"\r\n        >\r\n          <div className=\"project-description\">{project[1]}</div>\r\n        </a>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <header className=\"title sec-title\">\r\n        {onTitleAnim(\"MY\\u00A0PROJECTS\")}\r\n      </header>\r\n      <div className=\"container py-4\">\r\n        <div className=\"row mx-auto projects-row px-2\">{projects}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Projects);\r\n","C:\\CODING\\React\\codencr\\src\\componentsHook\\Contact.jsx",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useHide.js",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useScrollTo.js",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useMoveFrontPage.js",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\BrickBoxes.jsx",["124","125","126"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport bgrStartPhoto from \"../img/signs3code2.jpg\";\r\n\r\nconst titles = [\r\n  [\"import\\u00A0\", \"\\u00A0Knowledge\", \"\\u00A0from\\u00A0\", \"'learning'\"],\r\n  [\"import\\u00A0\", \"Success\", \"\\u00A0from\\u00A0\", \"'work'\", \";\"],\r\n  [\"while\", \"(\\u00A0!Success\", \"(Knowledge)\", \")\\u00A0{\"],\r\n  [\"import\\u00A0\", \"Creativity\", \"\\u00A0from\\u00A0\", \"'imagination'\"],\r\n  [\"import\\u00A0\", \"Coffee\", \"\\u00A0from\\u00A0\", \"'farmers'\"],\r\n  [\"drink\", \"(Coffee);\"],\r\n  [\"Success\", \"(Creativity);\"],\r\n  [\"};\"],\r\n];\r\n\r\nfunction BrickBoxes({ onState, onDispatch, onRef, onTransEnd }) {\r\n  const bricksRef = useRef([]);\r\n  const arrLenght = useRef();\r\n  const n = useRef(-1);\r\n  const rowNo = useRef(0);\r\n  const intervalTime = useRef(60);\r\n\r\n  const noOfAllBoxes = useRef(0);\r\n  const bricksInRow = useRef([]);\r\n  const [bricks, setBricks] = useState([]);\r\n  const [mobileMozSet, setMobileMozSet] = useState(false);\r\n\r\n  const boxIntervalIn = useRef();\r\n  const boxIntervalOut = useRef();\r\n\r\n  const { noOfColsNo, noOfRowsNo, boxAnimTimeNo, ifMobileOrMoz, boxesArrNo } =\r\n    onState;\r\n\r\n  //  console.log(\"BrickBoxes Comp. rendered!\");\r\n\r\n  useEffect(() => {\r\n    if (boxesArrNo.length > 0) {\r\n      if (noOfColsNo > 10) {\r\n        onDispatch({\r\n          type: \"boxAnimTimeNo\",\r\n          value: boxAnimTimeNo + 1500,\r\n        });\r\n        // console.log(\"css/curtail.css\");\r\n        require(\"../css/curtain.css\");\r\n      } else {\r\n        // console.log(\"css/curtailMoz.css\");\r\n        onDispatch({ type: \"ifMobileOrMoz\", value: true });\r\n        require(\"../css/curtainMoz.css\");\r\n      }\r\n      noOfAllBoxes.current = noOfColsNo * noOfRowsNo;\r\n      setMobileMozSet(true);\r\n    }\r\n  }, [boxesArrNo]);\r\n\r\n  useEffect(() => {\r\n    if (mobileMozSet) {\r\n      createBoxes();\r\n    }\r\n  }, [mobileMozSet]);\r\n\r\n  useEffect(() => {\r\n    if (bricks.length > 0) {\r\n      setTimeout(() => {\r\n        boxIntervalIn.current = setInterval(() => {\r\n          randomBoxAppearOrDisappear(\"start\");\r\n        }, intervalTime.current);\r\n      }, 1000);\r\n    }\r\n    // clean up function\r\n    return () => {\r\n      clearInterval(boxIntervalIn.current);\r\n    };\r\n  }, [bricks]);\r\n\r\n  // add brick-box to useREF array\r\n  const addToBricksRef = (el) => {\r\n    if (el && el !== undefined && !bricksRef.current.includes(el)) {\r\n      bricksRef.current.push(el);\r\n    }\r\n  };\r\n\r\n  // function responsible for appearing or disappearing a random box\r\n  const randomBoxAppearOrDisappear = (startOrEnd) => {\r\n    // choose a random box number without repeating\r\n    const number = randomWithoutRepeating();\r\n    const box = bricksRef.current.filter((el) => {\r\n      return el.classList.contains(`box-${number}`);\r\n    });\r\n\r\n    // handle each brick-box appearing\r\n    if (number > -1 && startOrEnd === \"start\") {\r\n      if (ifMobileOrMoz) {\r\n        box[0].classList.remove(\"boxAnimRev\");\r\n        box[0].classList.add(\"boxAnimMoz\");\r\n      } else {\r\n        box[0].classList.add(\"boxAnim\");\r\n        box[0].style.backgroundImage = `url(${bgrStartPhoto})`;\r\n      }\r\n    }\r\n\r\n    // call box disappearing interval\r\n    else if (number <= -1 && startOrEnd === \"start\") {\r\n      setTimeout(() => {\r\n        noOfAllBoxes.current = noOfColsNo * noOfRowsNo;\r\n        n.current = -1;\r\n        rowNo.current = 0;\r\n        boxDisappear();\r\n      }, 4000);\r\n    }\r\n\r\n    // handle box disappearing one by one\r\n    else if (number > -1 && startOrEnd === \"end\") {\r\n      if (ifMobileOrMoz) {\r\n        // console.log(\"ifMobileOrMoz is true\");\r\n        box[0].classList.remove(\"boxAnimMoz\");\r\n        box[0].classList.add(\"boxAnimRev\");\r\n      } else {\r\n        // console.log(\"ifMobileOrMoz is false\");\r\n        box[0].classList.remove(\"boxAnim\");\r\n        const boxWidth = box[0].offsetWidth;\r\n        const boxHeight = box[0].offsetHeight;\r\n\r\n        box[0].style.transform = `translate(-${\r\n          boxWidth * (number - 1 - noOfColsNo * (rowNo.current - 1))\r\n        }px, -${boxHeight * (rowNo.current - 1)}px) scale(0.25, 0.35)`;\r\n      }\r\n    }\r\n\r\n    // finally stop displaying \"curtail\" element and let FRONTpage to be displayed by setting 'onTransEnd' prop to 'true'\r\n    else {\r\n      setTimeout(() => {\r\n        onRef.style.backgroundColor = \"transparent\";\r\n        onRef.style.opacity = \"0\";\r\n        onTransEnd(true);\r\n        onRef.style.display = \"none\";\r\n        setBricks([]);\r\n      }, boxAnimTimeNo);\r\n    }\r\n  };\r\n\r\n  // choose a random number without repeating\r\n  const randomWithoutRepeating = () => {\r\n    if (noOfAllBoxes.current > 0) {\r\n      let randomNo;\r\n\r\n      // check if a number of the row must be increased i.e. if all boxes from the current row have already been drawn or not yet\r\n      if ((n.current + 1) % noOfColsNo === 0) {\r\n        bricksInRow.current = [];\r\n        for (\r\n          let i = noOfColsNo * rowNo.current + 1;\r\n          i <= noOfColsNo * (rowNo.current + 1);\r\n          i++\r\n        ) {\r\n          bricksInRow.current.push(i);\r\n        }\r\n        arrLenght.current = bricksInRow.current.length;\r\n        rowNo.current++;\r\n        n.current = -1;\r\n      }\r\n      n.current++;\r\n\r\n      // random a number from a number equals the length of an array containing number of all boxes in the current row\r\n      const randomInd = Math.floor(Math.random() * arrLenght.current);\r\n\r\n      randomNo = bricksInRow.current[randomInd];\r\n\r\n      // po wylosowaniu danej liczby z bricksInRow przesuwamy go na koniec tablicy po czym usuwamy ten ostatni elemnt z tej tablicy\r\n      bricksInRow.current.splice(\r\n        randomInd,\r\n        1,\r\n        bricksInRow.current[arrLenght.current - 1]\r\n      );\r\n      bricksInRow.current.splice(-1, 1);\r\n\r\n      // shorten the arrLenght and noOfAllBoxes by 1\r\n      arrLenght.current--;\r\n      noOfAllBoxes.current--;\r\n\r\n      return randomNo;\r\n    } else {\r\n      clearInterval(boxIntervalIn.current);\r\n      clearInterval(boxIntervalOut.current);\r\n      return -1;\r\n    }\r\n  };\r\n\r\n  // start box disappear interval\r\n  const boxDisappear = () => {\r\n    boxIntervalOut.current = setInterval(() => {\r\n      randomBoxAppearOrDisappear(\"end\");\r\n    }, intervalTime.current / 3);\r\n  };\r\n\r\n  // chooseTitle - function dealing with putting words from \"TITLES\" array in the right box of curtail grid, with the right class adding a specific font color to each word or character\r\n  const chooseTitle = (rowN, ind) => {\r\n    let word, p;\r\n    switch (rowN) {\r\n      case 2:\r\n        if (ind === 1 || ind === 3) {\r\n          word = titles[0][ind - 1];\r\n          p = (\r\n            <p key={\"p\" + rowN + ind} className=\"start-title pink\">\r\n              {word}\r\n            </p>\r\n          );\r\n        } else if (ind === 4) {\r\n          word = titles[0][ind - 1];\r\n          p = (\r\n            <p key={\"p\" + rowN + ind} className=\"start-title yellow\">\r\n              {word}\r\n            </p>\r\n          );\r\n        } else if (ind === 2) {\r\n          word = titles[0][ind - 1];\r\n          p = (\r\n            <p key={\"p\" + rowN + ind} className=\"start-title\">\r\n              {word}\r\n            </p>\r\n          );\r\n        }\r\n        return p;\r\n\r\n      case 4:\r\n        if (ind === 1 || ind === 3) {\r\n          word = titles[1][ind - 1];\r\n          p = (\r\n            <p key={\"p\" + rowN + ind} className=\"start-title pink\">\r\n              {word}\r\n            </p>\r\n          );\r\n        } else if (ind === 4) {\r\n          word = titles[1][ind - 1];\r\n          p = (\r\n            <p key={\"p\" + rowN + ind} className=\"start-title yellow\">\r\n              {word}\r\n            </p>\r\n          );\r\n        } else if (ind === 2) {\r\n          word = titles[1][ind - 1];\r\n          p = (\r\n            <p key={\"p\" + rowN + ind} className=\"start-title\">\r\n              {word}\r\n            </p>\r\n          );\r\n        }\r\n        return p;\r\n\r\n      case 6:\r\n        if (ind === 1) {\r\n          word = titles[2][ind - 1];\r\n          p = (\r\n            <p key={\"p\" + rowN + ind} className=\"start-title red\">\r\n              {word}\r\n            </p>\r\n          );\r\n        } else if (ind === 3) {\r\n          word = titles[2][ind - 1];\r\n\r\n          const spans = [...word].map((e, j) => {\r\n            if (j === 0 || j > 9) {\r\n              return (\r\n                <span key={\"s\" + rowN + ind + j} className=\"white\">\r\n                  {e}\r\n                </span>\r\n              );\r\n            } else {\r\n              return (\r\n                <span key={\"s\" + rowN + ind + j} className=\"light-blue\">\r\n                  {e}\r\n                </span>\r\n              );\r\n            }\r\n          });\r\n          p = (\r\n            <p key={\"p\" + rowN + ind} className=\"start-title\">\r\n              {spans}\r\n            </p>\r\n          );\r\n        } else if (ind === 2) {\r\n          word = titles[2][ind - 1];\r\n          const spans = [...word].map((e, j) => {\r\n            if (j === 0) {\r\n              return (\r\n                <span key={\"s\" + rowN + ind + j} className=\"white\">\r\n                  {e}\r\n                </span>\r\n              );\r\n            } else if (j === 2) {\r\n              return (\r\n                <span key={\"s\" + rowN + ind + j} className=\"red\">\r\n                  {e}\r\n                </span>\r\n              );\r\n            } else {\r\n              return (\r\n                <span key={\"s\" + rowN + ind + j} className=\"green\">\r\n                  {e}\r\n                </span>\r\n              );\r\n            }\r\n          });\r\n\r\n          p = (\r\n            <p key={\"p\" + rowN + ind} className=\"start-title\">\r\n              {spans}\r\n            </p>\r\n          );\r\n        } else if (ind === 4) {\r\n          word = titles[2][ind - 1];\r\n          p = (\r\n            <p key={\"p\" + rowN + ind} className=\"start-title white\">\r\n              {word}\r\n            </p>\r\n          );\r\n        }\r\n        return p;\r\n\r\n      case 8:\r\n        if (ind === 2 || ind === 4) {\r\n          word = titles[3][ind - 2];\r\n          p = (\r\n            <p key={\"p\" + rowN + ind} className=\"start-title pink\">\r\n              {word}\r\n            </p>\r\n          );\r\n        } else if (ind === 5) {\r\n          word = titles[3][ind - 2];\r\n          p = (\r\n            <p key={\"p\" + rowN + ind} className=\"start-title yellow\">\r\n              {word}\r\n            </p>\r\n          );\r\n        } else if (ind === 3) {\r\n          word = titles[3][ind - 2];\r\n          p = (\r\n            <p key={\"p\" + rowN + ind} className=\"start-title\">\r\n              {word}\r\n            </p>\r\n          );\r\n        }\r\n        return p;\r\n\r\n      case 10:\r\n        if (ind === 2 || ind === 4) {\r\n          word = titles[4][ind - 2];\r\n          p = (\r\n            <p key={\"p\" + rowN + ind} className=\"start-title pink\">\r\n              {word}\r\n            </p>\r\n          );\r\n        } else if (ind >= 5 && ind < 6) {\r\n          word = titles[4][ind - 2];\r\n          p = (\r\n            <p key={\"p\" + rowN + ind} className=\"start-title yellow\">\r\n              {word}\r\n            </p>\r\n          );\r\n        } else if (ind === 3) {\r\n          word = titles[4][ind - 2];\r\n          p = (\r\n            <p key={\"p\" + rowN + ind} className=\"start-title\">\r\n              {word}\r\n            </p>\r\n          );\r\n        }\r\n        return p;\r\n\r\n      case 12:\r\n        if (ind === 2) {\r\n          word = titles[5][ind - 2];\r\n          p = <p className=\"start-title green\">{word}</p>;\r\n        } else if (ind === 3) {\r\n          word = titles[5][ind - 2];\r\n          const spans = [...word].map((e, j) => {\r\n            if (j === 0 || j > 6) {\r\n              return (\r\n                <span key={\"s\" + rowN + ind + j} className=\"white\">\r\n                  {e}\r\n                </span>\r\n              );\r\n            } else {\r\n              return (\r\n                <span key={\"s\" + rowN + ind + j} className=\"light-blue\">\r\n                  {e}\r\n                </span>\r\n              );\r\n            }\r\n          });\r\n          p = <p className=\"start-title\">{spans}</p>;\r\n        }\r\n        return p;\r\n\r\n      case 14:\r\n        if (ind === 2) {\r\n          word = titles[6][ind - 2];\r\n          p = <p className=\"start-title green\">{word}</p>;\r\n        } else if (ind === 3) {\r\n          word = titles[6][ind - 2];\r\n          const spans = [...word].map((e, j) => {\r\n            if (j === 0 || j > 10) {\r\n              return (\r\n                <span key={\"s\" + rowN + ind + j} className=\"white\">\r\n                  {e}\r\n                </span>\r\n              );\r\n            } else {\r\n              return (\r\n                <span key={\"s\" + rowN + ind + j} className=\"light-blue\">\r\n                  {e}\r\n                </span>\r\n              );\r\n            }\r\n          });\r\n          p = <p className=\"start-title\">{spans}</p>;\r\n        }\r\n        return p;\r\n\r\n      case 16:\r\n        if (ind === 1) {\r\n          word = titles[7][ind - 1];\r\n          p = (\r\n            <p key={\"p\" + rowN + ind} className=\"start-title white\">\r\n              {word}\r\n            </p>\r\n          );\r\n        }\r\n        return p;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const createBoxes = () => {\r\n    let brickBoxes = [];\r\n    if (!ifMobileOrMoz) {\r\n      brickBoxes = boxesArrNo.map((el, i) => {\r\n        return (\r\n          <div\r\n            key={i}\r\n            ref={addToBricksRef}\r\n            className={\"brick-box box-\" + el}\r\n          ></div>\r\n        );\r\n      });\r\n    } else {\r\n      let ind = 0;\r\n      brickBoxes = boxesArrNo.map((el, i) => {\r\n        const rowN = Math.floor(i / noOfColsNo);\r\n        if (i === noOfColsNo * rowN) {\r\n          ind = 0;\r\n        }\r\n        const resultTitle = chooseTitle(rowN, ind);\r\n        ind++;\r\n\r\n        return (\r\n          <div\r\n            key={i + 1}\r\n            ref={addToBricksRef}\r\n            className={\"brick-box-moz box-\" + el}\r\n          >\r\n            {resultTitle}\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n    setTimeout(() => {\r\n      setBricks(brickBoxes);\r\n    }, 25);\r\n  };\r\n\r\n  return <>{bricks.length > 0 ? bricks : null}</>;\r\n}\r\n\r\nexport default React.memo(BrickBoxes);\r\n","C:\\CODING\\React\\codencr\\src\\componentsHook\\Curtain.jsx",["127"],"import React, { useEffect, useRef, useReducer, lazy, Suspense } from \"react\";\r\nimport \"../css/curtainStart.css\";\r\n\r\n// const BrickBoxes = lazy(()=> import(\"./BrickBoxes\"));\r\nlet BrickBoxes;\r\n\r\nconst initState = {\r\n  ifMobileOrMoz: false,\r\n  boxAnimTimeNo: 0,\r\n  noOfColsNo: 0,\r\n  noOfRowsNo: 0,\r\n  boxesArrNo: [],\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ifMobileOrMoz\":\r\n      return { ...state, ifMobileOrMoz: action.value };\r\n    case \"boxAnimTimeNo\":\r\n      return { ...state, boxAnimTimeNo: action.value };\r\n    case \"noOfColsNo\":\r\n      return { ...state, noOfColsNo: action.value };\r\n    case \"noOfRowsNo\":\r\n      return { ...state, noOfRowsNo: action.value };\r\n    case \"boxesArrNo\":\r\n      return { ...state, boxesArrNo: [...action.value] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction Curtain({ onTransEnd }) {\r\n  // console.log(\"Curtail Comp. rendered!\");\r\n\r\n  const [state, dispatch] = useReducer(reducer, initState);\r\n  const curtailRef = useRef();\r\n\r\n  const { noOfColsNo, noOfRowsNo, boxesArrNo } = state;\r\n\r\n  useEffect(() => {\r\n    getStyleVars();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    BrickBoxes = lazy(() => import(\"./BrickBoxes\"));\r\n  }, [boxesArrNo]);\r\n\r\n  useEffect(() => {\r\n    if (noOfColsNo > 0) {\r\n      // empty array with only numbers\r\n      const arrayNoEmpty = new Array(noOfColsNo * noOfRowsNo);\r\n\r\n      // fill the empty array with numbers\r\n      dispatch({\r\n        type: \"boxesArrNo\",\r\n        value: arrayNoEmpty.fill(0).map((el, ind) => ind + 1),\r\n      });\r\n    }\r\n  }, [noOfColsNo]);\r\n\r\n  const getStyleVars = () => {\r\n    const boxAnimTime = window\r\n      .getComputedStyle(curtailRef.current)\r\n      .getPropertyValue(\"--box-anim-time\");\r\n\r\n    dispatch({\r\n      type: \"boxAnimTimeNo\",\r\n      value: parseFloat(boxAnimTime) * 1000 + 250,\r\n    });\r\n\r\n    if (window.orientation !== undefined) {\r\n      console.log(\"mobile\");\r\n      dispatch({ type: \"noOfColsNo\", value: 9 });\r\n      dispatch({ type: \"noOfRowsNo\", value: 19 });\r\n      dispatch({ type: \"ifMobileOrMoz\", value: true });\r\n    } else {\r\n      const noOfCols = window\r\n        .getComputedStyle(curtailRef.current)\r\n        .getPropertyValue(\"--no-of-cols\");\r\n      const noOfRows = window\r\n        .getComputedStyle(curtailRef.current)\r\n        .getPropertyValue(\"--no-of-rows\");\r\n\r\n      dispatch({ type: \"noOfColsNo\", value: parseFloat(noOfCols) });\r\n      dispatch({ type: \"noOfRowsNo\", value: parseFloat(noOfRows) });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"curtail\"\r\n        ref={curtailRef}\r\n        style={\r\n          noOfColsNo > 10\r\n            ? { backgroundColor: \"#333738\" }\r\n            : { backgroundColor: \"whitesmoke\" }\r\n        }\r\n      >\r\n        <Suspense fallback={<p>...</p>}>\r\n          {state.boxesArrNo.length > 0 ? (\r\n            <BrickBoxes\r\n              onState={state}\r\n              onDispatch={dispatch}\r\n              onRef={curtailRef.current}\r\n              onTransEnd={onTransEnd}\r\n            />\r\n          ) : null}\r\n        </Suspense>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Curtain;\r\n",{"ruleId":"128","severity":1,"message":"129","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":14},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"128","severity":1,"message":"136","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":36},{"ruleId":"128","severity":1,"message":"137","line":1,"column":38,"nodeType":"130","messageId":"131","endLine":1,"endColumn":42},{"ruleId":"138","severity":1,"message":"139","line":112,"column":6,"nodeType":"140","endLine":112,"endColumn":23,"suggestions":"141"},{"ruleId":"138","severity":1,"message":"142","line":141,"column":6,"nodeType":"140","endLine":141,"endColumn":27,"suggestions":"143"},{"ruleId":"138","severity":1,"message":"144","line":158,"column":6,"nodeType":"140","endLine":158,"endColumn":8,"suggestions":"145"},{"ruleId":"138","severity":1,"message":"146","line":245,"column":6,"nodeType":"140","endLine":245,"endColumn":8,"suggestions":"147"},{"ruleId":"138","severity":1,"message":"148","line":255,"column":6,"nodeType":"140","endLine":255,"endColumn":19,"suggestions":"149"},{"ruleId":"138","severity":1,"message":"150","line":263,"column":6,"nodeType":"140","endLine":263,"endColumn":30,"suggestions":"151"},{"ruleId":"138","severity":1,"message":"152","line":280,"column":6,"nodeType":"140","endLine":280,"endColumn":18,"suggestions":"153"},{"ruleId":"138","severity":1,"message":"154","line":76,"column":6,"nodeType":"140","endLine":76,"endColumn":8,"suggestions":"155"},{"ruleId":"138","severity":1,"message":"156","line":40,"column":6,"nodeType":"140","endLine":40,"endColumn":8,"suggestions":"157"},{"ruleId":"128","severity":1,"message":"158","line":58,"column":7,"nodeType":"130","messageId":"131","endLine":58,"endColumn":19},{"ruleId":"138","severity":1,"message":"159","line":87,"column":6,"nodeType":"140","endLine":87,"endColumn":8,"suggestions":"160"},{"ruleId":"138","severity":1,"message":"161","line":108,"column":6,"nodeType":"140","endLine":108,"endColumn":34,"suggestions":"162"},{"ruleId":"138","severity":1,"message":"163","line":45,"column":6,"nodeType":"140","endLine":45,"endColumn":23,"suggestions":"164"},{"ruleId":"138","severity":1,"message":"163","line":51,"column":6,"nodeType":"140","endLine":51,"endColumn":21,"suggestions":"165"},{"ruleId":"138","severity":1,"message":"166","line":198,"column":6,"nodeType":"140","endLine":198,"endColumn":23,"suggestions":"167"},{"ruleId":"168","severity":1,"message":"169","line":33,"column":29,"nodeType":"170","messageId":"171","endLine":33,"endColumn":33},{"ruleId":"168","severity":1,"message":"169","line":91,"column":29,"nodeType":"170","messageId":"171","endLine":91,"endColumn":33},{"ruleId":"128","severity":1,"message":"172","line":3,"column":8,"nodeType":"130","messageId":"131","endLine":3,"endColumn":15},{"ruleId":"128","severity":1,"message":"173","line":7,"column":8,"nodeType":"130","messageId":"131","endLine":7,"endColumn":16},{"ruleId":"128","severity":1,"message":"174","line":9,"column":8,"nodeType":"130","messageId":"131","endLine":9,"endColumn":16},{"ruleId":"138","severity":1,"message":"175","line":52,"column":6,"nodeType":"140","endLine":52,"endColumn":18,"suggestions":"176"},{"ruleId":"138","severity":1,"message":"177","line":58,"column":6,"nodeType":"140","endLine":58,"endColumn":20,"suggestions":"178"},{"ruleId":"138","severity":1,"message":"179","line":72,"column":6,"nodeType":"140","endLine":72,"endColumn":14,"suggestions":"180"},{"ruleId":"138","severity":1,"message":"181","line":59,"column":6,"nodeType":"140","endLine":59,"endColumn":18,"suggestions":"182"},"no-unused-vars","'Popper' is defined but never used.","Identifier","unusedVar","no-native-reassign",["183"],"no-negated-in-lhs",["184"],"'useEffect' is defined but never used.","'lazy' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'startCountFlag'. Either include it or remove the dependency array.","ArrayExpression",["185"],"React Hook useEffect has an unnecessary dependency: 'servicesRef.current'. Either exclude it or remove the dependency array. Mutable values like 'servicesRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["186"],"React Hook useEffect has missing dependencies: 'handleResize' and 'handleScroll'. Either include them or remove the dependency array.",["187"],"React Hook useEffect has missing dependencies: 'allSectionsTopRef', 'mainmenuRef', 'menuUl', 'moveFrontPage', and 'scrollLink'. Either include them or remove the dependency array.",["188"],"React Hook useEffect has a missing dependency: 'ifStartCount'. Either include it or remove the dependency array.",["189"],"React Hook useEffect has a missing dependency: 'setSizeParallaxBackgroundImage'. Either include it or remove the dependency array.",["190"],"React Hook useEffect has missing dependencies: 'handleAppearing', 'setSizeParallaxBackgroundImage', and 'windowHeight'. Either include them or remove the dependency array.",["191"],"React Hook useEffect has a missing dependency: 'skillsDivs'. Either include it or remove the dependency array. If 'skillsDivs' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["192"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["193"],"'animShowArr1' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'secSliderRef'. Either include it or remove the dependency array.",["194"],"React Hook useEffect has missing dependencies: 'btnNext', 'btnPrev', and 'keepArrowsInsideImg'. Either include them or remove the dependency array.",["195"],"React Hook useEffect has a missing dependency: 'display'. Either include it or remove the dependency array.",["196"],["197"],"React Hook useMemo has a missing dependency: 'spanSubChange'. Either include it or remove the dependency array. You can also do a functional update 'setSpanSubChange(s => ...)' if you only need 'spanSubChange' in the 'setSpanSubChange' call.",["198"],"no-eval","eval can be harmful.","CallExpression","unexpected","'contact' is defined but never used.","'todoList' is defined but never used.","'codencja' is defined but never used.","React Hook useEffect has missing dependencies: 'boxAnimTimeNo', 'noOfColsNo', 'noOfRowsNo', and 'onDispatch'. Either include them or remove the dependency array. If 'onDispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["199"],"React Hook useEffect has a missing dependency: 'createBoxes'. Either include it or remove the dependency array.",["200"],"React Hook useEffect has a missing dependency: 'randomBoxAppearOrDisappear'. Either include it or remove the dependency array.",["201"],"React Hook useEffect has a missing dependency: 'noOfRowsNo'. Either include it or remove the dependency array.",["202"],"no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},"Update the dependencies array to be: [divJustAppeared, startCountFlag]",{"range":"239","text":"240"},"Update the dependencies array to be: []",{"range":"241","text":"242"},"Update the dependencies array to be: [handleResize, handleScroll]",{"range":"243","text":"244"},"Update the dependencies array to be: [allSectionsTopRef, mainmenuRef, menuUl, moveFrontPage, scrollLink]",{"range":"245","text":"246"},"Update the dependencies array to be: [countedFlag, ifStartCount]",{"range":"247","text":"248"},"Update the dependencies array to be: [divsWithMovingBgrImage, setSizeParallaxBackgroundImage]",{"range":"249","text":"250"},"Update the dependencies array to be: [handleAppearing, resizeFlag, setSizeParallaxBackgroundImage, windowHeight]",{"range":"251","text":"252"},"Update the dependencies array to be: [skillsDivs]",{"range":"253","text":"254"},"Update the dependencies array to be: [props]",{"range":"255","text":"256"},"Update the dependencies array to be: [secSliderRef]",{"range":"257","text":"258"},"Update the dependencies array to be: [btnNext, btnPrev, keepArrowsInsideImg, photoWindowWidthDifference]",{"range":"259","text":"260"},"Update the dependencies array to be: [display, textAppearStart]",{"range":"261","text":"262"},"Update the dependencies array to be: [display, spanSubChange]",{"range":"263","text":"264"},"Update the dependencies array to be: [currentSubTitle, spanSubChange]",{"range":"265","text":"266"},"Update the dependencies array to be: [boxAnimTimeNo, boxesArrNo, noOfColsNo, noOfRowsNo, onDispatch]",{"range":"267","text":"268"},"Update the dependencies array to be: [createBoxes, mobileMozSet]",{"range":"269","text":"270"},"Update the dependencies array to be: [bricks, randomBoxAppearOrDisappear]",{"range":"271","text":"272"},"Update the dependencies array to be: [noOfColsNo, noOfRowsNo]",{"range":"273","text":"274"},[4164,4181],"[divJustAppeared, startCountFlag]",[5036,5057],"[]",[5559,5561],"[handleResize, handleScroll]",[8325,8327],"[allSectionsTopRef, mainmenuRef, menuUl, moveFrontPage, scrollLink]",[8666,8679],"[countedFlag, ifStartCount]",[8881,8905],"[divsWithMovingBgrImage, setSizeParallaxBackgroundImage]",[9360,9372],"[handleAppearing, resizeFlag, setSizeParallaxBackgroundImage, windowHeight]",[1264,1266],"[skillsDivs]",[1096,1098],"[props]",[2847,2849],"[secSliderRef]",[3455,3483],"[btnNext, btnPrev, keepArrowsInsideImg, photoWindowWidthDifference]",[1530,1547],"[display, textAppearStart]",[1738,1753],"[display, spanSubChange]",[6979,6996],"[currentSubTitle, spanSubChange]",[1719,1731],"[boxAnimTimeNo, boxesArrNo, noOfColsNo, noOfRowsNo, onDispatch]",[1817,1831],"[createBoxes, mobileMozSet]",[2178,2186],"[bricks, randomBoxAppearOrDisappear]",[1561,1573],"[noOfColsNo, noOfRowsNo]"]