[{"C:\\CODING\\React\\codencr\\src\\index.js":"1","C:\\CODING\\React\\codencr\\src\\App.js":"2","C:\\CODING\\React\\codencr\\src\\reportWebVitals.js":"3","C:\\CODING\\React\\codencr\\src\\componentsHook\\Navbar.jsx":"4","C:\\CODING\\React\\codencr\\src\\componentsHook\\FrontPage.jsx":"5","C:\\CODING\\React\\codencr\\src\\componentsHook\\Skills.jsx":"6","C:\\CODING\\React\\codencr\\src\\componentsHook\\NavItem.jsx":"7","C:\\CODING\\React\\codencr\\src\\componentsHook\\About.jsx":"8","C:\\CODING\\React\\codencr\\src\\componentsHook\\Services.jsx":"9","C:\\CODING\\React\\codencr\\src\\componentsHook\\MenuIcon.jsx":"10","C:\\CODING\\React\\codencr\\src\\componentsHook\\Slider.jsx":"11","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useStateAsync.js":"12","C:\\CODING\\React\\codencr\\src\\componentsHook\\WriteText.jsx":"13","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useAppear.js":"14","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useParallaxBgrImage.js":"15","C:\\CODING\\React\\codencr\\src\\componentsHook\\Projects.jsx":"16","C:\\CODING\\React\\codencr\\src\\componentsHook\\Contact.jsx":"17","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useHide.js":"18","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useScrollTo.js":"19","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useMoveFrontPage.js":"20"},{"size":836,"mtime":1622553000713,"results":"21","hashOfConfig":"22"},{"size":526,"mtime":1622576093190,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":1245,"mtime":1622624114921,"results":"25","hashOfConfig":"22"},{"size":13457,"mtime":1622620919870,"results":"26","hashOfConfig":"22"},{"size":4378,"mtime":1622622822198,"results":"27","hashOfConfig":"22"},{"size":360,"mtime":1622624177686,"results":"28","hashOfConfig":"22"},{"size":1752,"mtime":1621865111329,"results":"29","hashOfConfig":"22"},{"size":2184,"mtime":1622624009505,"results":"30","hashOfConfig":"22"},{"size":448,"mtime":1622620208233,"results":"31","hashOfConfig":"22"},{"size":8047,"mtime":1622620251280,"results":"32","hashOfConfig":"22"},{"size":1275,"mtime":1622575896173,"results":"33","hashOfConfig":"22"},{"size":8422,"mtime":1620719237619,"results":"34","hashOfConfig":"22"},{"size":9188,"mtime":1622575747494,"results":"35","hashOfConfig":"22"},{"size":3022,"mtime":1622575819355,"results":"36","hashOfConfig":"22"},{"size":4255,"mtime":1622610174402,"results":"37","hashOfConfig":"22"},{"size":1374,"mtime":1622613921211,"results":"38","hashOfConfig":"22"},{"size":1936,"mtime":1622575782986,"results":"39","hashOfConfig":"22"},{"size":731,"mtime":1622575845573,"results":"40","hashOfConfig":"22"},{"size":2130,"mtime":1622575779877,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"u5m90o",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"45"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"C:\\CODING\\React\\codencr\\src\\index.js",["86"],"import \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"bootstrap-slider/dist/css/bootstrap-slider.css\"\nimport \"react-multi-carousel/lib/styles.css\";\n// import $ from \"jquery\";\nimport Popper from \"popper.js\";\n// import \"bootstrap/dist/js/bootstrap.bundle.min\";\n// import './fontello/css/fontello.css';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import AppCl from \"./AppCl\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["87","88"],"C:\\CODING\\React\\codencr\\src\\App.js",[],"C:\\CODING\\React\\codencr\\src\\reportWebVitals.js",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\Navbar.jsx",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\FrontPage.jsx",["89","90","91","92","93","94","95"],"C:\\CODING\\React\\codencr\\src\\componentsHook\\Skills.jsx",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\NavItem.jsx",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\About.jsx",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\Services.jsx",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\MenuIcon.jsx",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\Slider.jsx",["96","97","98"],"C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useStateAsync.js",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\WriteText.jsx",["99","100","101","102"],"import React, {\r\n  useRef,\r\n  useEffect,\r\n  useState,\r\n  useCallback,\r\n  useMemo,\r\n} from \"react\";\r\nimport $ from \"jquery\";\r\nimport useStateAsync from \"./customHooks/useStateAsync\";\r\n\r\nfunction WriteText(props) {\r\n  const {\r\n    textAppearStart,\r\n    pauseBetweenNewSentenceAppear,\r\n    pauseAfterAllTextsDisplayed,\r\n    pauseBeforeOneSubTitleSentenceFadeOut,\r\n    timeToDisplayText1,\r\n    timeToDisplayText2,\r\n    mainTitle,\r\n    subTitles,\r\n  } = props;\r\n  // currentSubTitle - musi być w useState a nie w useRef, bo jego zmiana musi wyrenderować nowe zdanie w jsx\r\n  const [currentSubTitle, setCurrentSubTitle] = useStateAsync(\"\", 1000);\r\n  const [spanSubChange, setSpanSubChange] = useState(false);\r\n\r\n  const mainTxtShown = useRef(false);\r\n\r\n  const subTxtCurrentIndex = useRef(0);\r\n\r\n  // mainTxtRef - reference to the div embracing the mainTitle within spanMainTitleRef.current\r\n  const mainTxtRef = useRef();\r\n\r\n  // subTxtRef - reference to the div embracing the currentSubTitle within spanSubTitleRef.current\r\n  const subTxtRef = useRef();\r\n\r\n  // reference array to mainTitle 's each letter embraced around span\r\n  const spanMainTitleRef = useRef([]);\r\n\r\n  // reference array to currentSubTitle 's each letter embraced around span\r\n  const spanSubTitleRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"About render every time\");\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (textAppearStart === true) {\r\n      console.log(\"useEffect spanMainTitleRef\");\r\n      // callDisplay(spanMainTitleRef.current, 0, subTxtCurrentIndex.current);\r\n      display(spanMainTitleRef.current, 0, subTxtCurrentIndex.current);\r\n    }\r\n  }, [textAppearStart]);\r\n\r\n  useEffect(() => {\r\n    // console.log(spanSubTitleRef.current[3]);\r\n    // console.log(spanSubTitleRef.current.length);\r\n    if (mainTxtShown.current === true && spanSubTitleRef.current.length > 0) {\r\n      // console.log(\"useEffect spanSubTitleRef\");\r\n      // callDisplay(spanSubTitleRef.current, 0, subTxtCurrentIndex.current);\r\n      display(spanSubTitleRef.current, 0, subTxtCurrentIndex.current);\r\n    }\r\n  }, [spanSubChange]);\r\n\r\n  // const subTitleAddRef = useCallback(\r\n  const subTitleAddRef = (el) => {\r\n    if (el && el !== null && !spanSubTitleRef.current.includes(el)) {\r\n      // console.log(\"subTitleAddRef Fn\");\r\n      spanSubTitleRef.current.push(el);\r\n      // console.log(\"sub span pushed!\");\r\n    }\r\n  };\r\n\r\n  const mainTitleAddRef = useCallback(\r\n    (el) => {\r\n      if (el && el !== null && !spanMainTitleRef.current.includes(el)) {\r\n        spanMainTitleRef.current.push(el);\r\n      }\r\n    },\r\n    [spanMainTitleRef]\r\n  );\r\n\r\n  // spanTab - spanMainTitleRef or spanSubTitleRef\r\n  // iSubTab - subTxtCurrentIndex\r\n  const display = (spanTab, i, iSubTab) => {\r\n    if (subTxtRef.current.classList.contains(\"fadeOutFast\")) {\r\n      subTxtRef.current.classList.remove(\"fadeOutFast\");\r\n    }\r\n    if (subTxtRef.current.classList.contains(\"fadeOut\")) {\r\n      subTxtRef.current.classList.remove(\"fadeOut\");\r\n    }\r\n    if (mainTxtRef.current.classList.contains(\"fadeOut\")) {\r\n      mainTxtRef.current.classList.remove(\"fadeOut\");\r\n    }\r\n\r\n    // if the mainTitle has not been displayed yet\r\n    if (mainTxtShown.current === false) {\r\n      //   const spansArray = [...this.state.spanMainTitleRefTab];\r\n      if (i < spanTab.length) {\r\n        displayOneSentence(spanTab, i, iSubTab, timeToDisplayText1);\r\n      } else {\r\n        // set current index of the span array to 0\r\n        i = 0;\r\n        mainTxtShown.current = true;\r\n        setTimeout(async () => {\r\n          // console.log(\"call spanSub first\");\r\n\r\n          await setCurrentSubTitle(\r\n            subTitles[subTxtCurrentIndex.current],\r\n            currentSubTitle\r\n          );\r\n          // });\r\n        }, pauseBetweenNewSentenceAppear);\r\n      }\r\n    }\r\n    // if the mainTitle has already been displayed\r\n    else {\r\n      // if index of the particular sentence from subTitle array has not reached its last element\r\n      if (i < spanTab.length) {\r\n        // console.log(\"call spanSub next\");\r\n        displayOneSentence(spanTab, i, iSubTab, timeToDisplayText2);\r\n      }\r\n      // if index of the particular sentence from subTitle array has reached its last element (letter)\r\n      else {\r\n        subTxtCurrentIndex.current++;\r\n        // here we have to clear spanSubTitleRef.current since another spans with another letter will have to be stored in this reference\r\n        spanSubTitleRef.current = [];\r\n\r\n        // if index of the subTitles array HAS NOT reached its last element (sentence) = if index of the subTitles array is less or equal to its last element (sentence)\r\n        if (subTxtCurrentIndex.current < subTitles.length) {\r\n          setTimeout(() => {\r\n            // console.log(subTxtRef.current);\r\n            subTxtRef.current.classList.add(\"fadeOutFast\");\r\n            setTimeout(async () => {\r\n              spanTab.forEach((span) => {\r\n                $(span).css(\"visibility\", \"hidden\");\r\n              });\r\n              await setCurrentSubTitle(\r\n                subTitles[subTxtCurrentIndex.current],\r\n                currentSubTitle\r\n              );\r\n            }, pauseBetweenNewSentenceAppear / 2);\r\n          }, pauseBeforeOneSubTitleSentenceFadeOut);\r\n        }\r\n\r\n        // if index of the subTitles array HAS REACHED its last element (sentence) - so what to do next\r\n        else {\r\n          // console.log(subTxtRef.current);\r\n          setTimeout(() => {\r\n            mainTxtRef.current.classList.add(\"fadeOut\");\r\n            subTxtRef.current.classList.add(\"fadeOut\");\r\n            subTxtCurrentIndex.current = 0;\r\n            mainTxtShown.current = false;\r\n\r\n            setTimeout(() => {\r\n              spanTab.forEach((span) => {\r\n                $(span).css(\"visibility\", \"hidden\");\r\n              });\r\n              spanMainTitleRef.current.forEach((span) => {\r\n                $(span).css(\"visibility\", \"hidden\");\r\n              });\r\n\r\n              setTimeout(() => {\r\n                display(\r\n                  spanMainTitleRef.current,\r\n                  0,\r\n                  subTxtCurrentIndex.current\r\n                );\r\n              }, pauseBetweenNewSentenceAppear);\r\n            }, pauseBetweenNewSentenceAppear);\r\n          }, pauseAfterAllTextsDisplayed);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  //\r\n  // const displayOneSentence = (spanTab, i, titleRefTab, iSubTab, time) => {\r\n  const displayOneSentence = (spanTab, i, iSubTab, time) => {\r\n    setTimeout(() => {\r\n      $(spanTab[i]).css(\"visibility\", \"visible\");\r\n      i++;\r\n      display(spanTab, i, iSubTab);\r\n    }, time);\r\n  };\r\n\r\n  // mainTitle divided into each letter embraced around span\r\n  const mainTitleSpans = useMemo(() => {\r\n    return [...mainTitle].map((letter, ind) => {\r\n      // console.log(\"mainTitleSpan\");\r\n      return (\r\n        <span\r\n          style={\r\n            mainTxtShown.current === false\r\n              ? { visibility: \"hidden\" }\r\n              : { visibility: \"visible\" }\r\n          }\r\n          key={ind}\r\n          ref={mainTitleAddRef}\r\n        >\r\n          {letter}\r\n        </span>\r\n      );\r\n    });\r\n  }, [mainTitle]);\r\n\r\n  // currentSubTitle divided into each letter embraced around span\r\n  const subTitleSpans = useMemo(() => {\r\n    if (currentSubTitle.length > 0) {\r\n      const subTitleArray = [...currentSubTitle].map((letter, ind) => {\r\n        // console.log(\"subTitleSpans\");\r\n\r\n        return (\r\n          <span style={{ visibility: \"hidden\" }} key={ind} ref={subTitleAddRef}>\r\n            {letter}\r\n          </span>\r\n        );\r\n      });\r\n\r\n      // ta poniższa linia uruchamia ciąg wyświetlania subTitles\r\n      // setSpanSubChange let spanSubTitleRef.current to be filled out only after currentSubTitle and consequently  subTitleSpans have changed, not earlier\r\n      setSpanSubChange(!spanSubChange);\r\n      // console.log(\"setSpanSubChange after\");\r\n      return subTitleArray;\r\n    } else {\r\n      return null;\r\n    }\r\n  }, [currentSubTitle]);\r\n\r\n  return (\r\n    <div className=\"row justify-content-left cont-about-me about-me align-left\">\r\n      <div\r\n        className=\"text1 row-text1 col-sm-10 mb-4 h1 animated \"\r\n        ref={mainTxtRef}\r\n      >\r\n        {mainTitleSpans}\r\n      </div>\r\n      <div\r\n        className=\"text2 row-text2 col-sm-10 mb-4 h2 animated \"\r\n        ref={subTxtRef}\r\n      >\r\n        {subTitleSpans}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WriteText;\r\n","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useAppear.js",["103","104"],"import { useState } from \"react\";\r\nimport $ from \"jquery\";\r\n\r\n// dealing with appearing and hiding divs while scrolling\r\nfunction useAppear(\r\n  animShow1,\r\n  animShow2,\r\n  animShow3,\r\n  animShow4,\r\n  animHide1,\r\n  animHide2,\r\n  animHide3,\r\n  animHide4\r\n) {\r\n  const [divJustAppeared, setDivJustAppeared] = useState();\r\n  // resolve must be inside setTimeout function otherwise the result will be executed immediately after invoking the Promise\r\n  // showDivsAnimation(divsToShowInOneRow[rowInd], rowLength, rowInd, appearTime);\r\n  const showDivsAnimation = (oneDiv, rowLength, rowIndex, time) => {\r\n    // console.log(\"showDivsAnimation\");\r\n\r\n    return new Promise((resolve, reject) => {\r\n      if (reject.length > 1) reject(new Error(\"Error\"));\r\n      else {\r\n        if (rowIndex >= 4) {\r\n          const maxIndexLength =\r\n            animShow4.length * Math.floor(rowIndex / animShow4.length);\r\n          // console.log(maxIndexLength);\r\n          rowIndex = rowIndex - maxIndexLength;\r\n        }\r\n        if (rowLength > 4) {\r\n          rowLength = 4;\r\n        }\r\n        const arrShowName = eval(\"animShow\" + rowLength);\r\n        // const arrHideName = eval(\"animHide\" + rowLength);\r\n        setTimeout(() => {\r\n          // remove hide classes\r\n          // resolve(function () {\r\n          if ($(oneDiv).hasClass(animHide1[0])) {\r\n            $(oneDiv).removeClass(animHide1[0]);\r\n            // console.log(\"remove fadeOutDown\");\r\n          } else {\r\n            $(oneDiv).removeClass(function (index, css) {\r\n              // console.log(css);\r\n              return (css.match(/(^|\\s)fade\\S+/g) || []).join(\" \");\r\n            });\r\n          }\r\n          // add the right show class\r\n          $(oneDiv).addClass(arrShowName[rowIndex]);\r\n          setDivJustAppeared(oneDiv);\r\n\r\n          setTimeout(() => {\r\n            // removed show classess\r\n            if ($(oneDiv).hasClass(animShow1[0])) {\r\n              $(oneDiv).removeClass(animShow1[0]);\r\n            } else {\r\n              // $(oneDiv).removeClass(state.arrHideName[rowIndex]);\r\n              $(oneDiv).removeClass(function (index, css) {\r\n                // console.log(css);\r\n                return (css.match(/(^|\\s)fade\\S+/g) || []).join(\" \");\r\n              });\r\n            }\r\n\r\n            $(oneDiv).addClass(\"appeared\");\r\n\r\n            if ($(oneDiv).hasClass(\"box\")) {\r\n              $(oneDiv).addClass(\"box-after-appear\");\r\n            } else if ($(oneDiv).hasClass(\"flip-card\")) {\r\n              $(oneDiv).addClass(\"flip-card-after-appear\");\r\n            }\r\n          }, 1300);\r\n          resolve(arrShowName);\r\n        }, time);\r\n      }\r\n    });\r\n  };\r\n\r\n  const hideDivsAnimation = (oneDiv, rowLength, rowIndex, time) => {\r\n    // console.log(\"hideDivsAnimation\");\r\n    return new Promise((resolve, reject) => {\r\n      if (reject.length > 1) reject(new Error(\"Error\"));\r\n      else {\r\n        if (rowIndex >= 4) {\r\n          const maxIndexLength =\r\n            animShow4.length * Math.floor(rowIndex / animShow4.length);\r\n          rowIndex = rowIndex - maxIndexLength;\r\n        }\r\n        if (rowLength > 4) {\r\n          rowLength = 4;\r\n        }\r\n\r\n        const arrHideName = eval(\"animHide\" + rowLength);\r\n        setTimeout(() => {\r\n          $(oneDiv).addClass(arrHideName[rowIndex]);\r\n          $(oneDiv).removeClass(\"appeared\");\r\n        }, time / 3);\r\n        resolve(arrHideName);\r\n      }\r\n    });\r\n  };\r\n\r\n  // usuwa klasę \"NotInView\" a dodaje \"inView\" dla elementów znajdujących się w jednym rzędzie\r\n  const showDiv = (\r\n    divsToAppear,\r\n    indexInAllAppearDivs,\r\n    elem,\r\n    elemTopConst,\r\n    elemNext,\r\n    elemNextTopConst\r\n  ) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      // console.log(\"showDiv Fn\");\r\n      if (divsToAppear.length <= 0) reject(new Error(\"Error\"));\r\n      else {\r\n        // if the element's top value is the same as its neighbour top value and the neighbour / next element exist at all\r\n        if (\r\n          (elemTopConst === elemNextTopConst && elemNext != null) ||\r\n          elemTopConst !== elemNextTopConst ||\r\n          elemNext === null ||\r\n          indexInAllAppearDivs === divsToAppear.length - 1\r\n        ) {\r\n          $(elem).removeClass(\"NotInView\");\r\n          $(elem).addClass(\"inView\");\r\n        }\r\n        resolve({\r\n          element: elem,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  // hiding elements\r\n  const hideDiv = (\r\n    divsToAppear,\r\n    indexInAllAppearDivs,\r\n    elem,\r\n    elemTopConst,\r\n    elemNext,\r\n    elemNextTopConst\r\n  ) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (divsToAppear.length <= 0) reject(new Error(\"Error\"));\r\n      else {\r\n        if (\r\n          (elemNextTopConst === elemTopConst && elemNext != null) ||\r\n          elemNextTopConst !== elemTopConst ||\r\n          elemNext === null ||\r\n          indexInAllAppearDivs === divsToAppear.length - 1\r\n        ) {\r\n          if ($(elem).hasClass(\"box-after-appear\")) {\r\n            $(elem).removeClass(\"box-after-appear\");\r\n          } else if ($(elem).hasClass(\"flip-card-after-appear\")) {\r\n            $(elem).removeClass(\"flip-card-after-appear\");\r\n          }\r\n          $(elem).removeClass(\"inView\");\r\n          $(elem).addClass(\"NotInView\");\r\n        }\r\n        resolve({\r\n          element: elem,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const getDivTopVal = (frontScroll, elem) => {\r\n    // console.log(\"getDivTopVal Fn\");\r\n    return new Promise((resolve, reject) => {\r\n      if (reject.length > 1)\r\n        reject(new Error(\"Error to get div appear top value\"));\r\n      else {\r\n        resolve({\r\n          elem: elem,\r\n          elTopConst: elem.offsetTop,\r\n          elTop: elem.offsetTop - frontScroll,\r\n          elHeight: elem.offsetHeight / 2,\r\n          elNext: elem.nextElementSibling,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleAppearing = async (\r\n    windowHeight,\r\n    pFrontScroll,\r\n    appearTime,\r\n    divsToAppear\r\n  ) => {\r\n    let divsToShowInOneRow = [];\r\n    let divsToHideInOneRow = [];\r\n    try {\r\n      let getDivTop,\r\n        elNextTopConst = null;\r\n      for (let i = 0; i < divsToAppear.length; i++) {\r\n        // console.log(\"try loop\");\r\n        getDivTop = await getDivTopVal(pFrontScroll, divsToAppear[i]);\r\n        if (getDivTop.elNext !== null) {\r\n          elNextTopConst = getDivTop.elNext.offsetTop;\r\n        }\r\n        // if the element's top offset value plus its height are smaller than windowHeight and it hasn't got a \"NotInView\" class and it hasn't appeared yet (nto having class 'appeared')\r\n        if (\r\n          windowHeight >= getDivTop.elTop + getDivTop.elHeight &&\r\n          $(divsToAppear[i]).hasClass(\"NotInView\") &&\r\n          $(divsToAppear[i]).not(\".appeared\")\r\n        ) {\r\n          // console.log(\"has class NotInView\");\r\n          // tu gdzieś trzeba zrobić pętlę żeby uzyskać oneRowOfDivs.length\r\n          // the below function pushes to an array all divs that stay in one row that has to appear\r\n          const showDivVar = await showDiv(\r\n            divsToAppear,\r\n            i,\r\n            getDivTop.elem,\r\n            getDivTop.elTopConst,\r\n            getDivTop.elNext,\r\n            elNextTopConst\r\n          );\r\n          divsToShowInOneRow.push(showDivVar.element);\r\n        } else if (\r\n          windowHeight < getDivTop.elTop + getDivTop.elHeight &&\r\n          $(divsToAppear[i]).hasClass(\"inView\") &&\r\n          $(divsToAppear[i]).hasClass(\"appeared\")\r\n        ) {\r\n          // console.log(\"has class inView\");\r\n          const hideDivVar = await hideDiv(\r\n            divsToAppear,\r\n            i,\r\n            divsToAppear[i],\r\n            getDivTop.elTopConst,\r\n            getDivTop.elNext,\r\n            elNextTopConst\r\n          );\r\n          divsToHideInOneRow.push(hideDivVar.element);\r\n        }\r\n      }\r\n      // po skończeniu loopowania wszystkich divów pokazujemy lub ukrywamy wybrane divy po kolei\r\n      if (divsToShowInOneRow.length > 0) {\r\n        let rowInd = 0;\r\n        let rowLength = divsToShowInOneRow.length;\r\n        if (\r\n          $(divsToShowInOneRow[divsToShowInOneRow.length - 1]).not(\".appeared\")\r\n        ) {\r\n          console.log(\"showDivsAnimation not appeared yet\");\r\n          while (rowInd < rowLength) {\r\n            await showDivsAnimation(\r\n              divsToShowInOneRow[rowInd],\r\n              rowLength,\r\n              rowInd,\r\n              appearTime\r\n            );\r\n            rowInd++;\r\n          }\r\n        }\r\n      }\r\n      if (divsToHideInOneRow.length > 0) {\r\n        let rowInd = 0;\r\n        let rowLength = divsToHideInOneRow.length;\r\n        if (\r\n          $(divsToHideInOneRow[divsToHideInOneRow.length - 1]).hasClass(\r\n            \"appeared\"\r\n          )\r\n        ) {\r\n          // console.log(\"hideDivsAnimation not hidden yet\");\r\n          while (rowInd < rowLength) {\r\n            await hideDivsAnimation(\r\n              divsToHideInOneRow[rowInd],\r\n              rowLength,\r\n              rowInd,\r\n              appearTime\r\n            );\r\n            rowInd++;\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return { handleAppearing, divJustAppeared };\r\n}\r\n\r\nexport default useAppear;\r\n","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useParallaxBgrImage.js",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\Projects.jsx",["105","106"],"C:\\CODING\\React\\codencr\\src\\componentsHook\\Contact.jsx",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useHide.js",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useScrollTo.js",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useMoveFrontPage.js",[],{"ruleId":"107","severity":1,"message":"108","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":14},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"107","severity":1,"message":"115","line":6,"column":3,"nodeType":"109","messageId":"110","endLine":6,"endColumn":10},{"ruleId":"116","severity":1,"message":"117","line":114,"column":6,"nodeType":"118","endLine":114,"endColumn":23,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"120","line":242,"column":6,"nodeType":"118","endLine":242,"endColumn":8,"suggestions":"121"},{"ruleId":"116","severity":1,"message":"122","line":252,"column":6,"nodeType":"118","endLine":252,"endColumn":19,"suggestions":"123"},{"ruleId":"116","severity":1,"message":"124","line":260,"column":6,"nodeType":"118","endLine":260,"endColumn":30,"suggestions":"125"},{"ruleId":"116","severity":1,"message":"126","line":277,"column":6,"nodeType":"118","endLine":277,"endColumn":18,"suggestions":"127"},{"ruleId":"107","severity":1,"message":"128","line":353,"column":9,"nodeType":"109","messageId":"110","endLine":353,"endColumn":20},{"ruleId":"107","severity":1,"message":"129","line":59,"column":7,"nodeType":"109","messageId":"110","endLine":59,"endColumn":19},{"ruleId":"116","severity":1,"message":"130","line":89,"column":6,"nodeType":"118","endLine":89,"endColumn":8,"suggestions":"131"},{"ruleId":"116","severity":1,"message":"132","line":110,"column":6,"nodeType":"118","endLine":110,"endColumn":34,"suggestions":"133"},{"ruleId":"116","severity":1,"message":"134","line":52,"column":6,"nodeType":"118","endLine":52,"endColumn":23,"suggestions":"135"},{"ruleId":"116","severity":1,"message":"134","line":62,"column":6,"nodeType":"118","endLine":62,"endColumn":21,"suggestions":"136"},{"ruleId":"116","severity":1,"message":"137","line":204,"column":6,"nodeType":"118","endLine":204,"endColumn":17,"suggestions":"138"},{"ruleId":"116","severity":1,"message":"139","line":227,"column":6,"nodeType":"118","endLine":227,"endColumn":23,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":33,"column":29,"nodeType":"143","messageId":"144","endLine":33,"endColumn":33},{"ruleId":"141","severity":1,"message":"142","line":91,"column":29,"nodeType":"143","messageId":"144","endLine":91,"endColumn":33},{"ruleId":"107","severity":1,"message":"115","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":24},{"ruleId":"107","severity":1,"message":"145","line":1,"column":34,"nodeType":"109","messageId":"110","endLine":1,"endColumn":45},"no-unused-vars","'Popper' is defined but never used.","Identifier","unusedVar","no-native-reassign",["146"],"no-negated-in-lhs",["147"],"'useMemo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'startCountFlag'. Either include it or remove the dependency array.","ArrayExpression",["148"],"React Hook useEffect has missing dependencies: 'allSectionsTopRef', 'handleResize', 'handleScroll', 'moveFrontPage', and 'scrollLink'. Either include them or remove the dependency array.",["149"],"React Hook useEffect has a missing dependency: 'ifStartCount'. Either include it or remove the dependency array.",["150"],"React Hook useEffect has a missing dependency: 'setSizeParallaxBackgroundImage'. Either include it or remove the dependency array.",["151"],"React Hook useEffect has missing dependencies: 'handleAppearing', 'setSizeParallaxBackgroundImage', and 'windowHeight'. Either include them or remove the dependency array.",["152"],"'sampleStyle' is assigned a value but never used.","'animShowArr1' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'secSliderRef'. Either include it or remove the dependency array.",["153"],"React Hook useEffect has missing dependencies: 'btnNext', 'btnPrev', and 'keepArrowsInsideImg'. Either include them or remove the dependency array.",["154"],"React Hook useEffect has a missing dependency: 'display'. Either include it or remove the dependency array.",["155"],["156"],"React Hook useMemo has a missing dependency: 'mainTitleAddRef'. Either include it or remove the dependency array.",["157"],"React Hook useMemo has a missing dependency: 'spanSubChange'. Either include it or remove the dependency array. You can also do a functional update 'setSpanSubChange(s => ...)' if you only need 'spanSubChange' in the 'setSpanSubChange' call.",["158"],"no-eval","eval can be harmful.","CallExpression","unexpected","'useCallback' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [divJustAppeared, startCountFlag]",{"range":"181","text":"182"},"Update the dependencies array to be: [allSectionsTopRef, handleResize, handleScroll, moveFrontPage, scrollLink]",{"range":"183","text":"184"},"Update the dependencies array to be: [countedFlag, ifStartCount]",{"range":"185","text":"186"},"Update the dependencies array to be: [divsWithMovingBgrImage, setSizeParallaxBackgroundImage]",{"range":"187","text":"188"},"Update the dependencies array to be: [handleAppearing, resizeFlag, setSizeParallaxBackgroundImage, windowHeight]",{"range":"189","text":"190"},"Update the dependencies array to be: [secSliderRef]",{"range":"191","text":"192"},"Update the dependencies array to be: [btnNext, btnPrev, keepArrowsInsideImg, photoWindowWidthDifference]",{"range":"193","text":"194"},"Update the dependencies array to be: [display, textAppearStart]",{"range":"195","text":"196"},"Update the dependencies array to be: [display, spanSubChange]",{"range":"197","text":"198"},"Update the dependencies array to be: [mainTitle, mainTitleAddRef]",{"range":"199","text":"200"},"Update the dependencies array to be: [currentSubTitle, spanSubChange]",{"range":"201","text":"202"},[4352,4369],"[divJustAppeared, startCountFlag]",[8329,8331],"[allSectionsTopRef, handleResize, handleScroll, moveFrontPage, scrollLink]",[8670,8683],"[countedFlag, ifStartCount]",[8885,8909],"[divsWithMovingBgrImage, setSizeParallaxBackgroundImage]",[9364,9376],"[handleAppearing, resizeFlag, setSizeParallaxBackgroundImage, windowHeight]",[3015,3017],"[secSliderRef]",[3623,3651],"[btnNext, btnPrev, keepArrowsInsideImg, photoWindowWidthDifference]",[1632,1649],"[display, textAppearStart]",[2073,2088],"[display, spanSubChange]",[7112,7123],"[mainTitle, mainTitleAddRef]",[7948,7965],"[currentSubTitle, spanSubChange]"]