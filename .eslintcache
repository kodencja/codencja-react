[{"C:\\CODING\\React\\codencr\\src\\index.js":"1","C:\\CODING\\React\\codencr\\src\\App.js":"2","C:\\CODING\\React\\codencr\\src\\reportWebVitals.js":"3","C:\\CODING\\React\\codencr\\src\\components\\Navbar.jsx":"4","C:\\CODING\\React\\codencr\\src\\components\\NavItem.jsx":"5","C:\\CODING\\React\\codencr\\src\\components\\Front.jsx":"6","C:\\CODING\\React\\codencr\\src\\components\\PageFront.jsx":"7","C:\\CODING\\React\\codencr\\src\\components\\Hamburger.jsx":"8","C:\\CODING\\React\\codencr\\src\\components\\SectSlider.jsx":"9","C:\\CODING\\React\\codencr\\src\\components\\CarouselLi.jsx":"10","C:\\CODING\\React\\codencr\\src\\components\\Article.jsx":"11","C:\\CODING\\React\\codencr\\src\\components\\SliderHeaders.jsx":"12","C:\\CODING\\React\\codencr\\src\\components\\CarouseItem.jsx":"13","C:\\CODING\\React\\codencr\\src\\components\\CarouselSlider.jsx":"14","C:\\CODING\\React\\codencr\\src\\components\\SliderHeaders2.jsx":"15","C:\\CODING\\React\\codencr\\src\\components\\SliderHeaders3.jsx":"16","C:\\CODING\\React\\codencr\\src\\components\\CarouselBtstrpSlider.jsx":"17","C:\\CODING\\React\\codencr\\src\\components\\AboutSec.jsx":"18","C:\\CODING\\React\\codencr\\src\\components\\About.jsx":"19","C:\\CODING\\React\\codencr\\src\\components\\Services.jsx":"20","C:\\CODING\\React\\codencr\\src\\components\\FrontPage.jsx":"21","C:\\CODING\\React\\codencr\\src\\components\\Skills.jsx":"22","C:\\CODING\\React\\codencr\\src\\components\\MenuIcon.jsx":"23","C:\\CODING\\React\\codencr\\src\\components\\SkillsSect.jsx":"24","C:\\CODING\\React\\codencr\\src\\AppCl.js":"25","C:\\CODING\\React\\codencr\\src\\componentsHook\\Navbar.jsx":"26","C:\\CODING\\React\\codencr\\src\\componentsHook\\FrontPage.jsx":"27","C:\\CODING\\React\\codencr\\src\\componentsHook\\Skills.jsx":"28","C:\\CODING\\React\\codencr\\src\\componentsHook\\NavItem.jsx":"29","C:\\CODING\\React\\codencr\\src\\componentsHook\\About.jsx":"30","C:\\CODING\\React\\codencr\\src\\componentsHook\\Services.jsx":"31","C:\\CODING\\React\\codencr\\src\\componentsHook\\CarouselSlider.jsx":"32","C:\\CODING\\React\\codencr\\src\\componentsHook\\MenuIcon.jsx":"33","C:\\CODING\\React\\codencr\\src\\componentsHook\\Article.jsx":"34","C:\\CODING\\React\\codencr\\src\\componentsHook\\Carousel.jsx":"35","C:\\CODING\\React\\codencr\\src\\componentsHook\\Slider.jsx":"36","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useStateAsync.js":"37","C:\\CODING\\React\\codencr\\src\\componentsHook\\AboutMe.jsx":"38","C:\\CODING\\React\\codencr\\src\\componentsHook\\WriteText.jsx":"39","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useAppear.js":"40","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useParallaxBgrImage.js":"41","C:\\CODING\\React\\codencr\\src\\componentsHook\\Projects.jsx":"42"},{"size":827,"mtime":1613833987388,"results":"43","hashOfConfig":"44"},{"size":570,"mtime":1617902854218,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":499162500000,"results":"46","hashOfConfig":"44"},{"size":1581,"mtime":1610635372689,"results":"47","hashOfConfig":"44"},{"size":715,"mtime":1610634214884,"results":"48","hashOfConfig":"44"},{"size":272,"mtime":1612867004731,"results":"49","hashOfConfig":"44"},{"size":8487,"mtime":1612866836067,"results":"50","hashOfConfig":"44"},{"size":584,"mtime":1613419588322,"results":"51","hashOfConfig":"44"},{"size":14861,"mtime":1611436998254,"results":"52","hashOfConfig":"44"},{"size":341,"mtime":1611254275449,"results":"53","hashOfConfig":"44"},{"size":305,"mtime":1612544641417,"results":"54","hashOfConfig":"44"},{"size":2335,"mtime":1611437258486,"results":"55","hashOfConfig":"44"},{"size":3170,"mtime":1611437250771,"results":"56","hashOfConfig":"44"},{"size":12522,"mtime":1613048809650,"results":"57","hashOfConfig":"44"},{"size":2155,"mtime":1611264553590,"results":"58","hashOfConfig":"44"},{"size":1004,"mtime":1611343391481,"results":"59","hashOfConfig":"44"},{"size":10690,"mtime":1611597890103,"results":"60","hashOfConfig":"44"},{"size":18310,"mtime":1617692555534,"results":"61","hashOfConfig":"44"},{"size":10521,"mtime":1613991226247,"results":"62","hashOfConfig":"44"},{"size":4728,"mtime":1613405889508,"results":"63","hashOfConfig":"44"},{"size":29519,"mtime":1614161001109,"results":"64","hashOfConfig":"44"},{"size":5811,"mtime":1613485484222,"results":"65","hashOfConfig":"44"},{"size":455,"mtime":1613419813913,"results":"66","hashOfConfig":"44"},{"size":7619,"mtime":1613474421354,"results":"67","hashOfConfig":"44"},{"size":591,"mtime":1613833963401,"results":"68","hashOfConfig":"44"},{"size":1700,"mtime":1617944662251,"results":"69","hashOfConfig":"44"},{"size":20426,"mtime":1621146706007,"results":"70","hashOfConfig":"44"},{"size":7369,"mtime":1620893117852,"results":"71","hashOfConfig":"44"},{"size":740,"mtime":1617945372102,"results":"72","hashOfConfig":"44"},{"size":14088,"mtime":1620713247011,"results":"73","hashOfConfig":"44"},{"size":4857,"mtime":1620891311236,"results":"74","hashOfConfig":"44"},{"size":16305,"mtime":1615035284804,"results":"75","hashOfConfig":"44"},{"size":504,"mtime":1617898401381,"results":"76","hashOfConfig":"44"},{"size":305,"mtime":1612544641417,"results":"77","hashOfConfig":"44"},{"size":16356,"mtime":1615098169767,"results":"78","hashOfConfig":"44"},{"size":17973,"mtime":1620721161108,"results":"79","hashOfConfig":"44"},{"size":3625,"mtime":1618981159120,"results":"80","hashOfConfig":"44"},{"size":1911,"mtime":1620891346415,"results":"81","hashOfConfig":"44"},{"size":8422,"mtime":1620719237619,"results":"82","hashOfConfig":"44"},{"size":11044,"mtime":1620896271354,"results":"83","hashOfConfig":"44"},{"size":3145,"mtime":1620822332401,"results":"84","hashOfConfig":"44"},{"size":4469,"mtime":1621147375031,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},"u5m90o",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"89"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"89"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"89"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"89"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"89"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"89"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"89"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"89"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"89"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"89"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"89"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"89"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"89"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"89"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"89"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"89"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"89"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"89"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"89"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"89"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"89"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"89"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"89"},"C:\\CODING\\React\\codencr\\src\\index.js",["197","198","199"],"import \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"bootstrap-slider/dist/css/bootstrap-slider.css\"\nimport \"react-multi-carousel/lib/styles.css\";\nimport $ from \"jquery\";\nimport Popper from \"popper.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n// import './fontello/css/fontello.css';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport AppCl from \"./AppCl\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["200","201"],"C:\\CODING\\React\\codencr\\src\\App.js",[],"C:\\CODING\\React\\codencr\\src\\reportWebVitals.js",[],"C:\\CODING\\React\\codencr\\src\\components\\Navbar.jsx",[],"C:\\CODING\\React\\codencr\\src\\components\\NavItem.jsx",["202"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NavItem(props) {\r\n  return (\r\n    <li className=\"nav-item bgr-col-dark\">\r\n      <a\r\n        href=\"foo\"\r\n        className={\r\n          \"nav-link shadow-dark transform-scale-sm \" + props.navItem.nameClass\r\n        }\r\n      >\r\n        {props.navItem.content}\r\n      </a>\r\n    </li>\r\n\r\n    // <li className=\"nav-item bgr-col-dark\">\r\n    //   <Link\r\n    //     to=\"/\"\r\n    // className={\r\n    //   \"nav-link p-3 shadow-dark color-dark bgr-col-org-bright transform-scale-sm \" +\r\n    //   props.navItem.nameClass\r\n    // }\r\n    //   >\r\n    //     {props.navItem.content}\r\n    //   </Link>\r\n    // </li>\r\n  );\r\n}\r\n\r\nexport default NavItem;\r\n","C:\\CODING\\React\\codencr\\src\\components\\Front.jsx",[],"C:\\CODING\\React\\codencr\\src\\components\\PageFront.jsx",["203","204","205","206"],"C:\\CODING\\React\\codencr\\src\\components\\Hamburger.jsx",[],"C:\\CODING\\React\\codencr\\src\\components\\SectSlider.jsx",["207","208"],"import React, { Component } from \"react\";\r\n// import \"../../bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport $ from \"jquery\";\r\nimport CarouselLi from \"./CarouselLi\";\r\nimport photo1 from \"../img/coding-924920_1280.jpg\";\r\nimport photo2 from \"../img/iphone_and_ipad-wallpaper-1280x853.jpg\";\r\nimport sign50 from \"../img/sign50.png\";\r\nimport photo3 from \"../img/programming-1857236_1280.jpg\";\r\nimport photo4 from \"../img/matrix_1280.jpg\";\r\nimport photo5 from \"../img/ja_odb4-1.jpg\";\r\nimport photo6 from \"../img/web-design-2906159_1280.jpg\";\r\nimport photo7 from \"../img/html5-386614_1280.jpg\";\r\nimport photo8 from \"../img/code-2620118_1280.jpg\";\r\nimport photo9 from \"../img/programming-1009134_1280.jpg\";\r\nimport photo10 from \"../img/monitors.jpg\";\r\nimport photo11 from \"../img/technology-785742_1280.jpg\";\r\nimport photo12 from \"../img/macbook-336704_1280.jpg\";\r\nimport CarouseItem from \"./CarouseItem\";\r\n\r\nclass SectSlider extends Component {\r\n  state = {\r\n    carouselItemIndicators: [\r\n      \"item1 active\",\r\n      \"item2\",\r\n      \"item3\",\r\n      \"item4\",\r\n      \"item5\",\r\n      \"item6\",\r\n      \"item7\",\r\n      \"item8\",\r\n      \"item9\",\r\n      \"item10\",\r\n      \"item11\",\r\n      \"item12\",\r\n    ],\r\n    carouselItemsPhotos: [\r\n      photo1,\r\n      photo2,\r\n      photo3,\r\n      photo4,\r\n      photo5,\r\n      photo6,\r\n      photo7,\r\n      photo8,\r\n      photo9,\r\n      photo10,\r\n      photo11,\r\n      photo12,\r\n    ],\r\n    carouselHead: [\r\n      [\"Web-Developing & Designing\", \"Front & Back End Support\"],\r\n      [\"Up to\", sign50, \"ideas / h\", \"in built-up area\"],\r\n      [\"To make sens\", \"to make order\"],\r\n      [\"from tangle\", \"of non-decimal numbers\"],\r\n      [\"Krzysztof Lalik\", \"Front-end developing\", \"Back-end supporting\"],\r\n      [\r\n        \"Programming & designing websites\",\r\n        \"Eye-catching & functional\",\r\n        \"Fully Responsive\",\r\n      ],\r\n      [\r\n        \"For individuals & companies\",\r\n        \"Portfolios, blogs, online-shops\",\r\n        \"adjusted to Customer expectations\",\r\n      ],\r\n      [\r\n        \"Desktop, Tablet, Mobile\",\r\n        \"MVC Pattern\",\r\n        \"standard & original templates\",\r\n      ],\r\n      [\"Meeting high standards\", \"Update with new trends and technology\"],\r\n      [\"creative design animations\", \"with one to one swipe movement!\"],\r\n      [\"Flexible working time\"],\r\n      [\"until the project is done\"],\r\n    ],\r\n    activeClass: \"active\",\r\n    carouselItemClass: \"carousel-item \",\r\n    animatedClass: \"animated\",\r\n    visibilityClass: \"notvisible\",\r\n    captionsClass1: \"capt carl-caption-capt animated head1\",\r\n    captionsClass2: \"capt carl-caption-capt animated\",\r\n    captionsClassSign: \"carl-caption-capt sign animated carl-caption-sign\",\r\n    animShTab2: [\"fadeInDown\", \"fadeInUp\"],\r\n    animShTab3: [\"fadeInDown\", \"fadeInLeft\", \"fadeInRight\"],\r\n    animShTab4: [\"fadeInDown\", \"bounceInLeft\", \"fadeInLeft\", \"fadeInRight\"],\r\n    sliderJQ: \"\",\r\n    prevBtn: \"\",\r\n    nextBtn: \"\",\r\n    carouselListChildren: [],\r\n    headerCaptsTab: [],\r\n    captsTab: [],\r\n    empty: {},\r\n  };\r\n\r\n  secSliderRef = React.createRef();\r\n  prevB = React.createRef();\r\n  nextB = React.createRef();\r\n  carouselLiRef = React.createRef();\r\n  crslItemRef = React.createRef();\r\n\r\n  captionsTab = [];\r\n\r\n  componentDidMount() {\r\n    const sliderJQ = $(this.secSliderRef.current);\r\n    const prevBtn = $(this.prevB.current);\r\n    const nextBtn = $(this.nextB.current);\r\n    // const carouselListChildren = this.carouselLiRef.current.childNodes;\r\n    const carouselListChildren = $(this.carouselLiRef.current).children();\r\n    const carouselItemActiveChildren = $(\".carousel-item.active\")\r\n      .children()\r\n      .children();\r\n    const carouselItems = $(\".carousel-item\");\r\n\r\n    // console.log(carouselItemActiveChildren);\r\n    // console.log(carouselItems);\r\n\r\n    // const carouselList = $(this.carouselLiRef);\r\n    // const sliderHeadersQ = $(this.crslItemRef.current.sliderHeadersRef.current);\r\n    // const sliderHeadersChildren = $(\r\n    //   this.crslItemRef.current.sliderHeadersRef.current\r\n    // ).children();\r\n    const crslItemReference = $(this.crslItemRef.current);\r\n    // const sliderJQ = $(this.secSliderRef.current);\r\n    // let captsTab = [];\r\n    // this.captsTab.push(\r\n    //   this.crslItemRef.current.sliderHeadersRef.current.headersCaptsRef.current\r\n    // );\r\n    // console.log(this.captsTab);\r\n    console.log(crslItemReference);\r\n    // console.log(sliderJQ);\r\n    console.log(this.crslItemRef.current);\r\n    // console.log(this.crslItemRef.current.classList);\r\n    // if ($(this.crslItemRef.current).hasClass(\"active\")) {\r\n    //   console.log(\"Active class!\");\r\n    // } else {\r\n    //   console.log(\"Not active class\");\r\n    // }\r\n    // console.log(this.crslItemRef.current.sliderHeadersRef.current);\r\n    // console.log(this.crslItemRef.current.sliderHeadersRef.current.headersCaptsRef);\r\n    // console.log(\r\n    //   this.crslItemRef.current.sliderHeadersRef.current.headersCaptsRef.current\r\n    // );\r\n\r\n    // console.log(this.crslItemRef.current.carouselItemRef.current);\r\n\r\n    this.setState(\r\n      {\r\n        sliderJQ,\r\n        prevBtn,\r\n        nextBtn,\r\n        carouselListChildren,\r\n        headerCaptsTab: [...this.captionsTab],\r\n      },\r\n      () => {\r\n        this.nopauseSlider(this.state.sliderJQ);\r\n        this.moveToLiCrsl(this.state.carouselListChildren, this.state.sliderJQ);\r\n        this.captionsAnimChange(\r\n          $(this.state.headerCaptsTab),\r\n          carouselItemActiveChildren,\r\n          this.state.sliderJQ,\r\n          carouselItems\r\n        );\r\n      }\r\n    );\r\n\r\n    // console.log(carouselListChildren);\r\n    // console.log(carouselListCurr.children());\r\n    // console.log(carouselList);\r\n\r\n    // const headersCaptsNode = $(\".carousel-caption > div\");\r\n\r\n    // this.setState({ headerCaptsTab: [...this.captionsTab] }, () => {\r\n    //   this.captionsAnimChange($(this.state.headerCaptsTab));\r\n    // });\r\n\r\n    // console.log(this.state.headerCaptsTab);\r\n  }\r\n\r\n  checkCrslItemClasses = () => {\r\n    if (this.crslItemRef.current !== null)\r\n      console.log(this.crslItemRef.current.carouselItemRef.current.classList);\r\n  };\r\n\r\n  // handleVisibilityClass = (div) => {\r\n  handleVisibilityClass = (nr) => {\r\n    // if (flag === true) {\r\n    // this.crslItemRef.current.getVisibilityClass();\r\n    // }\r\n    // if ($(this.carouselItemRef.current).hasClass(\"active\")) {\r\n    // console.log(\"handleVisibilityClass!\");\r\n    // console.log(this.carouselItemRef.current);\r\n    // if (this.crslItemRef.current !== null) {\r\n    //   console.log(this.crslItemRef.current.carouselItemRef.current);\r\n    //   return $(this.crslItemRef.current.carouselItemRef.current).hasClass(\r\n    // if (this.crslItemRef.current !== null) {\r\n    // console.log(\"handleVisibilityClass\");\r\n    //\r\n    // let classVisibility;\r\n    // if ($(div).not(\".active\")) classVisibility = this.state.visibilityClass;\r\n    // return classVisibility;\r\n    // return $(div).not(\".active\") ? this.state.visibilityClass : ''\r\n    // return $(div).hasClass(\"active\") ? \"\" : this.state.visibilityClass;\r\n    // let classes;\r\n    // if (nr === 1) classes = this.state.captionsClass1;\r\n    // else if (nr === 3) classes = this.state.captionsClassSign;\r\n    // else classes = this.state.captionsClass2;\r\n\r\n    // console.log(classes);\r\n\r\n    // return classes;\r\n\r\n    return nr === 1\r\n      ? this.state.captionsClass1\r\n      : nr === 3\r\n      ? this.state.captionsClassSign\r\n      : this.state.captionsClass2;\r\n\r\n    //\"notvisible\";\r\n    // }\r\n    // }\r\n  };\r\n\r\n  // A\r\n  handleGetCaptsTab = (div) => {\r\n    this.captionsTab.push(div);\r\n  };\r\n\r\n  hideAllCaptionsFirst = (captsHeadDivs, crslItems, crslItemActiveChildren) => {\r\n    // ukryj wszystkie captions na wstępie\r\n    for (let i = 0; i < crslItems.length; i++) {\r\n      if ($(crslItems[i]).hasClass(\"active\")) {\r\n        // $(crslItems[i]).children().children()\r\n      }\r\n      // crslItemActiveChildren.removeClass(this.state.visibilityClass);\r\n      // crslItemActiveChildren.removeClass(this.state.visibilityClass);\r\n      // addCl(els[i], 'animated notvisible');\r\n      // controller.changeStyle.rmClass(captChil, 'notvisible');\r\n    }\r\n  };\r\n\r\n  captionsAnimChange = (\r\n    captsHeadDivs,\r\n    crslItemActiveChildren,\r\n    slider,\r\n    crslItems\r\n  ) => {\r\n    console.log(captsHeadDivs);\r\n    console.log(crslItemActiveChildren);\r\n    console.log(slider);\r\n    console.log(crslItems);\r\n    this.hideAllCaptionsFirst(captsHeadDivs, crslItems, crslItemActiveChildren);\r\n    slider.on(\"slid.bs.carousel\", () => {\r\n      // console.log(\"slid.bs.carousel\");\r\n      this.captionsAnimation($(\".carousel-item.active\"), crslItems);\r\n    });\r\n    // this.captChange(\r\n    //   captions,\r\n    //   $(\".carousel-item.active\").children().children(),\r\n    //   el,\r\n    //   $(\".carousel-item\")\r\n    // );\r\n    // this.setArrowPos(vH, vW);\r\n\r\n    //   captChange = (captEls, captChil, el, carItems)=>{\r\n    //     this.hideCapts(captEls, captChil);\r\n    //     el.on('slid.bs.carousel', function(){\r\n    //         self.captAnim($('.carousel-item.active'), carItems);\r\n    //     });\r\n    // };\r\n  };\r\n\r\n  captionsAnimation = (crslItemActive, crslItems) => {\r\n    let x = 1;\r\n    const carouselItems = $(\".carousel-item\");\r\n    for (let i = 0; i < carouselItems.length; i++) {\r\n      // console.log(\"captionsAnimation1\");\r\n      // if ($(crslItems[i]).hasClass(\".active\")) continue;\r\n      // if ($(crslItems[i]).hasClass(\"active\")) {\r\n      if ($(carouselItems[i]).hasClass(\"active\")) {\r\n        // console.log(\"captionsAnimation2\");\r\n        console.log(carouselItems[i]);\r\n        // this.handleVisibilityClass($(crslItems[i]), true);\r\n        // if (flag === true) {\r\n        // this.crslItemRef.current.sliderHeadersRef.current.callVisibilityClass();\r\n        // }\r\n      }\r\n\r\n      // złapanie wszystkich pozostałych elementów klasy .carousel-item, usunięcie z nich klas animShow, i wykluczenie z nich tego, który akurat posiada w danym momencie klase .active\r\n      else {\r\n        let captions = $(crslItems[i]).children().children();\r\n        // let captChLen = captChil.length;\r\n        // for (let j = 0; j < captChLen; j++) {\r\n        //   if (captChLen > 3) {\r\n        //     if ($(captChil[j]).hasClass(animShTab4[j]))\r\n        //       controller.changeStyle.rmClass(captChil[j], animShTab4[j]);\r\n        //   } else if (captChLen === 3) {\r\n        //     if ($(captChil[j]).hasClass(animShTab3[j]))\r\n        //       controller.changeStyle.rmClass(captChil[j], animShTab3[j]);\r\n        //   } else if (captChLen < 3) {\r\n        //     if ($(captChil[j]).hasClass(animShTab2[j]))\r\n        //       controller.changeStyle.rmClass(captChil[j], animShTab2[j]);\r\n        //   }\r\n        //   controller.changeStyle.addCl(captChil[j], \"notvisible\");\r\n        // }\r\n      }\r\n    }\r\n\r\n    // łapiemy nagłówki wewnątrz dzieci diva carousel-caption.active\r\n    // let cActive = ca.children().children();\r\n\r\n    // cActLen = cActive.length;\r\n    // for (let i = 0; i < cActLen; i++) {\r\n    //   setTimeout(function () {\r\n    //     controller.changeStyle.rmClass(cActive[i], \"notvisible\");\r\n    //     if (cActLen > 3) {\r\n    //       controller.changeStyle.addCl(cActive[i], animShTab4[i]);\r\n    //     } else if (cActLen === 3) {\r\n    //       controller.changeStyle.addCl(cActive[i], animShTab3[i]);\r\n    //     } else if (cActLen < 3) {\r\n    //       controller.changeStyle.addCl(cActive[i], animShTab2[i]);\r\n    //     }\r\n\r\n    //     if (firstSlide === true) {\r\n    //       controller.changeStyle.addCl(\r\n    //         ca.prev().children().children(),\r\n    //         \"notvisible\"\r\n    //       );\r\n    //       firstSlide = false;\r\n    //     }\r\n    //   }, x * 500);\r\n    //   x++;\r\n    // }\r\n  };\r\n\r\n  nopauseSlider = (el) => {\r\n    // if(opened===false){\r\n    el.on(\"mouseenter\", function () {\r\n      el.carousel(\"cycle\", true);\r\n    }).on(\"mouseleave\", function () {\r\n      el.carousel(\"cycle\", true);\r\n    });\r\n    // }\r\n    el.carousel({ interval: 5000 });\r\n  };\r\n\r\n  moveToLiCrsl = (crslLi, el) => {\r\n    // przeniesienie pod właściwy slide przy kliknięciu w ul > li\r\n    for (let i = 1; i <= crslLi.length; i++) {\r\n      // console.log(\"moveToLiCrsl\");\r\n      const item = \".item\" + i;\r\n      $(item).on(\"click\", function () {\r\n        el.carousel(i - 1);\r\n      });\r\n    }\r\n  };\r\n\r\n  handleNavBtnCarouselClick = (e) => {\r\n    if (\r\n      e.target.className === \"carousel-control-prev\" ||\r\n      e.target.className === \"carousel-control-prev-icon\"\r\n    ) {\r\n      this.state.sliderJQ.carousel(\"prev\");\r\n    } else {\r\n      this.state.sliderJQ.carousel(\"next\");\r\n    }\r\n  };\r\n\r\n  handleAddClassCrsl = (ind) => {\r\n    let classes = this.state.carouselItemClass;\r\n    classes += ind === 0 ? this.state.activeClass : \"\";\r\n    return classes;\r\n  };\r\n\r\n  render() {\r\n    const carouselIndicatorsList = this.state.carouselItemIndicators.map(\r\n      (carousItem, index) => <CarouselLi key={index} carItem={carousItem} />\r\n    );\r\n\r\n    const carouselItemList = this.state.carouselItemsPhotos.map(\r\n      (photo, index) => {\r\n        return (\r\n          <CarouseItem\r\n            photo={photo}\r\n            key={index}\r\n            getHeaders={this.state.carouselHead[index]}\r\n            addClassCrsl={this.handleAddClassCrsl}\r\n            indexN={index}\r\n            ref={this.crslItemRef}\r\n            classNameList={this.checkCrslItemClasses}\r\n            getCaptsTab={this.handleGetCaptsTab}\r\n            getVisibilityClass={this.handleVisibilityClass}\r\n          />\r\n        );\r\n      }\r\n    );\r\n\r\n    // console.log(this.crslItemRef.current);\r\n\r\n    return (\r\n      <section\r\n        id=\"slider\"\r\n        className=\"section slider article-slider carousel slide carousel-fade\"\r\n        data-no=\"0\"\r\n        data-ctrlnav=\"ScrollNav\"\r\n        ref={this.secSliderRef}\r\n      >\r\n        <ul\r\n          className=\"carousel-indicators d-none d-sm-flex\"\r\n          ref={this.carouselLiRef}\r\n        >\r\n          {carouselIndicatorsList}\r\n        </ul>\r\n        <center>\r\n          <div className=\"carousel-inner\">{carouselItemList}</div>\r\n        </center>\r\n        <a\r\n          className=\"carousel-control-prev\"\r\n          role=\"button\"\r\n          href=\"#slider\"\r\n          ref={this.prevB}\r\n          name=\"prev\"\r\n          onClick={this.handleNavBtnCarouselClick}\r\n        >\r\n          <span\r\n            className=\"carousel-control-prev-icon\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n        </a>\r\n        <a\r\n          className=\"carousel-control-next\"\r\n          role=\"button\"\r\n          href=\"#slider\"\r\n          ref={this.nextB}\r\n          name=\"next\"\r\n          onClick={this.handleNavBtnCarouselClick}\r\n        >\r\n          <span\r\n            className=\"carousel-control-next-icon\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n        </a>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SectSlider;\r\n","C:\\CODING\\React\\codencr\\src\\components\\CarouselLi.jsx",[],"C:\\CODING\\React\\codencr\\src\\components\\Article.jsx",[],"C:\\CODING\\React\\codencr\\src\\components\\SliderHeaders.jsx",["209"],"import React, { Component } from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nclass SliderHeaders extends Component {\r\n  headersCaptsRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.callVisibilityClass();\r\n    console.log(this.props.parentClassName());\r\n  }\r\n\r\n  callVisibilityClass = () => {\r\n    let captionChildren = this.headersCaptsRef.current.childNodes;\r\n    // let captionChildren = $(this.headersCaptsRef.current).children();\r\n    // console.log(\"callVisibilityClass\");\r\n    console.log(captionChildren);\r\n    captionChildren.forEach((element) => {\r\n      this.props.getCaptsTab(element);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let carslCaption;\r\n    let indexNo = this.props.getIndexNo;\r\n    const carslHeaders = this.props.getHeadersCaption.map((header, index2) => {\r\n      if (index2 === 0) {\r\n        carslCaption = (\r\n          <div\r\n            // className={`capt carl-caption-capt head1 animated ${this.props.getVisibleClass}`}\r\n            // className={() => this.props.getVisibleClass(1)}\r\n            className={this.props.getVisibleClass(1)}\r\n            key={index2}\r\n          >\r\n            {header}\r\n          </div>\r\n        );\r\n      } else if (indexNo === 1 && index2 === 1) {\r\n        carslCaption = (\r\n          <div\r\n            // className={`carl-caption-capt sign carl-caption-sign animated ${this.props.getVisibleClass}`}\r\n            // className={() => this.props.getVisibleClass(3)}\r\n            className={this.props.getVisibleClass(3)}\r\n            key={index2}\r\n          >\r\n            <img src={header} alt=\"50 ideas/h\" className=\"sign-img\"></img>\r\n          </div>\r\n        );\r\n      } else {\r\n        carslCaption = (\r\n          <div\r\n            // className={`capt carl-caption-capt animated ${this.props.getVisibleClass}`}\r\n            // className={() => this.props.getVisibleClass(2)}\r\n            className={this.props.getVisibleClass(2)}\r\n            key={index2}\r\n          >\r\n            {header}\r\n          </div>\r\n        );\r\n      }\r\n      return carslCaption;\r\n    });\r\n\r\n    return (\r\n      <div\r\n        // className=\"carousel-caption text-center justify-content-center\"\r\n        className=\"carousel-caption\"\r\n        // key={parentIndex}\r\n        ref={this.headersCaptsRef}\r\n      >\r\n        {carslHeaders}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SliderHeaders;\r\n",["210","211"],"C:\\CODING\\React\\codencr\\src\\components\\CarouseItem.jsx",["212"],"import React, { Component } from \"react\";\r\nimport $ from \"jquery\";\r\nimport SliderHeaders from \"./SliderHeaders\";\r\n\r\nclass CarouseItem extends Component {\r\n  state = {\r\n    visibilityClass: \"notvisible\",\r\n  };\r\n\r\n  sliderHeadersRef = React.createRef();\r\n  carouselItemRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    // this.props.classNameList();\r\n    // this.getVisibilityClass();\r\n    // });\r\n    // console.log(this.carouselItemRef.current.classList);\r\n  }\r\n\r\n  // componentDidUpdate() {\r\n  //   this.getVisibilityClass();\r\n  // }\r\n\r\n  getVisibilityClass = () => {\r\n    let carouselItem = this.carouselItemRef.current;\r\n    console.log(carouselItem);\r\n    // carouselItem.forEach((element) => {\r\n    this.setState({\r\n      visibilityClass: this.props.getVisibilityClass(carouselItem),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { photo, indexN, getHeaders, addClassCrsl } = this.props;\r\n    // console.log(this.sliderHeadersRef);\r\n    // console.log(\r\n    //   <SliderHeaders\r\n    //     getHeadersCaption={getHeaders}\r\n    //     key={indexN}\r\n    //     getIndexNo={indexN}\r\n    //   />\r\n    // );\r\n    // if ($(this.carouselItemRef.current).hasClass(\"active\")) {\r\n    //   console.log(\"Active class!\");\r\n    //   console.log(this.carouselItemRef.current);\r\n    // } else {\r\n    //   console.log(\"Not active class\");\r\n    // }\r\n\r\n    return (\r\n      <div\r\n        className={addClassCrsl(indexN)}\r\n        key={indexN}\r\n        ref={this.carouselItemRef}\r\n      >\r\n        <img\r\n          src={photo}\r\n          // src={this.state.carouselItems[2]}\r\n          alt=\"Slide One\"\r\n          className=\"carous-img carous-item-img\"\r\n        />\r\n        <SliderHeaders\r\n          getHeadersCaption={getHeaders}\r\n          key={indexN}\r\n          getIndexNo={indexN}\r\n          ref={this.sliderHeadersRef}\r\n          getCaptsTab={this.props.getCaptsTab}\r\n          parentClassName={this.props.classNameList}\r\n          // getVisibleClass={this.state.visibilityClass}\r\n          getVisibleClass={this.props.getVisibilityClass}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CarouseItem;\r\n\r\n// componentDidMount() {\r\n// B\r\n\r\n// if (this.sliderHeadersRef.current !== null) {\r\n// this.props.getCaptions(\r\n//   this.sliderHeadersRef.current.headersCaptsRef.current.childNodes\r\n// );\r\n// console.log(this.sliderHeadersRef.current.headersCapts.current);\r\n// console.log($(this.sliderHeadersRef.current.headersCapts.current));\r\n// console.log(\r\n//   $(this.sliderHeadersRef.current.headersCapts.current).children()\r\n// );\r\n// this.captsTab.push(this.sliderHeadersRef.current.headersCapts.current);\r\n// this.props.getCaptsTab(\r\n//   this.sliderHeadersRef.current.headersCapts.current\r\n// );\r\n// let captsVar;\r\n// if (this.state.headerCaptsTab.length > 0) {\r\n//   captsVar = [...this.state.headerCaptsTab];\r\n// } else {\r\n//   captsVar = this.state.headerCaptsTab;\r\n// }\r\n// let captionChildren = $(\r\n//   this.sliderHeadersRef.current.headersCapts.current\r\n// ).children();\r\n// this.captsVar.push(div);\r\n// this.setState(\r\n//   {\r\n//     headerCaptsTab: [captsVar, captionChildren],\r\n//   },\r\n//   () => console.log(this.state.headerCaptsTab)\r\n// );\r\n// }\r\n// }\r\n","C:\\CODING\\React\\codencr\\src\\components\\CarouselSlider.jsx",["213"],"import React, { Component } from \"react\";\r\nimport $ from \"jquery\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport photo1 from \"../img/coding-924920_1280.jpg\";\r\nimport photo2 from \"../img/iphone_and_ipad-wallpaper-1280x853.jpg\";\r\nimport sign50 from \"../img/sign50.png\";\r\nimport photo3 from \"../img/programming-1857236_1280.jpg\";\r\nimport photo4 from \"../img/matrix_1280.jpg\";\r\nimport photo5 from \"../img/ja_odb4-1.jpg\";\r\nimport photo6 from \"../img/web-design-2906159_1280.jpg\";\r\nimport photo7 from \"../img/html5-386614_1280.jpg\";\r\nimport photo8 from \"../img/code-2620118_1280.jpg\";\r\nimport photo9 from \"../img/programming-1009134_1280.jpg\";\r\nimport photo10 from \"../img/monitors.jpg\";\r\nimport photo11 from \"../img/technology-785742_1280.jpg\";\r\nimport photo12 from \"../img/macbook-336704_1280.jpg\";\r\nimport { getAllByDisplayValue } from \"@testing-library/react\";\r\n\r\nclass CarouselSlider extends Component {\r\n  state = {\r\n    carouselItemIndicators: [\r\n      \"item1 active\",\r\n      \"item2\",\r\n      \"item3\",\r\n      \"item4\",\r\n      \"item5\",\r\n      \"item6\",\r\n      \"item7\",\r\n      \"item8\",\r\n      \"item9\",\r\n      \"item10\",\r\n      \"item11\",\r\n      \"item12\",\r\n    ],\r\n    carouselItemsPhotos: [\r\n      photo1,\r\n      photo2,\r\n      photo3,\r\n      photo4,\r\n      photo5,\r\n      photo6,\r\n      photo7,\r\n      photo8,\r\n      photo9,\r\n      photo10,\r\n      photo11,\r\n      photo12,\r\n    ],\r\n    carouselHead: [\r\n      [\"Web-Developing & Designing\", \"Front & Back End Support\"],\r\n      [\"Up to\", sign50, \"ideas / h\", \"in built-up area\"],\r\n      [\"To make sens\", \"to make order\"],\r\n      [\"from tangle\", \"of non-decimal numbers\"],\r\n      [\"Krzysztof Lalik\", \"Front-end developing\", \"Back-end supporting\"],\r\n      [\r\n        \"Programming & designing websites\",\r\n        \"Eye-catching & functional\",\r\n        \"Fully Responsive\",\r\n      ],\r\n      [\r\n        \"For individuals & companies\",\r\n        \"Portfolios, blogs, online-shops\",\r\n        \"adjusted to Customer expectations\",\r\n      ],\r\n      [\r\n        \"Desktop, Tablet, Mobile\",\r\n        \"MVC Pattern\",\r\n        \"standard & original templates\",\r\n      ],\r\n      [\"Meeting high standards\", \"Update with new trends and technology\"],\r\n      [\"creative design animations\", \"with one to one swipe movement!\"],\r\n      [\"Flexible working time\"],\r\n      [\"until the project is done\"],\r\n    ],\r\n    activeClass: \"active\",\r\n    carouselItemClass: \"carousel-item \",\r\n    animatedClass: \"animated\",\r\n    nonVisibileClass: \"notvisible\",\r\n    visibileClass: \"visible\",\r\n    // captionsClass1: \"capt carl-caption-capt animated head1\",\r\n    // captionsClass2: \"capt carl-caption-capt animated\",\r\n    captionsClass: \"carl-caption-capt animated\",\r\n    // captionsClassSign: \"carl-caption-capt animated sign carl-caption-sign\",\r\n    animShowArr1: \"fadeInDown\",\r\n    animShowArr2: [\"fadeInDown\", \"fadeInUp\"],\r\n    animShowArr3: [\"fadeInDown\", \"fadeInLeft\", \"fadeInRight\"],\r\n    animShowArr4: [\"fadeInDown\", \"bounceInLeft\", \"fadeInLeft\", \"fadeInRight\"],\r\n    crslItem: \"\",\r\n    captionsRef: \"\",\r\n    btnPrev: \"\",\r\n    btnNext: \"\",\r\n    photoWidth: \"\",\r\n  };\r\n\r\n  secSliderRef = React.createRef();\r\n  crslItemRef = React.createRef();\r\n  // captionsRef = React.createRef([]);\r\n  captionsRef = [];\r\n\r\n  // carl-caption-capt\r\n\r\n  componentDidMount() {\r\n    console.log(\"Carousel componentDidMount\");\r\n    const { windHeight, windWidth } = this.props;\r\n    // const captions = React.createRef([$(\"carl-caption-capt\")]);\r\n    // console.log(this.captions);\r\n    // console.log(React.createRef([$(\"capt\")]));\r\n    // console.log(React.createRef($(\"capt\")));\r\n    // console.log(React.createRef(this.secSliderRef));\r\n    // console.log(btnNext);\r\n    // console.log(\"componentDidMount\");\r\n    // console.log(this.secSliderRef);\r\n    console.log(this.captionsRef);\r\n    // console.log(this.crslItemRef);\r\n    // console.log($(this.crslItemRef));\r\n    // console.log(this.captionsRef.current);\r\n    // console.log(this.secSliderRef.current.element);\r\n    // console.log($(this.secSliderRef.current.element[0]));\r\n    // this.setState({ sliderJQ: this.secSliderRef });\r\n    // console.log($(this.secSliderRef.current));\r\n\r\n    // const windowWidth = window.innerWidth;\r\n    // const windowHeigth = window.innerHeight;\r\n    // console.log(windowWidth + \", \" + windowHeigth);\r\n    const btnPrev = this.secSliderRef.current.element.childNodes[2];\r\n    const btnNext = this.secSliderRef.current.element.childNodes[3];\r\n\r\n    this.setState(\r\n      { captionsRef: [...this.captionsRef], btnPrev, btnNext },\r\n      () => {\r\n        // console.log(this.state.captionsRef)\r\n        // console.log(this.state.btnNext);\r\n        // console.log(this.state.btnPrev);\r\n      }\r\n    );\r\n\r\n    // window.addEventListener(\"resize\", this.handleResize);\r\n    // this.keepArrowsInsideImg(windowHeight, windowWidth);\r\n    this.keepArrowsInsideImg(windHeight, windWidth);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // this.keepArrowsInsideImg(this.props.windHeight, this.props.windWidth);\r\n  }\r\n\r\n  // componentWillUnmount() {\r\n  //   window.addEventListener(\"resize\", this.handleResize);\r\n  // }\r\n\r\n  // handleResize = () => {\r\n  //   this.setState(\r\n  //     { windowWidth: window.innerWidth, windowHeight: window.innerHeight },\r\n  //     () => {\r\n  //       console.log(this.state.windowWidth + \", \" + this.state.windowHeight);\r\n  //       this.keepArrowsInsideImg(\r\n  //         this.state.windowHeight,\r\n  //         this.state.windowWidth\r\n  //       );\r\n  //     }\r\n  //   );\r\n  // };\r\n\r\n  handleNextSlide = (ind) => {\r\n    // console.log(ind);\r\n    const {\r\n      animShowArr2,\r\n      animShowArr3,\r\n      animShowArr4,\r\n      nonVisibileClass,\r\n      captionsRef,\r\n    } = this.state;\r\n    const captionsCopy = [...captionsRef];\r\n    // const captionNext = captionsCopy[ind];\r\n    // console.log(captionsCopy);\r\n    // console.log(captionsCopy[i].childNodes[0].className);\r\n    const captionsNextArray = captionsCopy[ind].childNodes;\r\n    // console.log(captionsNextArray);\r\n    // console.log(captionsArray[0]);\r\n\r\n    let animationArray;\r\n    if (captionsNextArray.length < 3) animationArray = animShowArr2;\r\n    else if (captionsNextArray.length === 3) animationArray = animShowArr3;\r\n    else if (captionsNextArray.length > 3) animationArray = animShowArr4;\r\n    // captionsCopy[i].childNodes[0].className += \" \" + this.state.visibileClass + \" \"+ this.state.fadeInDown;\r\n    for (let i = 0; i < captionsNextArray.length; i++) {\r\n      captionsNextArray[i].classList.remove(nonVisibileClass);\r\n      captionsNextArray[i].classList.add(animationArray[i]);\r\n    }\r\n\r\n    // console.log(captionsNextArray);\r\n    // console.log([...this.state.captionsRef]);\r\n\r\n    // captionsCopy[ind].childNodes[0].classList.remove(this.state.nonVisibileClass);\r\n    // captionsCopy[ind].childNodes[0].classList.add(this.state.fadeInDown);\r\n    // console.log(captionsCopy[i].childNodes[0].className);\r\n  };\r\n\r\n  handlePrevSlide = (ind) => {\r\n    const {\r\n      animShowArr2,\r\n      animShowArr3,\r\n      animShowArr4,\r\n      nonVisibileClass,\r\n      carouselItemsPhotos,\r\n      captionsRef,\r\n    } = this.state;\r\n    let index;\r\n    ind === 0 ? (index = carouselItemsPhotos.length - 1) : (index = ind - 1);\r\n    // console.log(index);\r\n    const captionsCopy = [...captionsRef];\r\n    // const captionNext = captionsCopy[ind];\r\n    // console.log(captionsCopy);\r\n    // console.log(captionsCopy[i].childNodes[0].className);\r\n    const captionsPrevArray = captionsCopy[index].childNodes;\r\n    // console.log(captionsNextArray);\r\n    // console.log(captionsArray[0]);\r\n\r\n    let animationArray;\r\n    if (captionsPrevArray.length < 3) animationArray = animShowArr2;\r\n    else if (captionsPrevArray.length === 3) animationArray = animShowArr3;\r\n    else if (captionsPrevArray.length > 3) animationArray = animShowArr4;\r\n    // captionsCopy[i].childNodes[0].className += \" \" + this.state.visibileClass + \" \"+ this.state.fadeInDown;\r\n    for (let i = 0; i < captionsPrevArray.length; i++) {\r\n      captionsPrevArray[i].classList.remove(animationArray[i]);\r\n      captionsPrevArray[i].classList.add(nonVisibileClass);\r\n    }\r\n  };\r\n\r\n  setCss = (div, property, val) => {\r\n    $(div).css(property, val);\r\n    // console.log(property);\r\n    // console.log(val);\r\n    // console.log(div);\r\n  };\r\n\r\n  setArrowMargins = (photoWidth, windWidth) => {\r\n    const { btnPrev, btnNext } = this.state;\r\n    if (windWidth > photoWidth) {\r\n      const mrgnExt = (windWidth - photoWidth) / 2.35;\r\n      this.setCss(btnPrev, \"margin-left\", mrgnExt + \"px\");\r\n      this.setCss(btnNext, \"margin-right\", mrgnExt + \"px\");\r\n    } else {\r\n      this.setCss(btnPrev, \"margin-left\", 0);\r\n      this.setCss(btnNext, \"margin-right\", 0);\r\n    }\r\n  };\r\n\r\n  // ustawienie położenia strzałek kontrolnych prev i next w trakcie resize\r\n  // setArrowPosition = async function (vH, vW) {\r\n  //   try {\r\n  //     imgWidth = await self.getImgSize(vH, vW);\r\n  //     await self.setMrgnArr(imgWidth, vW);\r\n  //   } catch (error) {\r\n  //     throw new Error(error);\r\n  //   }\r\n  // };\r\n\r\n  keepArrowsInsideImg = (windHeight, windWidth) => {\r\n    const proportionPhoto = 1.5;\r\n    let photoWidth, photoHeight;\r\n    if (windHeight >= windWidth) {\r\n      photoWidth = windWidth;\r\n    } else {\r\n      photoHeight = windHeight;\r\n      photoWidth = photoHeight * proportionPhoto;\r\n    }\r\n    this.setState({ photoWidth }, () => {\r\n      this.setArrowMargins(this.state.photoWidth, windWidth);\r\n      // console.log(this.state.photoWidth);\r\n      // console.log(windHeight);\r\n      // console.log(windWidth);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { carouselHead, captionsClass, nonVisibileClass } = this.state;\r\n\r\n    const carslHeaders = (index) => {\r\n      const carslCaptions = carouselHead[index].map((header, index2) => {\r\n        // let i = 0;\r\n        // while (i < 100000000) i++;\r\n        let carslCaption;\r\n        if (index2 === 1 && index === 1) {\r\n          carslCaption = (\r\n            // <div className={this.state.captionsClassSign} key={index2}>\r\n            <div\r\n              className={\r\n                captionsClass + \" sign carl-caption-sign \" + nonVisibileClass\r\n              }\r\n              key={index2}\r\n            >\r\n              <img src={header} alt=\"50 ideas/h\" className=\"sign-img\"></img>\r\n            </div>\r\n          );\r\n        } else {\r\n          carslCaption = (\r\n            <div\r\n              className={\r\n                index === 0\r\n                  ? `${captionsClass} capt head1`\r\n                  : index !== 0 && index2 === 0\r\n                  ? `${captionsClass} capt head1 ${nonVisibileClass}`\r\n                  : `${captionsClass} capt ${nonVisibileClass}`\r\n              }\r\n              key={index2}\r\n            >\r\n              {header}\r\n            </div>\r\n          );\r\n        }\r\n        // console.log(carslCaption);\r\n        return carslCaption;\r\n      });\r\n\r\n      // console.log(carslCaptions);\r\n      return carslCaptions;\r\n    };\r\n\r\n    const carouselItemList = this.state.carouselItemsPhotos.map(\r\n      (photo, index) => {\r\n        // const newRef = React.createRef();\r\n        // this.captionsRef.push(newRef);\r\n        return (\r\n          <Carousel.Item key={index} ref={this.crslItemRef}>\r\n            {/* <center> */}\r\n            <img\r\n              src={photo}\r\n              alt={\"Slide \" + index}\r\n              className=\"carous-img carous-item-img\"\r\n            />\r\n            {/* </center> */}\r\n            {/* <Carousel.Caption key={index} ref={newRef}> */}\r\n            <Carousel.Caption\r\n              key={index}\r\n              ref={(ref) => (this.captionsRef[index] = ref)}\r\n            >\r\n              {carslHeaders(index)}\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        );\r\n      }\r\n    );\r\n\r\n    return (\r\n      <center>\r\n        <section\r\n          id=\"slider\"\r\n          className=\"section slider article-slider\"\r\n          data-no=\"0\"\r\n          data-ctrlnav=\"ScrollNav\"\r\n        >\r\n          <Carousel\r\n            style={{ position: \"relative\" }}\r\n            fade={true}\r\n            ref={this.secSliderRef}\r\n            onSlide={(ind) => {\r\n              this.handleNextSlide(ind);\r\n            }}\r\n            onSlid={(ind) => {\r\n              this.handlePrevSlide(ind);\r\n            }}\r\n            // onSlid={(el) => console.log(el)}\r\n            // onSelect={(activeIndex) => console.log(activeIndex)}\r\n          >\r\n            {carouselItemList}\r\n          </Carousel>\r\n        </section>\r\n      </center>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CarouselSlider;\r\n","C:\\CODING\\React\\codencr\\src\\components\\SliderHeaders2.jsx",["214"],"C:\\CODING\\React\\codencr\\src\\components\\SliderHeaders3.jsx",[],"C:\\CODING\\React\\codencr\\src\\components\\CarouselBtstrpSlider.jsx",["215","216","217","218","219"],"import React, { Component } from \"react\";\r\nimport $ from \"jquery\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport photo1 from \"../img/coding-924920_1280.jpg\";\r\nimport photo2 from \"../img/iphone_and_ipad-wallpaper-1280x853.jpg\";\r\nimport sign50 from \"../img/sign50.png\";\r\nimport photo3 from \"../img/programming-1857236_1280.jpg\";\r\nimport photo4 from \"../img/matrix_1280.jpg\";\r\nimport photo5 from \"../img/ja_odb4-1.jpg\";\r\nimport photo6 from \"../img/web-design-2906159_1280.jpg\";\r\nimport photo7 from \"../img/html5-386614_1280.jpg\";\r\nimport photo8 from \"../img/code-2620118_1280.jpg\";\r\nimport photo9 from \"../img/programming-1009134_1280.jpg\";\r\nimport photo10 from \"../img/monitors.jpg\";\r\nimport photo11 from \"../img/technology-785742_1280.jpg\";\r\nimport photo12 from \"../img/macbook-336704_1280.jpg\";\r\n\r\nclass CarouselBtstrpSlider extends Component {\r\n  state = {\r\n    carouselItemIndicators: [\r\n      \"item1 active\",\r\n      \"item2\",\r\n      \"item3\",\r\n      \"item4\",\r\n      \"item5\",\r\n      \"item6\",\r\n      \"item7\",\r\n      \"item8\",\r\n      \"item9\",\r\n      \"item10\",\r\n      \"item11\",\r\n      \"item12\",\r\n    ],\r\n    carouselItemsPhotos: [\r\n      photo1,\r\n      photo2,\r\n      photo3,\r\n      photo4,\r\n      photo5,\r\n      photo6,\r\n      photo7,\r\n      photo8,\r\n      photo9,\r\n      photo10,\r\n      photo11,\r\n      photo12,\r\n    ],\r\n    carouselHead: [\r\n      [\"Web-Developing & Designing\", \"Front & Back End Support\"],\r\n      [\"Up to\", sign50, \"ideas / h\", \"in built-up area\"],\r\n      [\"To make sens\", \"to make order\"],\r\n      [\"from tangle\", \"of non-decimal numbers\"],\r\n      [\"Krzysztof Lalik\", \"Front-end developing\", \"Back-end supporting\"],\r\n      [\r\n        \"Programming & designing websites\",\r\n        \"Eye-catching & functional\",\r\n        \"Fully Responsive\",\r\n      ],\r\n      [\r\n        \"For individuals & companies\",\r\n        \"Portfolios, blogs, online-shops\",\r\n        \"adjusted to Customer expectations\",\r\n      ],\r\n      [\r\n        \"Desktop, Tablet, Mobile\",\r\n        \"MVC Pattern\",\r\n        \"standard & original templates\",\r\n      ],\r\n      [\"Meeting high standards\", \"Update with new trends and technology\"],\r\n      [\"creative design animations\", \"with one to one swipe movement!\"],\r\n      [\"Flexible working time\"],\r\n      [\"until the project is done\"],\r\n    ],\r\n    activeClass: \"active\",\r\n    carouselItemClass: \"carousel-item \",\r\n    animatedClass: \"animated\",\r\n    nonVisibileClass: \"notvisible\",\r\n    visibileClass: \"visible\",\r\n    captionsClass1: \"capt carl-caption-capt animated head1\",\r\n    captionsClass2: \"capt carl-caption-capt animated\",\r\n    captionsClass: \"carl-caption-capt animated\",\r\n    captionsClassSign: \"carl-caption-capt animated sign carl-caption-sign\",\r\n    animShTab1: \"fadeInDown\",\r\n    animShTab2: [\"fadeInDown\", \"fadeInUp\"],\r\n    animShTab3: [\"fadeInDown\", \"fadeInLeft\", \"fadeInRight\"],\r\n    animShTab4: [\"fadeInDown\", \"bounceInLeft\", \"fadeInLeft\", \"fadeInRight\"],\r\n    sliderJQ: \"\",\r\n    crslItem: \"\",\r\n    captionCurrentDiv: \"\",\r\n    captionCurrentClass: \"\",\r\n    captionsRef: \"\",\r\n    fadeInDown: \"fadeInDown\",\r\n    prevBtn: \"\",\r\n    nextBtn: \"\",\r\n    carouselListChildren: [],\r\n    headerCaptsTab: [],\r\n    captsTab: [],\r\n    empty: {},\r\n    nextSlide: {},\r\n  };\r\n\r\n  // slider.on(\"slid.bs.carousel\", () => {\r\n  // console.log(\"slid.bs.carousel\");\r\n  // this.captionsAnimation($(\".carousel-item.active\"), crslItems);\r\n  // });\r\n\r\n  secSliderRef = React.createRef();\r\n  crslItemRef = React.createRef();\r\n  // captionsRef = React.createRef([]);\r\n  captionsRef = [];\r\n\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount\");\r\n    // console.log(this.secSliderRef);\r\n    console.log(this.captionsRef);\r\n    // console.log(this.crslItemRef);\r\n    // console.log($(this.crslItemRef));\r\n    // console.log(this.captionsRef.current);\r\n    console.log(this.secSliderRef.current.element);\r\n    // console.log($(this.secSliderRef.current.element[0]));\r\n    // this.setState({ sliderJQ: this.secSliderRef });\r\n    // console.log($(this.secSliderRef.current));\r\n\r\n    this.setState({ captionsRef: [...this.captionsRef] }, () =>\r\n      console.log(this.state.captionsRef)\r\n    );\r\n\r\n    // $(this.secSliderRef.current.element).on(\"slid.bs.carousel\", () => {\r\n  }\r\n\r\n  handleNextSlide = (ind) => {\r\n    // console.log(ind);\r\n    const captionsCopy = [...this.state.captionsRef];\r\n    // const captionNext = captionsCopy[ind];\r\n    // console.log(captionsCopy);\r\n    // console.log(captionsCopy[i].childNodes[0].className);\r\n    const captionsNextArray = captionsCopy[ind].childNodes;\r\n    // console.log(captionsNextArray);\r\n    // console.log(captionsArray[0]);\r\n\r\n    let animationArray;\r\n    if (captionsNextArray.length < 3) animationArray = this.state.animShTab2;\r\n    else if (captionsNextArray.length === 3)\r\n      animationArray = this.state.animShTab3;\r\n    else if (captionsNextArray.length > 3)\r\n      animationArray = this.state.animShTab4;\r\n    // captionsCopy[i].childNodes[0].className += \" \" + this.state.visibileClass + \" \"+ this.state.fadeInDown;\r\n    for (let i = 0; i < captionsNextArray.length; i++) {\r\n      captionsNextArray[i].classList.remove(this.state.nonVisibileClass);\r\n      captionsNextArray[i].classList.add(animationArray[i]);\r\n    }\r\n\r\n    // console.log(captionsNextArray);\r\n    // console.log([...this.state.captionsRef]);\r\n\r\n    // captionsCopy[ind].childNodes[0].classList.remove(this.state.nonVisibileClass);\r\n    // captionsCopy[ind].childNodes[0].classList.add(this.state.fadeInDown);\r\n    // console.log(captionsCopy[i].childNodes[0].className);\r\n  };\r\n\r\n  handlePrevSlide = (ind) => {\r\n    let index;\r\n    ind === 0\r\n      ? (index = this.state.carouselItemsPhotos.length - 1)\r\n      : (index = ind - 1);\r\n    console.log(index);\r\n    const captionsCopy = [...this.state.captionsRef];\r\n    // const captionNext = captionsCopy[ind];\r\n    // console.log(captionsCopy);\r\n    // console.log(captionsCopy[i].childNodes[0].className);\r\n    const captionsPrevArray = captionsCopy[index].childNodes;\r\n    // console.log(captionsNextArray);\r\n    // console.log(captionsArray[0]);\r\n\r\n    let animationArray;\r\n    if (captionsPrevArray.length < 3) animationArray = this.state.animShTab2;\r\n    else if (captionsPrevArray.length === 3)\r\n      animationArray = this.state.animShTab3;\r\n    else if (captionsPrevArray.length > 3)\r\n      animationArray = this.state.animShTab4;\r\n    // captionsCopy[i].childNodes[0].className += \" \" + this.state.visibileClass + \" \"+ this.state.fadeInDown;\r\n    for (let i = 0; i < captionsPrevArray.length; i++) {\r\n      captionsPrevArray[i].classList.remove(animationArray[i]);\r\n      captionsPrevArray[i].classList.add(this.state.nonVisibileClass);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const responsive = {\r\n      superLargeDesktop: {\r\n        // the naming can be any, depends on you.\r\n        breakpoint: { max: 4000, min: 3000 },\r\n        items: 5,\r\n      },\r\n      desktop: {\r\n        breakpoint: { max: 3000, min: 1024 },\r\n        items: 3,\r\n      },\r\n      tablet: {\r\n        breakpoint: { max: 1024, min: 464 },\r\n        items: 2,\r\n      },\r\n      mobile: {\r\n        breakpoint: { max: 464, min: 0 },\r\n        items: 1,\r\n      },\r\n    };\r\n\r\n    const carslHeaders = (index) => {\r\n      const carslCaptions = this.state.carouselHead[index].map(\r\n        (header, index2) => {\r\n          let carslCaption;\r\n          if (index2 === 1 && index === 1) {\r\n            carslCaption = (\r\n              // <div className={this.state.captionsClassSign} key={index2}>\r\n              <div\r\n                className={\r\n                  this.state.captionsClass +\r\n                  \" sign carl-caption-sign \" +\r\n                  this.state.nonVisibileClass\r\n                }\r\n                key={index2}\r\n              >\r\n                <img src={header} alt=\"50 ideas/h\" className=\"sign-img\"></img>\r\n              </div>\r\n            );\r\n          } else {\r\n            carslCaption = (\r\n              <div\r\n                className={\r\n                  index === 0\r\n                    ? `${this.state.captionsClass} capt head1`\r\n                    : index !== 0 && index2 === 0\r\n                    ? `${this.state.captionsClass} capt head1 ${this.state.nonVisibileClass}`\r\n                    : `${this.state.captionsClass} capt ${this.state.nonVisibileClass}`\r\n                }\r\n                key={index2}\r\n              >\r\n                {header}\r\n              </div>\r\n            );\r\n          }\r\n          // console.log(carslCaption);\r\n          return carslCaption;\r\n        }\r\n      );\r\n\r\n      // console.log(carslCaptions);\r\n      return carslCaptions;\r\n    };\r\n\r\n    const carouselItemList = this.state.carouselItemsPhotos.map(\r\n      (photo, index) => {\r\n        // const newRef = React.createRef();\r\n        // this.captionsRef.push(newRef);\r\n        return (\r\n          <div className=\"carousel-item\" key={index} ref={this.crslItemRef}>\r\n            {/* <center> */}\r\n            <img\r\n              src={photo}\r\n              alt={\"Slide \" + index}\r\n              className=\"carous-img carous-item-img\"\r\n            />\r\n            {/* <Carousel.Caption key={index} ref={newRef}> */}\r\n            <div\r\n              className=\"carousel-caption\"\r\n              key={index}\r\n              ref={(ref) => (this.captionsRef[index] = ref)}\r\n            >\r\n              {carslHeaders(index)}\r\n            </div>\r\n            {/* </center> */}\r\n          </div>\r\n        );\r\n      }\r\n    );\r\n\r\n    return (\r\n      <section\r\n        id=\"slider\"\r\n        className=\"section slider article-slider\"\r\n        data-no=\"0\"\r\n        data-ctrlnav=\"ScrollNav\"\r\n      >\r\n        <Carousel\r\n          responsive={responsive}\r\n          style={{ position: \"relative\" }}\r\n          fade={true}\r\n          ref={this.secSliderRef}\r\n          beforeChange={(ind) => {\r\n            this.handleNextSlide(ind);\r\n          }}\r\n          afterChange={(ind) => {\r\n            this.handlePrevSlide(ind);\r\n          }}\r\n          // onSlid={(el) => console.log(el)}\r\n          // onSelect={(activeIndex) => console.log(activeIndex)}\r\n        >\r\n          {/* {carouselItemList} */}\r\n          <div>Item 1</div>\r\n          <div>item 2</div>\r\n          <div>Item 3</div>\r\n        </Carousel>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CarouselBtstrpSlider;\r\n\r\n{\r\n  /* <div className=\"carousel-item\">\r\n<img\r\n  src={photo1}\r\n  alt={\"Slide 1\"}\r\n  className=\"carous-img carous-item-img\"\r\n/> */\r\n}\r\n{\r\n  /* <Carousel.Caption key={index} ref={newRef}> */\r\n}\r\n{\r\n  /* <div className=\"carousel-caption\">\r\n  <div\r\n    className={\r\n      this.state.captionsClass + \" sign carl-caption-sign \"\r\n    }\r\n  >\r\n    <img src={sign50} alt=\"50 ideas/h\" className=\"sign-img\"></img>\r\n  </div>\r\n</div>\r\n</div> */\r\n}\r\n","C:\\CODING\\React\\codencr\\src\\components\\AboutSec.jsx",["220","221","222","223","224","225"],"import React, { Component } from \"react\";\r\nimport $ from \"jquery\";\r\nimport phI from \"../img/ja_odb4-2.jpg\";\r\n\r\nclass AboutSec extends Component {\r\n  state = {\r\n    aboutTitle: \"ABOUT ME\",\r\n    mainTitle: \"Krzysztof Lalik\",\r\n    subTitles: [\r\n      \"Front-end Developing\",\r\n      \"Back-end Supporting\",\r\n      \"Programming & designing websites\",\r\n      \"Fully responsive & interactive\",\r\n      \"Individuals & Companies\",\r\n      \"Sync & Async\",\r\n      \"MVC Pattern\",\r\n      \"Desktop, Tablet, Mobile\",\r\n    ],\r\n    currentMainTitle: \"\",\r\n    currentSubTtitle: \"Front-end Developing\",\r\n    mainTxtShown: false,\r\n    subTxtShown: false,\r\n    subTxtIndex: 0,\r\n    subTxtCurrentInd: 1,\r\n    timeToDisplayTxt1: 180,\r\n    timeToDisplayTxt2: 100,\r\n    pause1: 1500,\r\n    pause2: 800,\r\n    pause3: 1800,\r\n    spanMainTitleRefTab: \"\",\r\n    spanSubTitleRefTab: \"\",\r\n    visibility: \"hidden\",\r\n  };\r\n\r\n  mainTxt = React.createRef();\r\n  subTxt = React.createRef();\r\n  //   spanTxtRef = React.createRef();\r\n  spanMainTitleRefTab = [];\r\n  spanSubTitleRefTab = [];\r\n\r\n  //   static getDerivedStateFromProps = () => {\r\n  // this.setCurrentMainTitle();\r\n  //   };\r\n\r\n  componentDidMount() {\r\n    // console.log(this.mainTxt);\r\n    // console.log(this.state.currentMainTitle);\r\n    let flagC = true;\r\n\r\n    // console.log([...this.state.mainTitle].length);\r\n    console.log(this.state.currentSubTtitle);\r\n    console.log([...this.state.currentSubTtitle]);\r\n\r\n    this.setState(\r\n      {\r\n        spanMainTitleRefTab: [...this.spanMainTitleRefTab],\r\n        spanSubTitleRefTab: [...this.spanSubTitleRefTab],\r\n        subTxtIndex: [...this.state.subTitles].length - 1,\r\n      },\r\n      () => {\r\n        console.log(this.state.spanMainTitleRefTab);\r\n        console.log(this.state.spanSubTitleRefTab);\r\n        // console.log(this.spanMainTitleRefTab);\r\n        // tutaj wywoływany jest listening dla mainTitle\r\n        this.txtListning(\r\n          this.state.spanMainTitleRefTab,\r\n          0,\r\n          this.state.timeToDisplayTxt1\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalTxt);\r\n  }\r\n\r\n  changeTitleRef = (spanTab, index) => {\r\n    // console.log(this.spanSubTitleRefTab);\r\n\r\n    // console.log(this.state.spanMainTitleRefTab);\r\n    // setTimeout((spanTab, index) => {\r\n    // spanTab.forEach((span) => {\r\n    //   $(span).css(\"visibility\", \"hidden\");\r\n    // });\r\n    $(this.subTxt).html(\"\");\r\n    this.setState(\r\n      {\r\n        currentSubTtitle: [...this.state.subTitles][index],\r\n        subTxtCurrentInd: index + 1,\r\n        // spanSubTitleRefTab: [...this.spanSubTitleRefTab],\r\n        spanSubTitleRefTab: this.spanSubTitleRefTab,\r\n      },\r\n      () => {\r\n        console.log(this.spanSubTitleRefTab);\r\n        console.log(this.state.spanSubTitleRefTab);\r\n        // tutaj wywoływany jest listening dla subTitle\r\n        this.callTxtListning(\r\n          this.spanSubTitleRefTab,\r\n          this.state.subTxtCurrentInd,\r\n          this.state.timeToDisplayTxt2\r\n        );\r\n      }\r\n    );\r\n    // }, this.state.pause2);\r\n  };\r\n\r\n  callTxtListning = (spanTab, index, t) => {\r\n    this.txtListning(spanTab, index, t);\r\n  };\r\n\r\n  txtListning = (spanTab, index, t) => {\r\n    const {\r\n      timeToDisplayTxt1,\r\n      timeToDisplayTxt2,\r\n      pause1,\r\n      pause2,\r\n      pause3,\r\n      subTxtCurrentInd,\r\n      subTxtIndex,\r\n      spanSubTitleRefTab,\r\n      mainTxtShown,\r\n      subTitles,\r\n      mainTitle,\r\n      spanMainTitleRefTab,\r\n    } = this.state;\r\n    // console.log(el);\r\n    // console.log($(el.current).offset().top);\r\n    // if (\r\n    //   this.state.flagW === false &&\r\n    //   $(el).offset().top + this.props.windWidth / 3 <= this.props.windHeight\r\n    // ) {\r\n    //   this.setState({ flagW: true });\r\n\r\n    // this.appearTextWriting(txt, $(el), timeToDisplayTxt1, timeToPause1, 2);\r\n    // }\r\n\r\n    // [...el].forEach((span, ind) => {\r\n    //   console.log(span);\r\n    //   const intervalTxt = setInterval((span, ind) => {\r\n    //   this.displayTxt(span, ind);\r\n    //   }, 1000);\r\n    //   this.intervalTxt = setInterval(this.displayTxt, ind * 5000);\r\n    // });\r\n\r\n    // const spanTab = [...el];\r\n    // const spanTab = el;\r\n    let ind1 = 0;\r\n    // let ind2 = 1;\r\n    const indLast = spanTab.length;\r\n    // console.log(el);\r\n    // console.log(spanTab);\r\n    console.log(spanTab);\r\n    console.log(spanTab[0]);\r\n\r\n    this.intervalTxt = setInterval(() => {\r\n      if (mainTxtShown === false) {\r\n        if (ind1 < indLast) {\r\n          console.log(\"mainTxtShown = false\");\r\n          this.displayTxt(spanTab[ind1]);\r\n          ind1++;\r\n        } else if (ind1 >= indLast) {\r\n          console.log(\"mainTxtShown set to true\");\r\n          this.setState({ mainTxtShown: true }, () => {\r\n            // this.spanSubTitleRefTab = [];\r\n            clearInterval(this.intervalTxt);\r\n            setTimeout(\r\n              () =>\r\n                this.txtListning(\r\n                  spanSubTitleRefTab,\r\n                  subTxtCurrentInd,\r\n                  timeToDisplayTxt2\r\n                ),\r\n              pause1\r\n            );\r\n          });\r\n        }\r\n      } else if (mainTxtShown === true) {\r\n        if (ind1 < indLast && index < subTxtIndex) {\r\n          console.log(\"mainTxtShown = true\");\r\n          this.displayTxt(spanTab[ind1]);\r\n          ind1++;\r\n        } else if (ind1 >= indLast && index < subTxtIndex) {\r\n          console.log(\"ind1 >= indLast\");\r\n          console.log(subTxtCurrentInd);\r\n          console.log(index);\r\n          console.log(this.spanSubTitleRefTab);\r\n          // spanTab.forEach((span) => {\r\n          //   $(span).css(\"visibility\", \"hidden\");\r\n          // });\r\n          this.spanSubTitleRefTab = [];\r\n          // console.log(this.spanSubTitleRefTab);\r\n          clearInterval(this.intervalTxt);\r\n          setTimeout(this.changeTitleRef, pause2, spanTab, index);\r\n\r\n          // this.setState(\r\n          //   {\r\n          //     currentSubTtitle: [...subTitles][subTxtCurrentInd],\r\n          //     subTxtCurrentInd: index + 1,\r\n          //   },\r\n          //   () => {\r\n          //     console.log(this.state.subTxtCurrentInd);\r\n          //     console.log(this.state.currentSubTtitle);\r\n          //     console.log(this.spanSubTitleRefTab);\r\n          //   }\r\n          // );\r\n        } else if (index >= subTxtIndex) {\r\n          console.log(\"index >= indLast\");\r\n\r\n          setTimeout(() => {\r\n            $(this.subTxt).html(\"\");\r\n            $(this.mainTxt).html(\"\");\r\n            // this.setState(\r\n            //   {\r\n            //     mainTxtShown: false,\r\n            //     currentSubTtitle: [...subTitles][0],\r\n            //     subTxtCurrentInd: 1,\r\n            //   },\r\n            //   () => {\r\n            //     clearInterval(this.intervalTxt);\r\n            //     this.callTxtListning(spanMainTitleRefTab, 0, timeToDisplayTxt1);\r\n            //   }\r\n            // );\r\n          }, pause3);\r\n        }\r\n      }\r\n    }, t);\r\n  };\r\n\r\n  displayTxt = (span) => {\r\n    // this.intervalTxt = setInterval(() => {\r\n    // console.log(\"displayTxt\");\r\n    // }, ind * 3000);\r\n    $(span).css(\"visibility\", \"visible\");\r\n    // this.setState({ visibility: \"visible\" });\r\n  };\r\n\r\n  sectionStyle = () => {\r\n    return {\r\n      backgroundImage: \"url(\" + phI + \")\",\r\n      backgroundPosition: \"right\",\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      mainTitle,\r\n      aboutTitle,\r\n      currentMainTitle,\r\n      currentSubTtitle,\r\n    } = this.state;\r\n\r\n    const mainTitleSpans = [...mainTitle].map((letter, ind) => {\r\n      return (\r\n        <span\r\n          style={{ visibility: this.state.visibility }}\r\n          key={ind}\r\n          ref={(ref) => (this.spanMainTitleRefTab[ind] = ref)}\r\n        >\r\n          {letter}\r\n        </span>\r\n      );\r\n    });\r\n\r\n    const subTitleSpans = [...currentSubTtitle].map((letter, ind) => {\r\n      // console.log(\"subTitleSpans\");\r\n      // console.log([...currentSubTtitle]);\r\n      // console.log(ind);\r\n      return (\r\n        <span\r\n          style={{ visibility: this.state.visibility }}\r\n          key={ind}\r\n          ref={(ref) => (this.spanSubTitleRefTab[ind] = ref)}\r\n        >\r\n          {letter}\r\n        </span>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <section\r\n        className=\"section photo2 parallax art-sect bgr-center text-center\"\r\n        data-no=\"1\"\r\n        data-ctrlnav=\"ScrollNav\"\r\n        style={this.sectionStyle()}\r\n      >\r\n        <header className=\"title sec-title title-col-bright title-bgr-dark-bright-grad\">\r\n          {aboutTitle}\r\n        </header>\r\n        {/* <img src={phI} alt=\"Me\" className=\"photo2\" /> */}\r\n        <div className=\"container sec-cont\">\r\n          <div className=\"row justify-content-left cont-about-me about-me align-left\">\r\n            <div\r\n              className=\"text1 row-text1 col-sm-10 mb-4 h1 \"\r\n              ref={this.mainTxt}\r\n            >\r\n              {/* {currentMainTitle} */}\r\n              {mainTitleSpans}\r\n            </div>\r\n            <div\r\n              className=\"text2 row-text2 col-sm-10 mb-4 h2 notvisible\"\r\n              ref={this.subTxt}\r\n            >\r\n              {subTitleSpans}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutSec;\r\n\r\n// import React, { Component } from \"react\";\r\n// import $ from \"jquery\";\r\n// import phI from \"../img/ja_odb4-2.jpg\";\r\n\r\n// class About extends Component {\r\n//   state = {\r\n//     aboutTitle: \"ABOUT ME\",\r\n//     mainTitle: \"Main Text\",\r\n//     subTitles: [\r\n//       \"Front-end Developing\",\r\n//       \"Back-end Supporting\",\r\n//       \"Programming & designing websites\",\r\n//       \"Fully responsive & interactive\",\r\n//       \"Individuals & Companies\",\r\n//       \"Sync & Async\",\r\n//       \"MVC Pattern\",\r\n//       \"Desktop, Tablet, Mobile\",\r\n//     ],\r\n//     currentMainTitle: \"\",\r\n//     currentSubTtitle: \"Front-end Developing\",\r\n//     mainTxtShown: false,\r\n//     subTxtShown: false,\r\n//     subTxtIndex: 0,\r\n//     subTxtCurrentInd: 0,\r\n//     timeToDisplayTxt1: 70,\r\n//     timeToDisplayTxt2: 50,\r\n//     pause1: 1500,\r\n//     pause2: 800,\r\n//     pause3: 1800,\r\n//     spanMainTitleRefTab: [],\r\n//     spanSubTitleRefTab: [],\r\n//     visibility: \"hidden\",\r\n//     test: \"chmura\",\r\n//   };\r\n\r\n//   mainTxt = React.createRef();\r\n//   subTxt = React.createRef();\r\n//   spanMainTitleRefTab = [];\r\n//   spanSubTitleRefTab = [];\r\n\r\n//   componentDidMount() {\r\n//     let flagC = true;\r\n//     console.log(this.state.currentSubTtitle);\r\n\r\n//     this.setState(\r\n//       {\r\n//         spanMainTitleRefTab: [...this.spanMainTitleRefTab],\r\n//         spanSubTitleRefTab: [...this.spanSubTitleRefTab],\r\n//         subTxtIndex: [...this.state.subTitles].length - 1,\r\n//       },\r\n//       () => {\r\n//         console.log(this.state.spanMainTitleRefTab);\r\n//         console.log(this.spanMainTitleRefTab);\r\n//         console.log(this.spanSubTitleRefTab);\r\n//         console.log(this.state.spanSubTitleRefTab);\r\n//         this.callDisplay(\r\n//           this.state.spanMainTitleRefTab,\r\n//           0,\r\n//           0\r\n//         );\r\n//       }\r\n//     );\r\n//   }\r\n\r\n//   componentWillUnmount() {\r\n//     clearInterval(this.intervalTxt);\r\n//   }\r\n\r\n//   changeTitleRef = (spanTab, index) => {\r\n//     $(this.subTxt).html(\"\");\r\n//     this.setState(\r\n//       {\r\n//         currentSubTtitle: [...this.state.subTitles][index],\r\n//         subTxtCurrentInd: index + 1,\r\n//         spanSubTitleRefTab: this.spanSubTitleRefTab,\r\n//       },\r\n//       () => {\r\n//         console.log(this.spanSubTitleRefTab);\r\n//         console.log(this.state.spanSubTitleRefTab);\r\n//         this.callTxtListning(\r\n//           this.spanSubTitleRefTab,\r\n//           this.state.subTxtCurrentInd,\r\n//           this.state.timeToDisplayTxt2\r\n//         );\r\n//       }\r\n//     );\r\n//   };\r\n\r\n//   callTxtListning = (spanTab, index, t) => {\r\n//     this.txtListning(spanTab, index, t);\r\n//   };\r\n\r\n//   callDisplay = (spanTab, i, iSubTab) => {\r\n//     const {\r\n//       mainTitle,\r\n//       mainTxtShown,\r\n//       subTitles,\r\n//       spanMainTitleRefTab,\r\n//       spanSubTitleRefTab,\r\n//       subTxtCurrentInd,\r\n//       pause1,\r\n//       pause2,\r\n//       pause3,\r\n//       timeToDisplayTxt1,\r\n//       timeToDisplayTxt2,\r\n//     } = this.state;\r\n//     let arraySpan, time, txtDivName;\r\n\r\n//     if (mainTxtShown === false) {\r\n//       if (i < spanTab.length) {\r\n//         arraySpan = spanTab;\r\n//         setTimeout(() => {\r\n//           this.display(arraySpan, i);\r\n//         }, timeToDisplayTxt1);\r\n//       }\r\n//       else {\r\n//         i = 0;\r\n//         arraySpan = spanSubTitleRefTab;\r\n//         setTimeout(() => {\r\n//           this.setState({ mainTxtShown: true }, () => {\r\n//             this.callDisplay(arraySpan, i, iSubTab);\r\n//           });\r\n//         }, timeToDisplayTxt2);\r\n//       }\r\n//     } else {\r\n//       if (iSubTab < subTitles.length) {\r\n//         if (i < spanTab.length) {\r\n//           arraySpan = spanTab;\r\n//           setTimeout(() => {\r\n//             this.display(arraySpan, i);\r\n//           }, timeToDisplayTxt2);\r\n//         } else {\r\n//           let prevSpanTabLeng = this.spanSubTitleRefTab.length;\r\n//           this.spanSubTitleRefTab = [];\r\n//           i = 0;\r\n//           if (iSubTab < subTitles.length - 1) {\r\n//             setTimeout(() => {\r\n//               $(this.subTxt).html(\"\");\r\n//               spanTab.forEach((span) => {\r\n//                 $(span).css(\"visibility\", \"hidden\");\r\n//               });\r\n//               this.setState(\r\n//                 {\r\n//                   subTxtCurrentInd: iSubTab + 1,\r\n//                   spanSubTitleRefTab: \"\",\r\n//                   currentSubTtitle: [...subTitles][iSubTab + 1],\r\n//                   subTxtShown: true,\r\n//                 },\r\n//                 () => {\r\n\r\n//                   this.setState(\r\n//                     {\r\n//                       spanSubTitleRefTab: [...this.spanSubTitleRefTab],\r\n//                     },\r\n//                     () => {\r\n//                       arraySpan = this.state.spanSubTitleRefTab;\r\n//                       console.log(this.state.spanSubTitleRefTab);\r\n//                       this.callDisplay(\r\n//                         arraySpan,\r\n//                         i,\r\n//                         this.state.subTxtCurrentInd\r\n//                       );\r\n//                     }\r\n//                   );\r\n//                 }\r\n//               );\r\n//             }, pause2);\r\n//           } else {\r\n//             i = 0;\r\n//             arraySpan = [...spanMainTitleRefTab];\r\n//             setTimeout(() => {\r\n//               $(this.mainTxt).html(\"\");\r\n//               $(this.subTxt).html(\"\");\r\n//               spanTab.forEach((span) => {\r\n//                 $(span).css(\"visibility\", \"hidden\");\r\n//               });\r\n//               arraySpan.forEach((span) => {\r\n//                 $(span).css(\"visibility\", \"hidden\");\r\n//               });\r\n//               this.setState(\r\n//                 {\r\n//                   mainTxtShown: false,\r\n//                   subTxtCurrentInd: 0,\r\n//                   currentSubTtitle: [...subTitles][0],\r\n//                 },\r\n//                 () => {\r\n//                   console.log(this.spanSubTitleRefTab);\r\n//                   this.callDisplay(arraySpan, i, this.state.subTxtCurrentInd);\r\n//                 }\r\n//               );\r\n//             }, pause3);\r\n//           }\r\n//         }\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   display = (spanTab, i) => {\r\n//     if (this.state.mainTxtShown === false) {\r\n//       const spansArray = spanTab;\r\n//       const el = spansArray[i];\r\n//       $(el).css(\"visibility\", \"visible\");\r\n//       i++;\r\n//       this.setState({ spanMainTitleRefTab: spansArray }, () => {\r\n//         this.callDisplay(\r\n//           [...this.state.spanMainTitleRefTab],\r\n//           i,\r\n//           this.state.subTxtCurrentInd\r\n//         );\r\n//       });\r\n//     } else {\r\n//       const spansArray = spanTab;\r\n//       // console.log(spansArray);\r\n//       const el = spansArray[i];\r\n//       $(el).css(\"visibility\", \"visible\");\r\n//       i++;\r\n//       this.setState({ spanSubTitleRefTab: spansArray }, () => {\r\n//         this.callDisplay(\r\n//           [...this.state.spanSubTitleRefTab],\r\n//           i,\r\n//           this.state.subTxtCurrentInd\r\n//         );\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   sectionStyle = () => {\r\n//     return {\r\n//       backgroundImage: \"url(\" + phI + \")\",\r\n//       backgroundPosition: \"right\",\r\n//     };\r\n//   };\r\n\r\n//   render() {\r\n//     const {\r\n//       mainTitle,\r\n//       aboutTitle,\r\n//       currentMainTitle,\r\n//       currentSubTtitle,\r\n//     } = this.state;\r\n\r\n//     const mainTitleSpans = [...mainTitle].map((letter, ind) => {\r\n//       return (\r\n//         <span\r\n//           key={ind}\r\n//           ref={(ref) => (this.spanMainTitleRefTab[ind] = ref)}\r\n//         >\r\n//           {letter}\r\n//         </span>\r\n//       );\r\n//     });\r\n\r\n//     const subTitleSpans = [...currentSubTtitle].map((letter, ind) => {\r\n\r\n//       return (\r\n//         <span\r\n\r\n//           key={ind}\r\n//           ref={(ref) => (this.spanSubTitleRefTab[ind] = ref)}\r\n\r\n//         >\r\n//           {letter}\r\n//         </span>\r\n//       );\r\n//     });\r\n\r\n//     return (\r\n//       <section\r\n//         className=\"section photo2 parallax art-sect bgr-center text-center\"\r\n//         data-no=\"1\"\r\n//         data-ctrlnav=\"ScrollNav\"\r\n//         style={this.sectionStyle()}\r\n//       >\r\n//         <header className=\"title sec-title title-col-bright title-bgr-dark-bright-grad\">\r\n//           {aboutTitle}\r\n//         </header>\r\n\r\n//         <div className=\"container sec-cont\">\r\n//           <div className=\"row justify-content-left cont-about-me about-me align-left\">\r\n//             <div\r\n//               className=\"text1 row-text1 col-sm-10 mb-4 h1 notvisible\"\r\n//               ref={this.mainTxt}\r\n//             >\r\n\r\n//               {mainTitleSpans}\r\n//             </div>\r\n//             <div\r\n//               className=\"text2 row-text2 col-sm-10 mb-4 h2 notvisible\"\r\n//               ref={this.subTxt}\r\n//             >\r\n//               {subTitleSpans}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </section>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default About;\r\n","C:\\CODING\\React\\codencr\\src\\components\\About.jsx",["226","227"],"import React, { PureComponent } from \"react\";\r\nimport $ from \"jquery\";\r\nimport phI from \"../img/ja_odb4-2.jpg\";\r\n\r\n// const setStateAsync = (setterName, newState) => {\r\n//   // console.log(\"Promise\");\r\n//   return new Promise((resolve, reject) => {\r\n//     if (reject.length > 1) reject(new Error(\"Error!\"));\r\n//     else {\r\n//       const nameSetter = eval(setterName);\r\n//       nameSetter(newState);\r\n//       resolve();\r\n//     }\r\n//   });\r\n// };\r\n\r\nclass About extends PureComponent {\r\n  state = {\r\n    aboutTitle: \"ABOUT ME\",\r\n    mainTitle: \"Main Text\",\r\n    subTitles: [\r\n      \"Front-end Developing\",\r\n      \"Back-end Supporting\",\r\n      \"Programming & designing websites\",\r\n      \"Fully responsive & interactive\",\r\n      \"Individuals & Companies\",\r\n      \"Sync & Async\",\r\n      \"MVC Pattern\",\r\n      \"Desktop, Tablet, Mobile\",\r\n    ],\r\n    currentMainTitle: \"\",\r\n    currentSubTtitle: \"Front-end Developing\",\r\n    mainTxtShown: false,\r\n    subTxtShown: false,\r\n    subTxtIndex: 0,\r\n    subTxtCurrentInd: 0,\r\n    timeToDisplayTxt1: 180,\r\n    timeToDisplayTxt2: 100,\r\n    pause1: 1500,\r\n    pause2: 1800,\r\n    pause3: 1200,\r\n    spanMainTitleRefTab: [],\r\n    spanSubTitleRefTab: [],\r\n    visibility: \"hidden\",\r\n    test: \"chmura\",\r\n  };\r\n\r\n  mainTxt = React.createRef();\r\n  subTxt = React.createRef();\r\n  spanMainTitleRef = [];\r\n  spanSubTitleRef = [];\r\n\r\n  componentDidMount() {\r\n    console.log(\"about componentDidMount\");\r\n    let flagC = true;\r\n    // console.log(this.mainTxt);\r\n    // console.log(this.state.currentSubTtitle);\r\n    this.setState({\r\n      spanMainTitleRefTab: [...this.spanMainTitleRef],\r\n      spanSubTitleRefTab: [...this.spanSubTitleRef],\r\n      subTxtIndex: [...this.state.subTitles].length - 1,\r\n    });\r\n  }\r\n\r\n  // componentWillUnmount() {\r\n  //   this.callDisplay();\r\n  //   this.display();\r\n  // }\r\n\r\n  // resolve tutaj to pusty callback, ale musi być, żeby Promise mógł cos zwrócić, bo inaczej wyrzuci błąd\r\n  setStateAsync = (state) => {\r\n    // console.log(\"Promise\");\r\n    return new Promise((resolve, reject) => {\r\n      if (reject.length > 1) reject(new Error(\"Error!\"));\r\n      else {\r\n        this.setState(state, resolve);\r\n      }\r\n    });\r\n  };\r\n\r\n  callDisplay = (spanTab, i, iSubTab) => {\r\n    const {\r\n      mainTxtShown,\r\n      subTitles,\r\n      spanMainTitleRefTab,\r\n      pause2,\r\n      pause3,\r\n    } = this.state;\r\n    let arraySpan;\r\n\r\n    if (mainTxtShown === false) {\r\n      // if (i < spanTab.length) {\r\n      // arraySpan = spanTab;\r\n      // setTimeout(() => {\r\n      this.display(spanTab, i, iSubTab);\r\n      // }, timeToDisplayTxt1);\r\n    } else {\r\n      // if(this.state.subTxtShown===false){\r\n      if (iSubTab < subTitles.length) {\r\n        if (i < spanTab.length) {\r\n          // arraySpan = spanTab;\r\n          // setTimeout(() => {\r\n          this.display(spanTab, i, iSubTab);\r\n          // }, timeToDisplayTxt2);\r\n        } else {\r\n          i = 0;\r\n          if (iSubTab < subTitles.length - 1) {\r\n            setTimeout(async () => {\r\n              $(this.subTxt).html(\"\");\r\n              spanTab.forEach((span) => {\r\n                $(span).css(\"visibility\", \"hidden\");\r\n              });\r\n\r\n              // console.log(\"await\");\r\n              await this.setStateAsync({\r\n                subTxtCurrentInd: iSubTab + 1,\r\n                spanSubTitleRefTab: [],\r\n                currentSubTtitle: [],\r\n              });\r\n              this.spanSubTitleRef = [];\r\n              await this.setStateAsync({\r\n                currentSubTtitle: [...subTitles][iSubTab + 1],\r\n              });\r\n              await this.setStateAsync({\r\n                spanSubTitleRefTab: [...this.spanSubTitleRef],\r\n              });\r\n              arraySpan = this.state.spanSubTitleRefTab;\r\n\r\n              // this.callDisplay(arraySpan, i, this.state.subTxtCurrentInd);\r\n              this.display(arraySpan, i, this.state.subTxtCurrentInd);\r\n            }, pause2);\r\n          } else {\r\n            // i = 0;\r\n            arraySpan = [...spanMainTitleRefTab];\r\n            // arraySpan = [...spanMainTitleRefTab];\r\n            console.log(\"last index of array\");\r\n\r\n            // console.log(this.subTxt);\r\n            setTimeout(() => {\r\n              this.mainTxt.current.classList.add(\"fadeOut\");\r\n              this.subTxt.current.classList.add(\"fadeOut\");\r\n\r\n              setTimeout(async () => {\r\n                spanTab.forEach((span) => {\r\n                  $(span).css(\"visibility\", \"hidden\");\r\n                });\r\n                arraySpan.forEach((span) => {\r\n                  $(span).css(\"visibility\", \"hidden\");\r\n                });\r\n\r\n                await this.setStateAsync({\r\n                  mainTxtShown: false,\r\n                  subTxtCurrentInd: 0,\r\n                  currentSubTtitle: [],\r\n                });\r\n                this.spanSubTitleRef = [];\r\n                await this.setStateAsync({\r\n                  currentSubTtitle: [...subTitles][0],\r\n                });\r\n                await this.setStateAsync({\r\n                  spanSubTitleRefTab: [...this.spanSubTitleRef],\r\n                });\r\n                this.mainTxt.current.classList.remove(\"fadeOut\");\r\n                this.subTxt.current.classList.remove(\"fadeOut\");\r\n                $(this.mainTxt).html(\"\");\r\n                $(this.subTxt).html(\"\");\r\n                // this.callDisplay(arraySpan, i, this.state.subTxtCurrentInd);\r\n                this.display(arraySpan, i, this.state.subTxtCurrentInd);\r\n              }, pause3);\r\n            }, pause2);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  display = async (spanTab, i, iSubTab) => {\r\n    const {\r\n      mainTxtShown,\r\n      pause1,\r\n      spanMainTitleRefTab,\r\n      spanSubTitleRefTab,\r\n      subTxtCurrentInd,\r\n      timeToDisplayTxt1,\r\n      timeToDisplayTxt2,\r\n    } = this.state;\r\n\r\n    if (mainTxtShown === false) {\r\n      //   const spansArray = [...this.state.spanMainTitleRefTab];\r\n      if (i < spanTab.length) {\r\n        this.displayOneSentence(\r\n          spanTab,\r\n          i,\r\n          spanMainTitleRefTab,\r\n          iSubTab,\r\n          timeToDisplayTxt1\r\n        );\r\n      } else {\r\n        i = 0;\r\n        setTimeout(() => {\r\n          this.setState({ mainTxtShown: true }, () => {\r\n            this.display(spanSubTitleRefTab, i, subTxtCurrentInd);\r\n          });\r\n        }, pause1);\r\n      }\r\n    } else {\r\n      if (i < spanTab.length) {\r\n        this.displayOneSentence(\r\n          spanTab,\r\n          i,\r\n          spanSubTitleRefTab,\r\n          iSubTab,\r\n          timeToDisplayTxt2\r\n        );\r\n      } else {\r\n        this.callDisplay(spanSubTitleRefTab, i, subTxtCurrentInd);\r\n      }\r\n    }\r\n  };\r\n\r\n  displayOneSentence = (spanTab, i, titleRefTab, iSubTab, time) => {\r\n    setTimeout(() => {\r\n      $(spanTab[i]).css(\"visibility\", \"visible\");\r\n      //   spansArray[i] = el;\r\n      i++;\r\n      // this.setState({ spanMainTitleRefTab: spansArray }, () => {\r\n      this.setState({ titleRefTab: spanTab }, () => {\r\n        // console.log(this.state.spanMainTitleRefTab);\r\n        this.display(titleRefTab, i, iSubTab);\r\n      });\r\n    }, time);\r\n  };\r\n\r\n  // sectionStyle = () => {\r\n  // console.log(\"section style\");\r\n  //   return {\r\n  //     backgroundImage: \"url(\" + phI + \")\",\r\n  //     backgroundPosition: \"right\",\r\n  //   };\r\n  // };\r\n  sectionStyle = {\r\n    // console.log(\"section style\");\r\n    backgroundImage: \"url(\" + phI + \")\",\r\n    backgroundPosition: \"right\",\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      mainTitle,\r\n      aboutTitle,\r\n      currentMainTitle,\r\n      currentSubTtitle,\r\n    } = this.state;\r\n\r\n    const mainTitleSpans = [...mainTitle].map((letter, ind) => {\r\n      // console.log(\"mainTitleSpan\");\r\n      // if(ind>= this.state)\r\n      return (\r\n        <span\r\n          style={{ visibility: this.state.visibility }}\r\n          key={ind}\r\n          ref={(ref) => (this.spanMainTitleRef[ind] = ref)}\r\n        >\r\n          {letter}\r\n        </span>\r\n      );\r\n    });\r\n\r\n    // const mainTitleSpansMemo = React.memo([...mainTitleSpans]);\r\n\r\n    const subTitleSpans = [...currentSubTtitle].map((letter, ind) => {\r\n      // console.log(\"subTitleSpans\");\r\n      // console.log([...currentSubTtitle]);\r\n      // console.log(this.spanSubTitleRefTab);\r\n      return (\r\n        <span\r\n          style={{ visibility: this.state.visibility }}\r\n          key={ind}\r\n          ref={(ref) => (this.spanSubTitleRef[ind] = ref)}\r\n          // ref={(ref) => this.setState(spanSubTitleRefTab: [ref)}\r\n          //   ref={(ref) =>\r\n          //     this.state((prevState) => {\r\n          //       return {\r\n          //         spanSubTitleRefTab: [...prevState.spanSubTitleRefTab, ref],\r\n          //       };\r\n          //     })\r\n          //   }\r\n        >\r\n          {letter}\r\n        </span>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <section\r\n        className=\"section photo2 parallax art-sect bgr-center text-center\"\r\n        data-no=\"1\"\r\n        data-ctrlnav=\"ScrollNav\"\r\n        style={this.sectionStyle}\r\n      >\r\n        <header className=\"title sec-title title-col-bright title-bgr-dark-bright-grad\">\r\n          {aboutTitle}\r\n        </header>\r\n        {/* <img src={phI} alt=\"Me\" className=\"photo2\" /> */}\r\n        <div className=\"container sec-cont\">\r\n          <div className=\"row justify-content-left cont-about-me about-me align-left\">\r\n            <div\r\n              className=\"text1 row-text1 col-sm-10 mb-4 h1 animated \"\r\n              ref={this.mainTxt}\r\n            >\r\n              {/* {currentMainTitle} */}\r\n              {mainTitleSpans}\r\n              {/* {mainTitleSpansMemo} */}\r\n            </div>\r\n            <div\r\n              className=\"text2 row-text2 col-sm-10 mb-4 h2 animated \"\r\n              ref={this.subTxt}\r\n            >\r\n              {subTitleSpans}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n\r\n// this.spanSubTitleRefTab = [];\r\n// let currSpanTabLeng = this.spanSubTitleRefTab.length;\r\n// let correctedArrayByLength;\r\n// let difference = Math.abs(currSpanTabLeng - prevSpanTabLeng);\r\n// let longer;\r\n// if (currSpanTabLeng < prevSpanTabLeng) {\r\n// currSpanTabLeng > prevSpanTabLeng ? longer=currSpanTabLeng : longer=prevSpanTabLeng;\r\n\r\n//   for (let i = 0; i < difference; i++) {\r\n//     this.spanSubTitleRefTab.pop();\r\n//   }\r\n// }\r\n\r\n// console.log(this.spanSubTitleRefTab);\r\n// console.log(this.spanSubTitleRefTab.length);\r\n// console.log(this.state.currentSubTtitle);\r\n// console.log(this.state.currentSubTtitle.length);\r\n","C:\\CODING\\React\\codencr\\src\\components\\Services.jsx",["228","229","230"],"import React, { useState, useEffect, useRef, useMemo } from \"react\";\r\nimport $ from \"jquery\";\r\n\r\n// function Services(props) {\r\nconst Services = React.forwardRef((props, ref) => {\r\n  const txtSerives = [\r\n    \"UI Designing Front-End Developing Back-End Support\",\r\n    \"Languagues Frameworks Technologies MVC\\u00A0Pattern\",\r\n    \"Coding Graphic Custom-made &\\u00A0Standard\",\r\n    \"Fully Responsive For\\u00A0All Displays\",\r\n    \"Innovative Ideas Sync\\u00A0/ Async\",\r\n    \"Projects for Individuals &\\u00A0Companies\",\r\n    \"High Quality Clear, Fresh &\\u00A0Interactive\",\r\n    \"Consultations Web Design &\\u00A0Content\",\r\n  ];\r\n\r\n  const iconNames = [\r\n    \"flaticon-layers\",\r\n    \"flaticon-code\",\r\n    \"flaticon-mechanism\",\r\n    \"flaticon-devices\",\r\n    \"icon-lightbulb\",\r\n    \"icon-sitemap\",\r\n    \"flaticon-diamond\",\r\n    \"flaticon-support\",\r\n  ];\r\n\r\n  const sectionRef = useRef();\r\n  // const iconRef = useRef([]);\r\n  // let iconRef = useRef([]);\r\n  // const iconRef = useRef(null);\r\n  // iconRef.current = [];\r\n\r\n  // let iconCopyRef = [];\r\n  // const refs = useRef([]);\r\n  // const handleRefs = (refs) => {\r\n  //   useMemo(() => {\r\n  //     return (ref = refs);\r\n  //   }, [iconRef]);\r\n  // };\r\n  // let icRefer;\r\n  // let icRef = useMemo(() => {\r\n  //   for (let i = 0; i < iconRef; i++) {\r\n  //     if (iconRef[i] != null) icRefer[i] = iconRef[i];\r\n  //   }\r\n  //   return icRefer;\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Services mounted\");\r\n    // console.log(sectionRef.current);\r\n    // console.log($(sectionRef.current).attr(\"class\").split(/\\s+/));\r\n    // console.log($(sectionRef.current).prop(\"classList\"));\r\n    // console.log($(sectionRef.current).prop(\"classList\")[1]);\r\n    // console.log($(sectionRef.current).prop(\"classList\").value);\r\n    // console.log(iconRef);\r\n    // console.log(iconRef.current);\r\n    // props.arrRef(iconRef.current);\r\n    // iconRef.forEach((el)=> {el=useRef()})\r\n    // iconCopyRef.length = iconRef.length;\r\n    // for(let i=0; i<iconRef.length; i++){\r\n    // handleRefs(iconRef);\r\n    // console.log(refs);\r\n    // }\r\n    // console.log(icRefer);\r\n    // props.arrRef(iconRef.current);\r\n    // ref = iconRef;\r\n  }, []);\r\n\r\n  // const addToRefs = (el) => {\r\n  //   if (el && !iconRef.current.includes(el)) {\r\n  //     iconRef.current.push(el);\r\n  //   }\r\n  //   console.log(iconRef.current);\r\n  // };\r\n\r\n  // const refs = useMemo(() => {\r\n  //   console.log(\"Memo service\");\r\n  //   // ref = iconRef.current;\r\n  //   props.arrRef(iconRef.current);\r\n  // }, [iconRef.current]);\r\n\r\n  const serviceDivs = txtSerives.map((txt, index) => {\r\n    // console.log(\"service\");\r\n    let servDiv;\r\n    if (index < 6) {\r\n      // console.log(index);\r\n      servDiv = (\r\n        <div\r\n          className=\"col-sm-4 box appear row-box animated NotInView fadeOutDown\"\r\n          data-controller=\"Appear\"\r\n          key={index}\r\n          // ref={ref}\r\n          // ref={(ref) => (ref[index] = ref)}\r\n          // ref={(ref) => (iconRef[index] = ref)}\r\n          // ref={(ref) => (iconRef.current = [...iconRef.current, ref])}\r\n          // ref={(ref) => props.arrRef(ref)}\r\n          // ref={props.arrRef(ref)}\r\n          // ref={props.arrRef(iconRef[index])}\r\n          // ref={ref}\r\n          ref={ref}\r\n          // ref={ref = ref[index]}\r\n          // ref={addToRefs}\r\n        >\r\n          <i className={iconNames[index]}></i>\r\n          <div className=\"infotxt mt-1\">\r\n            <p className=\"h4\">{txt}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      // console.log(index);\r\n      servDiv = (\r\n        <div\r\n          className=\"col-sm-6 box appear row-box animated NotInView fadeOutDown\"\r\n          data-controller=\"Appear\"\r\n          key={index}\r\n          // ref={(ref) => (iconRef[index] = ref)}\r\n          // ref={(ref) => props.arrRef(ref)}\r\n          // ref={props.arrRef(ref)}\r\n          ref={ref}\r\n          // ref={ref[index]}\r\n          // ref={(ref) => (iconRef.current = [...iconRef.current, ref])}\r\n          // ref={addToRefs}\r\n        >\r\n          <i className={iconNames[index]}></i>\r\n          <div className=\"infotxt mt-1\">\r\n            <p className=\"h4\">{txt}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return servDiv;\r\n  });\r\n\r\n  return (\r\n    <section\r\n      className=\"services section photo3 art-sect text-center\"\r\n      data-no=\"2\"\r\n      data-ctrlnav=\"ScrollNav\"\r\n      // data-ref={props.arrRef(iconRef)}\r\n      ref={sectionRef}\r\n    >\r\n      <header className=\"title sec-title\">SERVICES</header>\r\n      <div className=\"container sec-cont py-3\">\r\n        <div className=\"row \">{serviceDivs}</div>\r\n      </div>\r\n    </section>\r\n  );\r\n  // }\r\n});\r\n\r\n// export default Services;\r\nexport default React.memo(Services);\r\n","C:\\CODING\\React\\codencr\\src\\components\\FrontPage.jsx",["231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257"],"import React, { PureComponent } from \"react\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport $ from \"jquery\";\r\nimport Article from \"./Article\";\r\nimport CarouselSlider from \"./CarouselSlider\";\r\nimport CarouselBtstrpSlider from \"./CarouselBtstrpSlider\";\r\nimport Hamburger from \"./Hamburger\";\r\nimport SectSlider from \"./SectSlider\";\r\nimport AboutSec from \"./AboutSec\";\r\nimport About from \"./About\";\r\nimport Services from \"./Services\";\r\nimport Skills from \"./Skills.jsx\";\r\nimport MenuIcon from \"./MenuIcon\";\r\nimport SkillsSect from \"./SkillsSect\";\r\n\r\nclass FrontPage extends PureComponent {\r\n  //this.servicesRef.current = [] DEFINED WITHOUT CONSTRUCTOR\r\n\r\n  state = {\r\n    windowWidth: window.innerWidth,\r\n    windowHeight: window.innerHeight,\r\n    PFrontScrollBar: 0,\r\n    aboutAppear: false,\r\n    // number of divs to Appeat and to Hide\r\n    divsToShowInOneRow: 1,\r\n    divsToHideInOneRow: 1,\r\n    divsToShowWithClassInView: [],\r\n    divsToHideWithClassNotInView: [],\r\n    serviceAppearRef: [],\r\n    name: \"\",\r\n    appearTime: 10,\r\n    animShow4: [\"fadeInLeft\", \"fadeInDown\", \"fadeInUp\", \"fadeInRight\"],\r\n    animShow3: [\"fadeInLeft\", \"fadeInUp\", \"fadeInRight\"],\r\n    animShow2: [\"fadeInLeft\", \"fadeInRight\"],\r\n    animShow1: [\"bounceIn\"],\r\n\r\n    animHide4: [\"fadeOutLeft\", \"fadeOutDown\", \"fadeOutUp\", \"fadeOutRight\"],\r\n    animHide3: [\"fadeOutLeft\", \"fadeOutDown\", \"fadeOutRight\"],\r\n    animHide2: [\"fadeOutLeft\", \"fadeOutRight\"],\r\n    animHide1: [\"fadeOutDown\"],\r\n    arrShowName: [],\r\n    arrHideName: [],\r\n    resizeFlag: false,\r\n  };\r\n\r\n  carouselSliderRef = React.createRef();\r\n  pageFrontRef = React.createRef();\r\n  aboutRef = React.createRef();\r\n  servicesRef = React.createRef();\r\n  skillsRef = React.createRef();\r\n  appearDivsRef = React.createRef();\r\n  renderCountRef = React.createRef(1);\r\n\r\n  // servArrRef = [];\r\n  // arrayServRef = [];\r\n\r\n  componentDidMount() {\r\n    console.log(\"Frontpage componentDidMount\");\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n    // this.pageFrontRef.current.addEventListener(\"scroll\", this.handleScroll);\r\n    this.pageFrontRef.current.addEventListener(\"scroll\", () => {\r\n      if (this.state.resizeFlag === false) {\r\n        // console.log(\"scrol listener\");\r\n        this.handleScroll();\r\n        this.handleAppearing();\r\n      }\r\n    });\r\n    console.log(this.servicesRef.current);\r\n\r\n    // this.setState({ serviceAppearRef: this.servicesRef.current }, () => {\r\n    //   console.log(this.state.serviceAppearRef);\r\n    // });\r\n\r\n    this.renderCountRef.current = this.renderCountRef.current + 1;\r\n    // this.servicesRef.current = [];\r\n    // window.addEventListener(\"scroll\", this.handleScroll);\r\n    console.log(this.state.resizeFlag);\r\n    // const head1 = this.carouselSliderRef.querySelectorAll(\".head1\");\r\n    this.appearDivsRef.current = [\r\n      ...this.appearDivsRef.current,\r\n      ...this.servicesRef.current,\r\n      ...this.skillsRef.current,\r\n    ];\r\n    console.log(this.appearDivsRef.current);\r\n    // poniższa pętla wykonuje sie w sposób asynchroniczny tzn. \"i\" jest wyświetlane dopiero, gdy skończy się liczyć pętla while i wyświetli się \"j\"\r\n    // for (let i = 0; i < 10; i++) {\r\n    //   let j = 0;\r\n    //   while (j < 400000000) {\r\n    //     j++;\r\n    //     if (j % 100000000 === 0) console.log(j);\r\n    //   }\r\n    //   console.log(i);\r\n    // }\r\n    // console.log($(this.pageFrontRef.current));\r\n\r\n    // console.log(this.servArrRef.length);\r\n\r\n    // console.log(this.servicesRef);\r\n    // console.log(this.servicesRef.current);\r\n    // console.log(this.servicesRef.length);\r\n    // console.log(this.servicesRef[3]);\r\n    // console.log(this.servicesRef[3].current);\r\n    // console.log(this.servicesRef[12]);\r\n    // console.log(this.servicesRef.length);\r\n    // this.servicesRef[1].classList.add(\"notvisible\");\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // console.log(\"updated\");\r\n    this.renderCountRef.current = this.renderCountRef.current + 1;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log(\"FrontPage Will unmount\");\r\n    window.removeEventListener(\"resize\", this.handleResize);\r\n    this.pageFrontRef.current.removeEventListener(\"scroll\", () => {\r\n      this.handleScroll();\r\n      this.handleAppearing();\r\n      // this.setStateAsync();\r\n    });\r\n  }\r\n\r\n  addToRefs = (el) => {\r\n    console.log(\"add to Refs\");\r\n    // console.log(el);\r\n    // console.log($(el).parent());\r\n    // console.log($(el).parents());\r\n    // console.log($(el).parents()[1]);\r\n    if (el && el !== null) {\r\n      const parentArr = $(el).parents();\r\n      // console.log(parentArr);\r\n      // console.log(parentArr.length);\r\n      // for (let i = 0; i < parentArr.length; i++) {\r\n      //   console.log(parentArr[i]);\r\n      // }\r\n      if (this.appearDivsRef.current === null) {\r\n        this.appearDivsRef.current = [];\r\n      }\r\n      if (\r\n        this.servicesRef.current === null ||\r\n        this.skillsRef.current === null\r\n      ) {\r\n        console.log(\"servicesRef.current = null\");\r\n        this.servicesRef.current = [];\r\n        this.skillsRef.current = [];\r\n      }\r\n\r\n      [...parentArr].forEach((element) => {\r\n        // console.log(element);\r\n        if (element.classList.contains(\"services\")) {\r\n          // console.log(\"class contains\");\r\n          if (!this.servicesRef.current.includes(el)) {\r\n            this.servicesRef.current.push(el);\r\n            // console.log(\"servicesRef.current.push\");\r\n          }\r\n        } else if (element.classList.contains(\"skills\")) {\r\n          // console.log(\"class contains\");\r\n          if (!this.skillsRef.current.includes(el)) {\r\n            this.skillsRef.current.push(el);\r\n            // console.log(\"servicesRef.current.push\");\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // $(el)\r\n    //   .parents()\r\n    //   .forEach((element) => {\r\n    //     if (element.classList.contains(\"col-sm-4\")) {\r\n    //       console.log(\"Includes col-sm-4\");\r\n    //     }\r\n    //   });\r\n    // console.log(this.servicesRef.current);\r\n\r\n    // console.log(this.servicesRef.current);\r\n  };\r\n\r\n  // handleRefs = (refsArr) => {\r\n  // console.log(refsArr);\r\n  // this.servArrRef = refsArr;\r\n  // console.log(this.servArrRef.current);\r\n  // this.servicesRef.current = refsArr;\r\n  // this.setState({ serviceAppearRef: this.servArrRef.current }, () => {\r\n  // this.setState({ serviceAppearRef: refsArr }, () => {\r\n  //   console.log(this.state.serviceAppearRef);\r\n  // });\r\n  // this.servArrRef = refsArr;\r\n  // console.log(this.servicesRef.current);\r\n  // };\r\n\r\n  setStateAsync = (newState) => {\r\n    // console.log(\"Promise\");\r\n    return new Promise((resolve, reject) => {\r\n      if (reject.length > 1) reject(new Error(\"Error!\"));\r\n      else {\r\n        this.setState(newState, resolve);\r\n      }\r\n    });\r\n  };\r\n\r\n  hideResize = () => {\r\n    // console.log(\"hideResize START\");\r\n    const { current } = this.appearDivsRef;\r\n    // const { serviceAppearRef, animShow1, animHide1 } = this.state;\r\n    const { serviceAppearRef, animShow1, animHide1 } = this.state;\r\n    return new Promise((resolve, reject) => {\r\n      if (reject.length > 1) reject(new Error(\"Error!\"));\r\n      else {\r\n        for (let i = 0; i < current.length; i++) {\r\n          // usuwamy klasę 'bounceIn'\r\n          if ($(current[i]).hasClass(animShow1[0])) {\r\n            $(current[i]).removeClass(animShow1[0]);\r\n          }\r\n          // const classToRemove = function (index, css) {\r\n          //   return (css.match(/(^|\\s)fade\\S+/g) || []).join(\" \");\r\n          // };\r\n          // console.log(classToRemove);\r\n          // $(current[i]).removeClass(classToRemove);\r\n          $(current[i]).removeClass(function (index, css) {\r\n            // console.log(css); // list of classes\r\n            return (css.match(/(^|\\s)fade\\S+/g) || []).join(\" \");\r\n          });\r\n          $(current[i]).addClass(animHide1[0]);\r\n          // $(serviceAppearRef[i]).removeClass(\"inView\").addClass(\"NotInView\");\r\n          $(current[i]).removeClass(\"inView\");\r\n          $(current[i]).addClass(\"NotInView\");\r\n          // console.log(\"loop\");\r\n          // console.log(serviceAppearRef[i]);\r\n        }\r\n        // console.log(\"hideResize END\");\r\n        resolve();\r\n      }\r\n    });\r\n  };\r\n\r\n  handleHideResize = async () => {\r\n    // console.log(\"handleHideResize 1\");\r\n    await this.setStateAsync({ resizeFlag: true });\r\n    await this.hideResize();\r\n    // console.log(\"handleHideResize 2\");\r\n    this.handleAppearing();\r\n  };\r\n\r\n  getDivTopVal = (frontScroll, elem) => {\r\n    return new Promise((resolve, reject) => {\r\n      if (reject.length > 1)\r\n        reject(new Error(\"Error to get div appear top value\"));\r\n      else {\r\n        resolve({\r\n          elem: elem,\r\n          elTopConst: elem.offsetTop,\r\n          elTop: elem.offsetTop - this.state.PFrontScrollBar,\r\n          elHeight: elem.offsetHeight / 2,\r\n          elNext: elem.nextElementSibling,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  // (\r\n  //   showDiv.oneRowOfDivs,\r\n  //   showDiv.divsToShowNumber,\r\n  //   rowInd,\r\n  //   appearTime\r\n  // );\r\n\r\n  showDivsAnimation = (oneDiv, rowLength, rowIndex, time) => {\r\n    const {\r\n      // arrShowName,\r\n      // arrHideName,\r\n      animShow1,\r\n      animShow2,\r\n      animShow3,\r\n      animShow4,\r\n      animHide1,\r\n      animHide2,\r\n      animHide3,\r\n      animHide4,\r\n    } = this.state;\r\n\r\n    // console.log(\"showDivsAnimation\");\r\n\r\n    return new Promise((resolve, reject) => {\r\n      if (reject.length > 1) reject(new Error(\"Error\"));\r\n      else {\r\n        if (rowIndex >= 4) {\r\n          const maxIndexLength =\r\n            animShow4.length * Math.floor(rowIndex / animShow4.length);\r\n          // console.log(maxIndexLength);\r\n          rowIndex = rowIndex - maxIndexLength;\r\n        }\r\n        if (rowLength > 4) {\r\n          rowLength = 4;\r\n        }\r\n        const arrShowN = eval(\"animShow\" + rowLength);\r\n        const arrHideN = eval(\"animHide\" + rowLength);\r\n        setTimeout(async () => {\r\n          // console.log(\"showDivsAnimation setTimeOut\");\r\n          // resolve({\r\n\r\n          // let arrShowN = `${this.state.}eval(\"animShow\" + rowLength`);\r\n          // let arrHideN = eval(\"animHide\" + rowLength);\r\n          // arrShowN = eval(this.state + arrShowN);\r\n          // console.log(rowLength);\r\n          // console.log(arrShowN);\r\n          await this.setStateAsync({\r\n            arrShowName: arrShowN,\r\n            arrHideName: arrHideN,\r\n          });\r\n          // arrShowName = eval(\"animShow\" + l),\r\n          // arrHideName = eval(\"animHide\" + l),\r\n          // console.log(rowIndex);\r\n          // console.log(this.state.arrShowName);\r\n          // console.log(this.state.arrHideName);\r\n          if ($(oneDiv).hasClass(animHide1[0])) {\r\n            $(oneDiv).removeClass(animHide1[0]);\r\n            // console.log(\"remove fadeOutDown\");\r\n          } else {\r\n            // $(oneDiv).removeClass(this.state.arrHideName[rowIndex]);\r\n            $(oneDiv).removeClass(function (index, css) {\r\n              // console.log(css);\r\n              return (css.match(/(^|\\s)fade\\S+/g) || []).join(\" \");\r\n            });\r\n          }\r\n          $(oneDiv).addClass(this.state.arrShowName[rowIndex]);\r\n          // $(oneDiv).addClass(\"appeared\");\r\n\r\n          // COUNTING\r\n          // ctrlCount.checkIfStartCounting(textTab.length, tc);\r\n\r\n          // showFlipBack: (function () {\r\n          // if ($(d).hasClass(\"counting\")) {\r\n          // self.showFlipBack($(d).closest(\".flip-card-front\").next()[0]);\r\n          // controller.changeStyle.rmClass($(d).closest('.flip-card-front').next()[0],'visible');\r\n          // controller.changeStyle.addCl($(d).closest('.flip-card-front').next()[0], 'notvisible');\r\n          // }\r\n          // })(),\r\n          // });\r\n        }, time);\r\n        resolve(this.state.arrShowName);\r\n        // }\r\n        // else {\r\n        //   setTimeout(() => {\r\n        //     resolve({\r\n        //       tabs: [(arrShowName = animShow4), (arrHideName = animHide4)],\r\n        //       addShClass: (function () {\r\n        //         if ($(d).hasClass(animHide1[0])) {\r\n        //           controller.changeStyle.rmClass(d, animHide1[0]);\r\n        //         } else {\r\n        //           if (ind < arrShowName.length) {\r\n        //             controller.changeStyle.rmClass(d, arrHideName[ind]);\r\n        //           } else {\r\n        //             let y = Math.floor(ind / arrShowName.length);\r\n        //             controller.changeStyle.rmClass(\r\n        //               d,\r\n        //               arrHideName[ind - arrHideName.length * y]\r\n        //             );\r\n        //           }\r\n        //         }\r\n        //         if (ind < arrShowName.length) {\r\n        //           controller.changeStyle.addCl(d, arrShowName[ind]);\r\n        //         } else {\r\n        //           let y = Math.floor(ind / arrShowName.length);\r\n        //           controller.changeStyle.addCl(\r\n        //             d,\r\n        //             arrShowName[ind - arrShowName.length * y]\r\n        //           );\r\n        //         }\r\n        //         controller.changeStyle.addCl(d, \"appeared\");\r\n        //         // COUNTING\r\n        //         ctrlCount.checkIfStartCounting(textTab.length, tc);\r\n        //       })(),\r\n        //       showFlipBack: (function () {\r\n        //         if ($(d).hasClass(\"counting\")) {\r\n        //           self.showFlipBack($(d).closest(\".flip-card-front\").next()[0]);\r\n        //         }\r\n        //       })(),\r\n        //     });\r\n        //   }, t);\r\n        // }\r\n      }\r\n    });\r\n  };\r\n\r\n  hideDivsAnimation = (oneDiv, rowLength, rowIndex, time) => {\r\n    const {\r\n      // arrShowName,\r\n      // arrHideName,\r\n      animShow1,\r\n      animShow2,\r\n      animShow3,\r\n      animShow4,\r\n      animHide1,\r\n      animHide2,\r\n      animHide3,\r\n      animHide4,\r\n    } = this.state;\r\n\r\n    // console.log(\"hideDivsAnimation\");\r\n    return new Promise((resolve, reject) => {\r\n      if (reject.length > 1) reject(new Error(\"Error\"));\r\n      else {\r\n        if (rowIndex >= 4) {\r\n          const maxIndexLength =\r\n            animShow4.length * Math.floor(rowIndex / animShow4.length);\r\n          rowIndex = rowIndex - maxIndexLength;\r\n        }\r\n        if (rowLength > 4) {\r\n          rowLength = 4;\r\n        }\r\n        const arrShowN = eval(\"animShow\" + rowLength);\r\n        const arrHideN = eval(\"animHide\" + rowLength);\r\n        setTimeout(async () => {\r\n          await this.setStateAsync({\r\n            arrShowName: arrShowN,\r\n            arrHideName: arrHideN,\r\n          });\r\n\r\n          // console.log(this.state.arrShowName[rowIndex]);\r\n          // console.log(this.state.arrHideName[rowIndex]);\r\n          if ($(oneDiv).hasClass(animShow1[0])) {\r\n            $(oneDiv).removeClass(animShow1[0]);\r\n          } else {\r\n            // $(oneDiv).removeClass(this.state.arrHideName[rowIndex]);\r\n            $(oneDiv).removeClass(function (index, css) {\r\n              // console.log(css);\r\n              return (css.match(/(^|\\s)fade\\S+/g) || []).join(\" \");\r\n            });\r\n          }\r\n          // $(oneDiv).addClass(this.state.arrShowName[rowIndex]);\r\n\r\n          // $(oneDiv).removeClass(this.state.arrShowName[rowIndex]);\r\n          $(oneDiv).addClass(this.state.arrHideName[rowIndex]);\r\n\r\n          // controller.changeStyle.rmClass(d, tabShName[ind]);\r\n          // controller.changeStyle.addCl(d, tabHName[ind]);\r\n          // controller.changeStyle.rmClass(d, \"appeared\");\r\n          // hideFlipBack: (function () {\r\n          //   if ($(d).hasClass(\"counting\")) {\r\n          //     self.hideFlipBack($(d).closest(\".flip-card-front\").next()[0]);\r\n          //   }\r\n          // })(),\r\n        }, time / 3);\r\n        resolve(this.state.arrHideName);\r\n        // }\r\n        // else {\r\n        //   setTimeout(() => {\r\n        //     resolve({\r\n        //       tabs: [(tabShName = animShow4), (tabHName = animHide4)],\r\n        //       addShClass: (function () {\r\n        //         if (ind < tabHName.length) {\r\n        //           controller.changeStyle.rmClass(d, tabShName[ind]);\r\n        //           controller.changeStyle.addCl(d, tabHName[ind]);\r\n        //         } else {\r\n        //           let y = Math.floor(ind / tabHName.length);\r\n        //           controller.changeStyle.rmClass(\r\n        //             d,\r\n        //             tabShName[ind - tabShName.length * y]\r\n        //           );\r\n        //           controller.changeStyle.addCl(\r\n        //             d,\r\n        //             tabHName[ind - tabHName.length * y]\r\n        //           );\r\n        //         }\r\n        //         controller.changeStyle.rmClass(d, \"appeared\");\r\n        //         // COUNTING\r\n        //         ctrlCount.checkIfStartCounting(textTab.length, tc);\r\n        //       })(),\r\n        //       hideFlipBack: (function () {\r\n        //         if ($(d).hasClass(\"counting\")) {\r\n        //           self.hideFlipBack($(d).closest(\".flip-card-front\").next()[0]);\r\n        //         }\r\n        //       })(),\r\n        //     });\r\n        //   }, time / 3);\r\n        // }\r\n      }\r\n    });\r\n  };\r\n\r\n  // if (\r\n  // windowHeight >= getDivTop.elTop + getDivTop.elHeight &&\r\n  // $(serviceAppearRef[i]).hasClass(\"NotInView\")\r\n  // )\r\n  showDiv = (\r\n    indexInAllAppearDivs,\r\n    elem,\r\n    elemTopConst,\r\n    elemNext,\r\n    elemNextTopConst\r\n  ) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      // let elemNextTopConst = null;\r\n      // if (elemNext != null) {\r\n      //   elemNextTopConst = elemNext.offsetTop;\r\n      // }\r\n      if (reject.length > 1) reject(new Error(\"Error\"));\r\n      else {\r\n        // resolve(\r\n        // (async () => {\r\n        if (elemTopConst === elemNextTopConst && elemNext != null) {\r\n          // console.log(\"remove NotInView 1\");\r\n          $(elem).removeClass(\"NotInView\");\r\n          $(elem).addClass(\"inView\");\r\n          // console.log(\"setStateAsync 1\");\r\n          // console.log(this.state.divsToShowInOneRow);\r\n\r\n          await this.setStateAsync((prevState) => {\r\n            return {\r\n              divsToShowInOneRow: prevState.divsToShowInOneRow + 1,\r\n              divsToShowWithClassInView: [\r\n                ...prevState.divsToShowWithClassInView,\r\n                elem,\r\n              ],\r\n            };\r\n          });\r\n\r\n          // console.log(this.state.divsToShowWithClassInView);\r\n          // await this.setStateAsync({\r\n          //   divsToShowInOneRow: this.state.divsToShowInOneRow + 1,\r\n          //   divsToShowWithClassInView: [...this.state.divsToShowWithClassInView, elem],\r\n          // });\r\n          // console.log(this.state.divsToShowInOneRow);\r\n        } else if (\r\n          elemTopConst !== elemNextTopConst ||\r\n          elemNext === null ||\r\n          indexInAllAppearDivs === this.appearDivsRef.current.length - 1\r\n        ) {\r\n          // console.log(\"remove NotInView 2\");\r\n          $(elem).removeClass(\"NotInView\");\r\n          $(elem).addClass(\"inView\");\r\n          // console.log(\"setStateAsync 2\");\r\n          // console.log(this.state.divsToShowInOneRow);\r\n          // console.log(this.state.divsToShowWithClassInView);\r\n          await this.setStateAsync((prevState) => {\r\n            return {\r\n              // divsToShowInOneRow: prevState.divsToShowInOneRow + 1,\r\n              divsToShowWithClassInView: [\r\n                ...prevState.divsToShowWithClassInView,\r\n                elem,\r\n              ],\r\n            };\r\n          });\r\n        }\r\n        resolve({\r\n          divsToShow: this.state.divsToShowWithClassInView,\r\n          divsToShowNumber: this.state.divsToShowInOneRow,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  // hiding elements\r\n  hideDiv = (\r\n    indexInAllAppearDivs,\r\n    elem,\r\n    elemTopConst,\r\n    elemNext,\r\n    elemNextTopConst\r\n  ) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      // let elemNextTopConst = null;\r\n      // if (elemNext != null) {\r\n      //   elemNextTopConst = elemNext.offsetTop;\r\n      // }\r\n      if (reject.length > 1) reject(new Error(\"Error\"));\r\n      else {\r\n        if (elemNextTopConst === elemTopConst && elemNext != null) {\r\n          $(elem).removeClass(\"inView\");\r\n          $(elem).addClass(\"NotInView\");\r\n\r\n          await this.setStateAsync((prevState) => {\r\n            return {\r\n              divsToHideInOneRow: prevState.divsToHideInOneRow + 1,\r\n              divsToHideWithClassNotInView: [\r\n                ...prevState.divsToHideWithClassNotInView,\r\n                elem,\r\n              ],\r\n            };\r\n          });\r\n\r\n          // await this.setStateAsync({\r\n          //   divsToHideInOneRow: this.state.divsToHideInOneRow + 1,\r\n          //   divsToHideWithClassNotInView: [...this.state.divsToHideWithClassNotInView, elem],\r\n          // });\r\n        } else if (\r\n          elemNextTopConst !== elemTopConst ||\r\n          elemNext === null ||\r\n          indexInAllAppearDivs === this.appearDivsRef.current.length - 1\r\n        ) {\r\n          $(elem).removeClass(\"inView\");\r\n          $(elem).addClass(\"NotInView\");\r\n          // controller.changeStyle.rmClass(elem, \"inView\");\r\n          // controller.changeStyle.addCl(elem, \"NotInView\");\r\n          // nDivsToHide++;\r\n          // appClRow.push(elem);\r\n          // console.log(\"setStateAsync 5\");\r\n          await this.setStateAsync((prevState) => {\r\n            return {\r\n              // divsToHideInOneRow: prevState.divsToHideInOneRow + 1,\r\n              divsToHideWithClassNotInView: [\r\n                ...prevState.divsToHideWithClassNotInView,\r\n                elem,\r\n              ],\r\n            };\r\n          });\r\n        }\r\n        resolve({\r\n          divsToHide: this.state.divsToHideWithClassNotInView,\r\n          divsToHideNumber: this.state.divsToHideInOneRow,\r\n        });\r\n      }\r\n      // })()\r\n      // );\r\n    });\r\n  };\r\n\r\n  handleAppearing = async () => {\r\n    const {\r\n      PFrontScrollBar,\r\n      serviceAppearRef,\r\n      windowHeight,\r\n      appearTime,\r\n      divsToShowWithClassInView,\r\n      divsToHideWithClassNotInView,\r\n    } = this.state;\r\n    const { current } = this.appearDivsRef;\r\n    // vH=window.innerHeight;\r\n    // number of divs to Appeat and to Hide\r\n    // divsToShowInOneRow = 0;\r\n    // divsToHideInOneRow = 0;\r\n    // appClRow = [];\r\n\r\n    // console.log(\"handleAppearing\");\r\n    // console.log(\"setStateAsync 0\");\r\n    // console.log(this.state.divsToShowInOneRow);\r\n    // console.log(this.state.divsToHideInOneRow);\r\n    await this.setStateAsync({\r\n      divsToShowInOneRow: 0,\r\n      divsToHideInOneRow: 0,\r\n      divsToShowWithClassInView: [],\r\n      divsToHideWithClassNotInView: [],\r\n    });\r\n    // console.log(divsToShowWithClassInView);\r\n    // console.log(divsToHideWithClassNotInView);\r\n    try {\r\n      let getDivTop,\r\n        elNextTopConst = null,\r\n        showDiv,\r\n        hideDiv;\r\n      for (let i = 0; i < current.length; i++) {\r\n        getDivTop = await this.getDivTopVal(PFrontScrollBar, current[i]);\r\n        // console.log(getDivTop.elNext);\r\n        // console.log(getDivTop.elTopConst);\r\n        // console.log(getDivTop.elTop);\r\n        // let elNextTopConst = null;\r\n        if (getDivTop.elNext != null) {\r\n          elNextTopConst = getDivTop.elNext.offsetTop;\r\n        }\r\n        if (\r\n          windowHeight >= getDivTop.elTop + getDivTop.elHeight &&\r\n          $(current[i]).hasClass(\"NotInView\")\r\n        ) {\r\n          // console.log(\"has class NotInView\");\r\n          // tu gdzieś trzeba zrobić pętlę żeby uzyskać oneRowOfDivs.length\r\n          showDiv = await this.showDiv(\r\n            i,\r\n            getDivTop.elem,\r\n            getDivTop.elTopConst,\r\n            getDivTop.elNext,\r\n            elNextTopConst\r\n          );\r\n\r\n          // console.log(getDivTop.elem);\r\n          // console.log(showDiv.oneRowOfDivs);\r\n        } else if (\r\n          windowHeight < getDivTop.elTop + getDivTop.elHeight &&\r\n          $(current[i]).hasClass(\"inView\")\r\n        ) {\r\n          hideDiv = await this.hideDiv(\r\n            i,\r\n            current[i],\r\n            getDivTop.elTopConst,\r\n            getDivTop.elNext,\r\n            elNextTopConst\r\n          );\r\n        }\r\n      }\r\n      if (this.state.divsToShowWithClassInView.length > 0) {\r\n        // console.log(showDiv.oneRowOfDivs);\r\n        let rowInd = 0;\r\n        let rowLength = this.state.divsToShowWithClassInView.length;\r\n        // console.log(\"call showDivsAnimation\");\r\n        console.log(rowLength);\r\n        while (rowInd < rowLength) {\r\n          await this.showDivsAnimation(\r\n            this.state.divsToShowWithClassInView[rowInd],\r\n            rowLength,\r\n            rowInd,\r\n            appearTime\r\n          );\r\n          // console.log(rowInd);\r\n          rowInd++;\r\n        }\r\n        if (this.state.resizeFlag === true) {\r\n          await this.setStateAsync({ resizeFlag: false });\r\n        }\r\n      }\r\n      if (this.state.divsToHideWithClassNotInView.length > 0) {\r\n        // console.log(hideDiv.oneRowOfDivs);\r\n        // console.log(this.state.divsToHideWithClassNotInView);\r\n        let rowInd = 0;\r\n        let rowLength = this.state.divsToHideWithClassNotInView.length;\r\n        // console.log(rowLength);\r\n        // console.log(\"call hideDivsAnimation\");\r\n        console.log(rowLength);\r\n        while (rowInd < rowLength) {\r\n          await this.hideDivsAnimation(\r\n            this.state.divsToHideWithClassNotInView[rowInd],\r\n            rowLength,\r\n            rowInd,\r\n            appearTime\r\n          );\r\n          // console.log(rowInd);\r\n          rowInd++;\r\n        }\r\n        if (this.state.resizeFlag === true) {\r\n          await this.setStateAsync({ resizeFlag: false });\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  handleResize = () => {\r\n    this.setState(\r\n      { windowWidth: window.innerWidth, windowHeight: window.innerHeight },\r\n      () => {\r\n        // console.log(this.state.windowWidth + \", \" + this.state.windowHeight);\r\n        this.carouselSliderRef.current.keepArrowsInsideImg(\r\n          this.state.windowHeight,\r\n          this.state.windowWidth\r\n        );\r\n        this.handleHideResize();\r\n      }\r\n    );\r\n  };\r\n\r\n  handleScroll = () => {\r\n    // console.log(this.aboutRef.current.mainTxt.current);\r\n    // const el = this.aboutRef.current.mainTxt.current;\r\n    // const windHeigth23 = this.state.windowHeight - this.state.windowHeight / 3;\r\n    // console.log($(el).offset().top);\r\n    // console.log(windHeigth23);\r\n    // console.log(this.state.windowHeight);\r\n    const PFrontScrollBar = $(this.pageFrontRef.current).scrollTop();\r\n    // console.log(PFrontScrollBar);\r\n\r\n    this.setState({ PFrontScrollBar: PFrontScrollBar }, () => {\r\n      // console.log(this.state.PFrontScrollBar);\r\n    });\r\n\r\n    // call callDisplay from About component\r\n    // if (\r\n    //   this.state.aboutAppear === false &&\r\n    //   $(el).offset().top <= windHeigth23\r\n    // )\r\n    if (\r\n      this.state.aboutAppear === false &&\r\n      $(this.aboutRef.current.mainTxt.current).offset().top <=\r\n        this.state.windowHeight - this.state.windowHeight / 3\r\n    ) {\r\n      console.log(\"handleScroll\");\r\n      this.aboutRef.current.callDisplay(\r\n        this.aboutRef.current.state.spanMainTitleRefTab,\r\n        0,\r\n        0\r\n      );\r\n      this.setState({ aboutAppear: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"pagefront frontMain-pagefront\" ref={this.pageFrontRef}>\r\n        {/* <Hamburger /> */}\r\n        <MenuIcon />\r\n        <Article getClasses={() => \"align-middle\"}>\r\n          {/* <SectSlider /> */}\r\n          <CarouselSlider\r\n            windHeight={this.state.windowHeight}\r\n            windWidth={this.state.windowWidth}\r\n            ref={this.carouselSliderRef}\r\n          />\r\n          {/* <CarouselBtstrpSlider /> */}\r\n          {/* <AboutSec /> */}\r\n          <About ref={this.aboutRef} />\r\n        </Article>\r\n        <Article getClasses={() => \"align-middle\"}>\r\n          {/* <Services ref={() => this.servArrRef.push(this.servicesRef)} /> */}\r\n          {/* <Services arrRef={(iconRef) => (this.servicesRef = iconRef)} /> */}\r\n          {/* <Services arrRef={(ref) => this.servicesRef.push(ref)} /> */}\r\n          {/* <Services ref={(ref) => this.servicesRef.push(ref)} /> */}\r\n          {/* <Services ref={this.servicesRef.current} /> */}\r\n          {/* <Services\r\n            ref={(ref) => (this.servicesRef = [...this.servicesRef, ref])}\r\n          /> */}\r\n          {/* <Services\r\n            ref={(icon) =>\r\n              (this.servArrRef.current = [...this.servArrRef.current, icon])\r\n            }\r\n          /> */}\r\n          {/* <Services arrRef={this.handleRefs} /> */}\r\n          <Services ref={this.addToRefs} />\r\n          {/* <Services\r\n            ref={(icon) =>\r\n              (this.servicesRef.current = [...this.servicesRef.current, icon])\r\n            }\r\n          /> */}\r\n\r\n          <Skills ref={this.addToRefs} />\r\n          {/* <SkillsSect ref={this.addToRefs} /> */}\r\n\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            onChange={(e) => this.setState({ name: e.target.value })}\r\n          />\r\n          <div>My name is {this.state.name} </div>\r\n          <div>This page has been rendered {this.renderCountRef.current} </div>\r\n        </Article>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FrontPage;\r\n\r\n// const showOrHide = await this.showOrHideDiv(\r\n//   windowHeight,\r\n//   i,\r\n//   serviceAppearRef[i],\r\n//   getDivTop.elTopConst,\r\n//   getDivTop.elTop,\r\n//   getDivTop.elHeight,\r\n//   getDivTop.elNext\r\n// );\r\n// console.log(\"await\")\r\n","C:\\CODING\\React\\codencr\\src\\components\\Skills.jsx",["258","259","260"],"import React, {\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useCallback,\r\n  useRef,\r\n  memo,\r\n} from \"react\";\r\n\r\n// function getFlipBackQuoteClass(ind) {\r\n\r\n// const txtSkillsQuotation = [\r\n//   \"The most\",\r\n//   \"important\",\r\n//   \"property of\",\r\n//   \"a program\",\r\n//   \"is\",\r\n//   \"whether it\",\r\n//   \"accomp- lishes\",\r\n//   \"the intention\",\r\n//   \"of its\",\r\n//   \"user.\",\r\n//   \"- C.A.R.\",\r\n//   \"Hoare\",\r\n// ];\r\n\r\nconst Skills = React.forwardRef((props, ref) => {\r\n  //\r\n  const [countTextArr, setCountTextArr] = useState([\r\n    \"HTML\",\r\n    \"CSS\",\r\n    \"JS\",\r\n    \"Bootstrap\",\r\n    \"Webpack\",\r\n    \"NodeJS\",\r\n    \"PHP\",\r\n    \"MySQL\",\r\n    \"mongoDB\",\r\n    \"GIT\",\r\n    \"C++\",\r\n    \"REACT\",\r\n  ]);\r\n\r\n  const txtSkillsQ = [\r\n    \"The most\",\r\n    \"important\",\r\n    \"property of\",\r\n    \"a program\",\r\n    \"is\",\r\n    \"whether it\",\r\n    \"accomp- lishes\",\r\n    \"the intention\",\r\n    \"of its\",\r\n    \"user.\",\r\n    \"- C.A.R.\",\r\n    \"Hoare\",\r\n  ];\r\n\r\n  const [txtSkillsQuotation, setTxtSkillsQuotation] = useState([...txtSkillsQ]);\r\n  // const [txtSkillsQuotation, setTxtSkillsQuotation] = useState([\r\n  //   \"The most\",\r\n  //   \"important\",\r\n  //   \"property of\",\r\n  //   \"a program\",\r\n  //   \"is\",\r\n  //   \"whether it\",\r\n  //   \"accomp- lishes\",\r\n  //   \"the intention\",\r\n  //   \"of its\",\r\n  //   \"user.\",\r\n  //   \"- C.A.R.\",\r\n  //   \"Hoare\",\r\n  // ]);\r\n\r\n  const [counter, setCounter] = useState(0);\r\n  // const [counter2, setCounter2] = useState(0);\r\n  const numberRef = useRef(2);\r\n\r\n  const changeCountText = () => {\r\n    // const changeCountText = useMemo(() => {\r\n    // return{\r\n    // console.log(\"changeCountText\");\r\n    return setCountTextArr([\r\n      \"REACT\",\r\n      \"C++\",\r\n      \"GIT\",\r\n      \"mongoDB\",\r\n      \"MySQL\",\r\n      \"PHP\",\r\n      \"NodeJS\",\r\n      \"Webpack\",\r\n      \"Bootstrap\",\r\n      \"JS\",\r\n      \"CSS\",\r\n      \"HTML\",\r\n    ]);\r\n  };\r\n  // }, [countTextArr]);\r\n\r\n  // const countText = useMemo(\r\n  //   () => [\r\n  //     \"HTML\",\r\n  //     \"CSS\",\r\n  //     \"JS\",\r\n  //     \"Bootstrap\",\r\n  //     \"Webpack\",\r\n  //     \"NodeJS\",\r\n  //     \"PHP\",\r\n  //     \"MySQL\",\r\n  //     \"mongoDB\",\r\n  //     \"GIT\",\r\n  //     \"C++\",\r\n  //     \"REACT\",\r\n  //   ],\r\n  //   []\r\n  // );\r\n\r\n  // const txtSkillsQ = useMemo(\r\n  //   () => [\r\n  //     \"The most\",\r\n  //     \"important\",\r\n  //     \"property of\",\r\n  //     \"a program\",\r\n  //     \"is\",\r\n  //     \"whether it\",\r\n  //     \"accomp- lishes\",\r\n  //     \"the intention\",\r\n  //     \"of its\",\r\n  //     \"user.\",\r\n  //     \"- C.A.R.\",\r\n  //     \"Hoare\",\r\n  //   ],\r\n  //   // [numberRef.current]\r\n  //   []\r\n  // );\r\n\r\n  useEffect(() => {\r\n    // setCircleB(circleBoxes);\r\n    // console.log(countTextArr);\r\n    // console.log(txtSkillsQuotation);\r\n    // circleBoxes();\r\n    // setCircleB([...circleB, circleBoxes]);\r\n    console.log(\"Skills mounted\");\r\n    // console.log(txtSkillsQuotation);\r\n    // getCircleBoxes(txtSkillsQuotation);\r\n    // console.log(circleBoxesMemo);\r\n    // console.log(circleB);\r\n    // }, []);\r\n  }, []);\r\n\r\n  //   const getFlipBackQuoteClass = useMemo(\r\n  //     (ind) => {\r\n  //       let classes;\r\n  //       console.log(\"classes\");\r\n  //       classes = ind > 9 ? \"flip-back-quote authorFontStyle\" : \"flip-back-quote\";\r\n  //       return classes;\r\n  //     },\r\n  //     [circleB]\r\n  //   );\r\n\r\n  const increment = () => {\r\n    setCounter(counter + 1);\r\n    // numberRef.current = counter;\r\n  };\r\n\r\n  const circleBoxes = useMemo(() => {\r\n    // const circleBoxes = useCallback(() => {\r\n    // console.log(txtSkillsQuotation);\r\n    // return txtSkillsQuotation.map((txt, index) => {\r\n    return txtSkillsQuotation.map((txt, index) => {\r\n      let divsArrSkills;\r\n      console.log(\"circles\");\r\n      divsArrSkills = (\r\n        <div\r\n          className=\"flip-card col-md-4 mx-4 mb-4 mt-5 px-0 appear animated NotInView fadeOutDown\"\r\n          key={index}\r\n          ref={ref}\r\n        >\r\n          <div className=\"flip-card-inner\">\r\n            <div className=\"flip-card-front\">\r\n              <div\r\n                className={\"row-counting counting count\" + index}\r\n                data-controller=\"Appear\"\r\n              >\r\n                {countTextArr[index]}\r\n                {/* {countText[index]} */}\r\n                {/* {index + numberRef.current} */}\r\n              </div>\r\n            </div>\r\n            <div className={\"flip-card-back row-counting flipBgColor\" + index}>\r\n              {/* <div className={(index) => getFlipBackQuoteClass}>{txt}</div> */}\r\n              <div\r\n                className={\r\n                  index > 9\r\n                    ? \"flip-back-quote authorFontStyle\"\r\n                    : \"flip-back-quote\"\r\n                }\r\n              >\r\n                {txt}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n      // console.log(divsArrSkills);\r\n\r\n      return divsArrSkills;\r\n    });\r\n    // }, [txtSkillsQuotation, ref]);\r\n    // }, [txtSkillsQuotation, countText, ref]);\r\n  }, [txtSkillsQuotation, countTextArr, ref]);\r\n\r\n  return (\r\n    <section\r\n      className=\"skills section sec4 bgr-cov-norp text-center pb-4\"\r\n      data-no=\"3\"\r\n      data-ctrlnav=\"ScrollNav\"\r\n    >\r\n      <header className=\"title sec-title title-col-bright title-bgr-dark\">\r\n        SKILLS\r\n      </header>\r\n      <div style={{ color: \"white\" }}>{counter}</div>\r\n      <button onClick={increment}>Click</button>\r\n      {/* <button onClick={increment}>Click</button> */}\r\n      <button onClick={changeCountText}>changeCountText Button</button>\r\n      <div className=\"container sec-cont\">\r\n        <div className=\"row justify-content-center align-middle py-4\">\r\n          {circleBoxes}\r\n          {/* {circleBoxesMemo} */}\r\n          {/* {circleB} */}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\n// export default Skills;\r\nexport default memo(Skills);\r\n","C:\\CODING\\React\\codencr\\src\\components\\MenuIcon.jsx",[],"C:\\CODING\\React\\codencr\\src\\components\\SkillsSect.jsx",["261","262","263","264","265","266"],"import React, {\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useCallback,\r\n  useRef,\r\n} from \"react\";\r\n\r\n// function getFlipBackQuoteClass(ind) {\r\n\r\nconst SkillsSect = React.forwardRef((props, ref) => {\r\n  const txtSkillsQuotation = [\r\n    \"The most\",\r\n    \"important\",\r\n    \"property of\",\r\n    \"a program\",\r\n    \"is\",\r\n    \"whether it\",\r\n    \"accomp- lishes\",\r\n    \"the intention\",\r\n    \"of its\",\r\n    \"user.\",\r\n    \"- C.A.R.\",\r\n    \"Hoare\",\r\n  ];\r\n\r\n  const countText = [\r\n    \"HTML\",\r\n    \"CSS\",\r\n    \"JS\",\r\n    \"Bootstrap\",\r\n    \"Webpack\",\r\n    \"NodeJS\",\r\n    \"PHP\",\r\n    \"MySQL\",\r\n    \"mongoDB\",\r\n    \"GIT\",\r\n    \"C++\",\r\n    \"REACT\",\r\n  ];\r\n\r\n  const [counter, setCounter] = useState(0);\r\n  const [counter2, setCounter2] = useState(0);\r\n  const numberRef = useRef(2);\r\n\r\n  //   const [circleBox, setCircleBox] = useState(() => {\r\n  //     txtSkillsQuotation.map((txt, index) => {\r\n  //       let divsArrSkills;\r\n  //       // console.log(\"circles\");\r\n  //       divsArrSkills = (\r\n  //         <div\r\n  //           className=\"flip-card col-md-4 mx-4 mb-4 mt-5 px-0 appear animated NotInView fadeOutDown\"\r\n  //           key={index}\r\n  //           ref={ref}\r\n  //         >\r\n  //           <div className=\"flip-card-inner\">\r\n  //             <div className=\"flip-card-front\">\r\n  //               <div\r\n  //                 className={\"row-counting counting count\" + index}\r\n  //                 data-controller=\"Appear\"\r\n  //               >\r\n  //                 {/* {countText[index]} */}\r\n  //                 {/* {setCounter2(counter2 + index)} */}\r\n  //                 {index + numberRef.current}\r\n  //               </div>\r\n  //             </div>\r\n  //             <div className={\"flip-card-back row-counting flipBgColor\" + index}>\r\n  //               {/* <div className={(index) => getFlipBackQuoteClass}>{txt}</div> */}\r\n  //               <div\r\n  //                 className={\r\n  //                   index > 9\r\n  //                     ? \"flip-back-quote authorFontStyle\"\r\n  //                     : \"flip-back-quote\"\r\n  //                 }\r\n  //               >\r\n  //                 {txt}\r\n  //               </div>\r\n  //             </div>\r\n  //           </div>\r\n  //         </div>\r\n  //       );\r\n  //       console.log(\"circles\");\r\n  //       // setCircleB([...circleB, divsArrSkills]);\r\n  //       return divsArrSkills;\r\n  //     });\r\n  //   });\r\n\r\n  useEffect(() => {\r\n    // setCircleB(circleBoxes);\r\n    console.log(circleBox);\r\n    // circleBoxes();\r\n    // setCircleB([...circleB, circleBoxes]);\r\n    console.log(\"Skills mounted\");\r\n    // getCircleBoxes(txtSkillsQuotation);\r\n    // console.log(circleBoxesMemo);\r\n    // console.log(circleB);\r\n    callSetCircleBox();\r\n  }, []);\r\n\r\n  //   const getFlipBackQuoteClass = useMemo(\r\n  //     (ind) => {\r\n  //       let classes;\r\n  //       console.log(\"classes\");\r\n  //       classes = ind > 9 ? \"flip-back-quote authorFontStyle\" : \"flip-back-quote\";\r\n  //       return classes;\r\n  //     },\r\n  //     [circleB]\r\n  //   );\r\n\r\n  const increment = () => {\r\n    setCounter(counter + 1);\r\n    numberRef.current = counter;\r\n  };\r\n\r\n  // const circleBoxes = useMemo(() => {\r\n  //   console.log(txtSkillsQuotation);\r\n  //   txtSkillsQuotation.map((txt, index) => {\r\n  //     let divsArrSkills;\r\n  //     console.log(\"circles\");\r\n  //     divsArrSkills = (\r\n  //       <div\r\n  //         className=\"flip-card col-md-4 mx-4 mb-4 mt-5 px-0 appear animated NotInView fadeOutDown\"\r\n  //         key={index}\r\n  //         ref={ref}\r\n  //       >\r\n  //         <div className=\"flip-card-inner\">\r\n  //           <div className=\"flip-card-front\">\r\n  //             <div\r\n  //               className={\"row-counting counting count\" + index}\r\n  //               data-controller=\"Appear\"\r\n  //             ></div>\r\n  //           </div>\r\n  //           <div className={\"flip-card-back row-counting flipBgColor\" + index}>\r\n  //             {/* <div className={(index) => getFlipBackQuoteClass}>{txt}</div> */}\r\n  //             <div\r\n  //               className={\r\n  //                 index > 9\r\n  //                   ? \"flip-back-quote authorFontStyle\"\r\n  //                   : \"flip-back-quote\"\r\n  //               }\r\n  //             >\r\n  //               {txt}\r\n  //             </div>\r\n  //           </div>\r\n  //         </div>\r\n  //       </div>\r\n  //     );\r\n  //     // console.log(divsArrSkills);\r\n\r\n  //     return divsArrSkills;\r\n  //   });\r\n  // }, [circleB]);\r\n  // const getCircleBoxes = (txtSkillsQuotation) => {\r\n  const circleBoxes = txtSkillsQuotation.map((txt, index) => {\r\n    let divsArrSkills;\r\n    // console.log(\"circles\");\r\n    divsArrSkills = (\r\n      <div\r\n        className=\"flip-card col-md-4 mx-4 mb-4 mt-5 px-0 appear animated NotInView fadeOutDown\"\r\n        key={index}\r\n        ref={ref}\r\n      >\r\n        <div className=\"flip-card-inner\">\r\n          <div className=\"flip-card-front\">\r\n            <div\r\n              className={\"row-counting counting count\" + index}\r\n              data-controller=\"Appear\"\r\n            >\r\n              {/* {countText[index]} */}\r\n              {/* {setCounter2(counter2 + index)} */}\r\n              {index + numberRef.current}\r\n            </div>\r\n          </div>\r\n          <div className={\"flip-card-back row-counting flipBgColor\" + index}>\r\n            {/* <div className={(index) => getFlipBackQuoteClass}>{txt}</div> */}\r\n            <div\r\n              className={\r\n                index > 9\r\n                  ? \"flip-back-quote authorFontStyle\"\r\n                  : \"flip-back-quote\"\r\n              }\r\n            >\r\n              {txt}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n    console.log(\"circles 2\");\r\n    // setCircleB([...circleB, divsArrSkills]);\r\n    return divsArrSkills;\r\n  });\r\n  // setCircleB([...circleB, circleBoxes]);\r\n\r\n  // return circleBoxes;\r\n  // };\r\n\r\n  //   const [circleBox, setCircleBox] = useState(circleBoxes);\r\n  const [circleBox, setCircleBox] = useState(circleBoxes);\r\n  const callSetCircleBox = useCallback(() => {\r\n    //   const callSetCircleBox = useMemo(() => {\r\n    // console.log(circleBoxes);\r\n    setCircleBox(circleBoxes);\r\n  }, [setCircleBox]);\r\n  // const circleBoxesMemo = useMemo(() => {\r\n  // console.log(\"Memo call\");\r\n  // getCircleBoxes(txtSkillsQuotation);\r\n  // setCircleB([...circleB, getCircleBoxes(txtSkillsQuotation)]);\r\n  // return circleB;\r\n  // }, [circleB]);\r\n\r\n  // const circleBoxesMemo = useMemo(() => getCircleBoxes(txtSkillsQuotation), [\r\n  //   txtSkillsQuotation,\r\n  // ]);\r\n\r\n  // const circleBoxesMemo = useCallback(\r\n  // const circleBoxesMemo = useMemo(\r\n  // () => setCircleB([...circleB, getCircleBoxes(txtSkillsQuotation)]),\r\n  // () => {\r\n  // getCircleBoxes(txtSkillsQuotation);\r\n  //     setCircleB([...circleB, circleBoxes]);\r\n  //     console.log(circleB);\r\n  //     return circleB;\r\n  //   },\r\n  //   [circleB]\r\n  // );\r\n\r\n  return (\r\n    <section\r\n      className=\"skills section sec4 bgr-cov-norp text-center pb-4\"\r\n      data-no=\"3\"\r\n      data-ctrlnav=\"ScrollNav\"\r\n    >\r\n      <header className=\"title sec-title title-col-bright title-bgr-dark\">\r\n        SKILLS\r\n      </header>\r\n      <div style={{ color: \"white\" }}>{counter}</div>\r\n      <button onClick={increment}>Click</button>\r\n      <div className=\"container sec-cont\">\r\n        <div className=\"row justify-content-center align-middle py-4\">\r\n          {/* {circleBox} */}\r\n          {/* {circleBoxesMemo} */}\r\n          {/* {circleB} */}\r\n          {/* {callSetCircleBox} */}\r\n          {circleBox}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default React.memo(SkillsSect);\r\n","C:\\CODING\\React\\codencr\\src\\AppCl.js",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\Navbar.jsx",["267"],"import React, { useState } from \"react\";\r\nimport NavItem from \"./NavItem\";\r\n\r\nconst navItemsTab = [\r\n  {\r\n    nameClass: \"color-dark p-3 bgr-col-org-bright shadow-dark \",\r\n    content: \"HOME\",\r\n  },\r\n  {\r\n    nameClass: \"color-dark p-3 bgr-col-org-bright shadow-dark \",\r\n    content: \"ABOUT ME\",\r\n  },\r\n  {\r\n    nameClass: \"color-dark p-3 bgr-col-org-bright shadow-dark \",\r\n    content: \"SERVICES\",\r\n  },\r\n  {\r\n    nameClass: \"color-dark p-3 bgr-col-org-bright shadow-dark \",\r\n    content: \"SKILLS\",\r\n  },\r\n  {\r\n    nameClass: \"color-dark p-3 bgr-col-org-bright shadow-dark \",\r\n    content: \"PROJECTS\",\r\n  },\r\n  {\r\n    nameClass: \"color-dark p-3 bgr-col-org-bright shadow-dark \",\r\n    content: \"CONTACT\",\r\n  },\r\n  {\r\n    // nameClass: \"closes color-orange-bright p-1 \",\r\n    nameClass: \"closes p-1 \",\r\n    content: <i className=\"icon-cancel-circled\" />,\r\n    // content: <i className=\"icon-cancel-squared\" />,\r\n  },\r\n];\r\n// class Navbar extends Component {\r\nfunction Navbar() {\r\n  // const [navItemsTab, setNavItemsTab] = useState(initialState)\r\n  console.log(\"Navbar render\");\r\n  const navItemList = navItemsTab.map((navItem, index) => {\r\n    // console.log(navItem);\r\n    return (\r\n      <NavItem\r\n        key={index}\r\n        navItem={navItem}\r\n        // navItemClass={navItem.nameClass}\r\n      ></NavItem>\r\n    );\r\n  });\r\n\r\n  // const navItemClasses = this.state.navItemClass.map(/)\r\n\r\n  return (\r\n    <nav className=\"navbar nav-light\">\r\n      <div className=\"order-first mainmenu mainmenu-persp\">\r\n        <ul className=\"navbar-nav nav h4 notvisible\">{navItemList}</ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\n// export const NavbarMemo = React.memo(Navbar);\r\nexport default React.memo(Navbar);\r\n","C:\\CODING\\React\\codencr\\src\\componentsHook\\FrontPage.jsx",["268","269","270","271","272","273","274","275","276","277","278"],"import React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useCallback,\r\n  useMemo,\r\n} from \"react\";\r\n// import \"bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport $, { speed } from \"jquery\";\r\n// import Article from \"../components/Article\";\r\n// import CarouselSlider from \"../components/CarouselSlider\";\r\n// import About from \"../components/About\";\r\n// import Services from \"../components/Services\";\r\n// import Skills from \"../components/Skills.jsx\";\r\n// import MenuIcon from \"../components/MenuIcon\";\r\n\r\nimport Article from \"./Article\";\r\n// import { CarouselSlider, logMsg } from \"./CarouselSlider\";\r\nimport Slider from \"./Slider\";\r\n// import About from \"./About\";\r\nimport Services from \"./Services\";\r\nimport Skills from \"./Skills.jsx\";\r\nimport MenuIcon from \"./MenuIcon\";\r\nimport About from \"./About\";\r\nimport useStateAsync from \"./customHooks/useStateAsync\";\r\nimport AboutMe from \"./AboutMe\";\r\nimport useAppear from \"./customHooks/useAppear\";\r\nimport useParallaxBgrImage from \"./customHooks/useParallaxBgrImage\";\r\nimport Projects from \"./Projects\";\r\n\r\nconst animShow4 = [\"fadeInLeft\", \"fadeInDown\", \"fadeInUp\", \"fadeInRight\"];\r\nconst animShow3 = [\"fadeInLeft\", \"fadeInUp\", \"fadeInRight\"];\r\nconst animShow2 = [\"fadeInLeft\", \"fadeInRight\"];\r\nconst animShow1 = [\"bounceIn\"];\r\n\r\nconst animHide4 = [\"fadeOutLeft\", \"fadeOutDown\", \"fadeOutUp\", \"fadeOutRight\"];\r\nconst animHide3 = [\"fadeOutLeft\", \"fadeOutDown\", \"fadeOutRight\"];\r\nconst animHide2 = [\"fadeOutLeft\", \"fadeOutRight\"];\r\nconst animHide1 = [\"fadeOutDown\"];\r\nconst appearTimeScroll = 1000,\r\n  appearTimeResizeAndHide = 5,\r\n  speedToMoveBgrImg = 2.5,\r\n  hem = 1;\r\n\r\nfunction FrontPage(props) {\r\n  // useState, usereducer używam tylko wtedy gdy potrzebuję, aby zmiana danej wartości była widoczna przez JSX w częsci return() lub by coś uruchamiała jak 'dependecies' np. przy useEffect; w przeciwnym razie wystarczy użyć useRef()\r\n  const [counter, setCounter] = useState(0);\r\n  //servicesRef.current = [] DEFINED WITHOUT CONSTRUCTOR\r\n  // const [pageFrontScrollBar, setPageFrontScrollBar] = useState(1);\r\n  // const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  // const [windowHeight, setWindowHeight] = useState(window.innerHeight);\r\n  // const [resizeFlag, setResizeFlag] = useState(false);\r\n\r\n  // custom hook dealing with selected div's appearing - the divs to be appeared are passed as an argument to 'handleAppearing' function; useAppear at the beginning is given a serie of animations' array to show or hide the selected divs step by step in one row\r\n  const { handleAppearing, divJustAppeared } = useAppear(\r\n    animShow1,\r\n    animShow2,\r\n    animShow3,\r\n    animShow4,\r\n    animHide1,\r\n    animHide2,\r\n    animHide3,\r\n    animHide4\r\n  );\r\n\r\n  const [windowWidth, setWindowWidth] = useStateAsync(window.innerWidth);\r\n  const [windowHeight, setWindowHeight] = useStateAsync(window.innerHeight);\r\n  const [resizeFlag, setResizeFlag] = useStateAsync(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [renderIndex, setRenderIndex] = useState(0);\r\n  const [countedFlag, setCountedFlag] = useState({ div: \"undefined\", ind: 0 });\r\n\r\n  // pageFrontScrollVar = $(pageFrontRef.current).scrollTop();\r\n  const mainmenuRef = useRef();\r\n  const frontRef = useRef();\r\n  const pageFrontScrollVar = useRef(0);\r\n  const pageFrontScrollVarBeforeTilt = useRef(0);\r\n  const pageFrontRef = useRef();\r\n  const aboutRef = useRef();\r\n  // const aboutAppear = useRef(false);\r\n\r\n  const sliderSectRef = useRef();\r\n  const servicesSectRef = useRef();\r\n  const skillsSectRef = useRef();\r\n  const projectsSectRef = useRef();\r\n  const contactSectRef = useRef();\r\n  const allSectionsRef = useRef([]);\r\n\r\n  const divsWithMovingBgrImage = useRef([]);\r\n  // vars for offsetTop of particular sections\r\n  const sliderTop = useRef();\r\n  const aboutTop = useRef();\r\n  const serviceTop = useRef();\r\n  const skillsTop = useRef();\r\n  const projectsTop = useRef();\r\n  const contactTop = useRef();\r\n  const allSectionsTopRef = useRef([]);\r\n\r\n  const menuIconRef = useRef();\r\n  const menuUl = useRef();\r\n  const linkBtnInMenu = useRef([]);\r\n\r\n  const menuIsOpened = useRef(false);\r\n\r\n  // elements of appearDivsRef\r\n  const servicesRef = useRef([]);\r\n  const skillsRef = useRef([]);\r\n  const appearDivsRef = useRef([]);\r\n\r\n  const [ifStartCount, setIfStartCount] = useState([]);\r\n  const [aboutTxtStart, setAboutTxtStart] = useState(false);\r\n  const { handleParallaxBgrImg, setSizeParallaxBackgroundImage } =\r\n    useParallaxBgrImage(windowHeight);\r\n  // const renderCountRef = React.createRef(1);\r\n\r\n  // const sliderSectRef = React.createRef();\r\n  // const pageFrontRef = React.createRef();\r\n  // const aboutRef = React.createRef();\r\n  // const servicesRef = React.createRef();\r\n  // const skillsRef = React.createRef();\r\n  // const appearDivsRef = React.createRef();\r\n  const renderCountRef = React.createRef(1);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"FRONTPage rendered!\");\r\n    // console.log(ifStartCount);\r\n    if (\r\n      $(divJustAppeared).find(\".counting\").length > 0 &&\r\n      !divJustAppeared.classList.contains(\"countStarted\")\r\n    ) {\r\n      console.log(\"COUNTING OBJECT\");\r\n      const index = skillsRef.current.indexOf(divJustAppeared);\r\n\r\n      startCountFlag(divJustAppeared, index);\r\n    }\r\n  }, [divJustAppeared]);\r\n\r\n  // tutaj trzeba dać tę funkcję 'keepArrowsInsideImg', bo gdy da się ją wewnątrz funkcji 'handleScroll' to poniższa funkjca widzi tylko pierowtne wartości windowWidth i windowHeight a tutaj widzi te uaktualnione w useState !!! WAŻNE !!!\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect-2\");\r\n    // console.log(pageFrontRef.current);\r\n\r\n    setRenderIndex((prevInd) => prevInd + 1);\r\n    return () => {\r\n      setRenderIndex();\r\n    };\r\n  }, [setRenderIndex]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"FRONTPAGE useEffect-3\");\r\n    // renderCountRef.current = renderCountRef.current + 1;\r\n\r\n    if (appearDivsRef.current.length <= 0) {\r\n      appearDivsRef.current = [\r\n        // ...appearDivsRef.current,\r\n        ...servicesRef.current,\r\n        ...skillsRef.current,\r\n      ];\r\n    }\r\n\r\n    if (allSectionsRef.current.length <= 0) {\r\n      allSectionsRef.current = [\r\n        sliderSectRef.current,\r\n        aboutRef.current,\r\n        servicesSectRef.current,\r\n        skillsSectRef.current,\r\n        projectsSectRef.current,\r\n        contactSectRef.current,\r\n      ];\r\n    }\r\n\r\n    if (divsWithMovingBgrImage.current.length <= 0) {\r\n      divsWithMovingBgrImage.current = [\r\n        aboutRef.current,\r\n        skillsSectRef.current,\r\n      ];\r\n    }\r\n\r\n    for (let i = 0; i < skillsRef.current.length; i++) {\r\n      setIfStartCount((prevTab) => [...prevTab, false]);\r\n    }\r\n    // console.log(appearDivsRef.current);\r\n    // console.log(allSectionsRef.current);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // const msgFromCarousel = logMsg(\"Good\");\r\n    // console.log(msgFromCarousel);\r\n    console.log(\"useEffect-4\");\r\n    // console.log(sliderSectRef.current);\r\n    // console.log(servicesSectRef.current);\r\n    // console.log(aboutRef.current);\r\n    // console.log($(aboutRef.current).offset().top);\r\n    // console.log(aboutRef.current.offsetTop);\r\n    // console.log(servicesRef.current);\r\n    // console.log(skillsRef.current);\r\n    menuIconRef.current.addEventListener(\"click\", () => {\r\n      console.log(\"menuIcon clicked\");\r\n      movePageFront();\r\n    });\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    // console.log(pageFrCurrent);\r\n    pageFrontRef.current.addEventListener(\"scroll\", handleScroll);\r\n    // pageFrontRef.current.addEventListener(\"scroll\", () => {\r\n    // if (resizeFlag === false) {\r\n    // console.log(\"scroll listener\");\r\n    // handleScroll();\r\n    // handleAppearing();\r\n    // }\r\n    // });\r\n    const pageFrCurrent = pageFrontRef.current;\r\n    const menuIconCurrent = menuIconRef.current;\r\n\r\n    menuUl.current = $(mainmenuRef.current).find(\"ul\");\r\n    linkBtnInMenu.current = $(menuUl.current).find(\"div.nav-link\");\r\n    // console.log(linkBtnInMenu.current);\r\n\r\n    for (let i = 0; i < linkBtnInMenu.current.length; i++) {\r\n      linkBtnInMenu.current[i].addEventListener(\"click\", (event) => {\r\n        scrollLink(event, i);\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n      pageFrCurrent.removeEventListener(\"scroll\", () => {\r\n        handleScroll();\r\n        // handleAppearing();\r\n      });\r\n      menuIconCurrent.removeEventListener(\"click\", () => {\r\n        console.log(\"menuIcon clicked\");\r\n        movePageFront();\r\n      });\r\n\r\n      for (let i = 0; i < linkBtnInMenu.current.length; i++) {\r\n        linkBtnInMenu.current[i].removeEventListener(\"click\", (event) => {\r\n          scrollLink(event, i);\r\n        });\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // console.log(countedFlag);\r\n    // console.log(ifStartCount);\r\n    if (countedFlag.div !== \"undefined\") {\r\n      const newStartCountArr = [...ifStartCount];\r\n      newStartCountArr[countedFlag.ind] = true;\r\n      // console.log(newStartCountArr);\r\n\r\n      setIfStartCount(newStartCountArr);\r\n    }\r\n    // countedFlag.div.classList.add(\"countStarted)\");\r\n  }, [countedFlag]);\r\n\r\n  useEffect(() => {\r\n    setSizeParallaxBackgroundImage(\r\n      divsWithMovingBgrImage.current,\r\n      pageFrontScrollVar.current\r\n    );\r\n  }, [divsWithMovingBgrImage]);\r\n\r\n  const callSetName = useCallback(\r\n    (elTargetVal) => {\r\n      setName(elTargetVal);\r\n    },\r\n    [setName]\r\n  );\r\n\r\n  const startCountFlag = (oneDiv, index) => {\r\n    // console.log(\"startCountFlag function!\");\r\n    // console.log(countedFlag);\r\n    // const objCount = {div: oneDiv, ind: index};\r\n    const objCount = { ...countedFlag };\r\n    objCount.div = oneDiv;\r\n    objCount.ind = index;\r\n    setCountedFlag(objCount);\r\n    oneDiv.classList.add(\"countStarted)\");\r\n  };\r\n\r\n  // scroll to the selected section and re-tilt pageFront\r\n  const scrollLink = (event, sectionNumber) => {\r\n    // event.preventDefault();\r\n    movePageFront();\r\n\r\n    if (sectionNumber < allSectionsRef.current.length) {\r\n      setTimeout(() => {\r\n        $(pageFrontRef.current).animate(\r\n          {\r\n            scrollTop:\r\n              pageFrontScrollVarBeforeTilt.current +\r\n              allSectionsTopRef.current[sectionNumber],\r\n          },\r\n          790\r\n        );\r\n      }, 10);\r\n    }\r\n  };\r\n\r\n  //   console.log($(mainTxtRef.current).offset().top); - z wartościami po przecinku i bez 'px'\r\n  //   console.log(mainTxtRef.current.offsetTop); - bez wartości po przecinku i bez 'px\r\n\r\n  // let's remember all sections top values and pageFront scrollTop value at the right moment i.e. before tilting\r\n  const getSectionsTop = () => {\r\n    allSectionsTopRef.current = [];\r\n    pageFrontScrollVarBeforeTilt.current = pageFrontScrollVar.current;\r\n    sliderTop.current =\r\n      sliderSectRef.current.offsetTop - pageFrontScrollVar.current;\r\n    aboutTop.current = aboutRef.current.offsetTop - pageFrontScrollVar.current;\r\n    serviceTop.current =\r\n      servicesSectRef.current.offsetTop - pageFrontScrollVar.current;\r\n\r\n    skillsTop.current =\r\n      skillsSectRef.current.offsetTop - pageFrontScrollVar.current;\r\n\r\n    projectsTop.current =\r\n      projectsSectRef.current.offsetTop - pageFrontScrollVar.current;\r\n\r\n    contactTop.current =\r\n      contactSectRef.current.offsetTop - pageFrontScrollVar.current;\r\n\r\n    if (allSectionsTopRef.current.length <= 0) {\r\n      allSectionsTopRef.current = [\r\n        sliderTop.current,\r\n        aboutTop.current,\r\n        serviceTop.current,\r\n        skillsTop.current,\r\n        projectsTop.current,\r\n        contactTop.current,\r\n      ];\r\n    }\r\n  };\r\n\r\n  // function responsible for tilting the pagefront div and uncovering or covering nav menu\r\n  const movePageFront = () => {\r\n    console.log(\"movePageFront Fn\");\r\n    // console.log(menuIsOpened.current);\r\n    if (menuIsOpened.current === false) {\r\n      getSectionsTop();\r\n      frontRef.current.classList.add(\"tilt\");\r\n      pageFrontRef.current.classList.add(\"overflow-hidden\");\r\n\r\n      // console.log(menuIconRef.current.childNodes);\r\n      menuIconRef.current.childNodes[0].classList.add(\"d-none\");\r\n      menuIconRef.current.childNodes[1].classList.remove(\"d-none\");\r\n      setTimeout(() => {\r\n        frontRef.current.classList.add(\"darker\");\r\n      }, 320);\r\n\r\n      setTimeout(() => {\r\n        menuUl.current[0].classList.remove(\"swaying-out\", \"notvisible\");\r\n        menuUl.current[0].classList.add(\"visible\", \"swaying-in\");\r\n      }, 300);\r\n\r\n      menuIsOpened.current = true;\r\n    } else {\r\n      menuUl.current[0].classList.remove(\"visible\", \"swaying-in\");\r\n      menuUl.current[0].classList.add(\"swaying-out\", \"notvisible\");\r\n\r\n      setTimeout(() => {\r\n        frontRef.current.classList.remove(\"tilt\", \"darker\");\r\n        pageFrontRef.current.classList.remove(\"overflow-hidden\");\r\n        menuIconRef.current.childNodes[0].classList.remove(\"d-none\");\r\n        menuIconRef.current.childNodes[1].classList.add(\"d-none\");\r\n      }, 250);\r\n\r\n      menuIsOpened.current = false;\r\n    }\r\n  };\r\n\r\n  const handleResize = async () => {\r\n    console.log(\"handleResize Fn\");\r\n    // setWindowWidth(window.innerWidth);\r\n    // await setStateAsync(\"setWindowWidth\", windowWidth, window.innerWidth);\r\n    await setWindowWidth(window.innerWidth, windowWidth);\r\n    // await setWindowHeight(window.innerHeight);\r\n    await setWindowHeight(window.innerHeight, windowHeight);\r\n    // await setStateAsync(\"setWindowHeight\", windowHeight, window.innerHeight);\r\n\r\n    handleHideResize();\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    // const handleScroll = useCallback(async () => {\r\n    // console.log(\"handleScroll fn\");\r\n    if (resizeFlag === false) {\r\n      const pFrontScroll = $(pageFrontRef.current).scrollTop();\r\n\r\n      pageFrontScrollVar.current = pFrontScroll;\r\n\r\n      handleParallaxBgrImg(\r\n        divsWithMovingBgrImage.current,\r\n        pageFrontScrollVar.current\r\n      );\r\n\r\n      handleAppearing(\r\n        windowHeight,\r\n        pFrontScroll,\r\n        appearTimeScroll,\r\n        appearDivsRef.current\r\n      );\r\n\r\n      if (\r\n        aboutTxtStart === false &&\r\n        $(aboutRef.current).offset().top + windowHeight / 2 <= windowHeight\r\n      ) {\r\n        setAboutTxtStart(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // const addToRefs = (el) => {\r\n  // catching divs to be passed to handleAppearing function\r\n  // 'ref' tiggering 'addToRefs' function pertains to relevant divs inside 'service' and 'skills' section, not to the sections itself, since the 'ref' is being forwarded to these components and then used in the relevant divs which are to be appeared\r\n  const addToRefs = useCallback(\r\n    // const addToRefs = useMemo(\r\n    (el) => {\r\n      // console.log(\"add to Refs\");\r\n      if (el && el !== null) {\r\n        const parentArr = $(el).parents();\r\n\r\n        [...parentArr].forEach((element) => {\r\n          // console.log(element);\r\n          if (element.classList.contains(\"services\")) {\r\n            // console.log(\"class contains\");\r\n            // console.log(el);\r\n            if (!servicesRef.current.includes(el)) {\r\n              servicesRef.current.push(el);\r\n              console.log(\"servicesRef.current.push\");\r\n            }\r\n          } else if (element.classList.contains(\"skills\")) {\r\n            // console.log(\"class contains\");\r\n            if (!skillsRef.current.includes(el)) {\r\n              skillsRef.current.push(el);\r\n              console.log(\"skillsRef.current.push\");\r\n            }\r\n          }\r\n        });\r\n      }\r\n    },\r\n    // [servicesRef.current, skillsRef.current]\r\n    [servicesRef, skillsRef]\r\n  );\r\n\r\n  const hideResize = () => {\r\n    const { current } = appearDivsRef;\r\n    // const { serviceAppearRef, animShow1, animHide1 } = state;\r\n    // const { serviceAppearRef, animShow1, animHide1 } = state;\r\n    return new Promise((resolve, reject) => {\r\n      if (current === undefined)\r\n        reject(new Error(\"Error to read divs' reference!\"));\r\n      else {\r\n        for (let i = 0; i < current.length; i++) {\r\n          // usuwamy klasę 'bounceIn'\r\n          if ($(current[i]).hasClass(animShow1[0])) {\r\n            $(current[i]).removeClass(animShow1[0]);\r\n          }\r\n\r\n          $(current[i]).removeClass(function (index, css) {\r\n            // console.log(css); // list of classes\r\n            return (css.match(/(^|\\s)fade\\S+/g) || []).join(\" \");\r\n          });\r\n          $(current[i]).addClass(animHide1[0]);\r\n          // $(serviceAppearRef[i]).removeClass(\"inView\").addClass(\"NotInView\");\r\n          $(current[i]).removeClass(\"inView\");\r\n          $(current[i]).addClass(\"NotInView\");\r\n        }\r\n        // console.log(\"hideResize END\");\r\n        resolve();\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleHideResize = async () => {\r\n    // console.log(\"handleHideResize Fn\");\r\n    console.log(\"setResizeFlag Fn BEFORE\");\r\n    // await setStateAsync(\"setResizeFlag\", resizeFlag, true);\r\n    await setResizeFlag(true, resizeFlag);\r\n    console.log(\"hideResize Fn BEFORE\");\r\n    await hideResize();\r\n    console.log(\"hideResize Fn AFTER\");\r\n    await setResizeFlag(false, resizeFlag);\r\n    // await setStateAsync(\"setResizeFlag\", resizeFlag, false);\r\n    console.log(\"setResizeFlag Fn AFTER\");\r\n    // handleAppearing(pageFrontScrollVar.current, appearTimeResizeAndHide);\r\n    handleAppearing(\r\n      windowHeight,\r\n      pageFrontScrollVar.current,\r\n      appearTimeResizeAndHide,\r\n      appearDivsRef.current\r\n    );\r\n    setSizeParallaxBackgroundImage(\r\n      divsWithMovingBgrImage.current,\r\n      pageFrontScrollVar.current\r\n    );\r\n    console.log(\"handleAppearing Fn AFTER RESIZE\");\r\n  };\r\n\r\n  const sampleStyle = {\r\n    backgroundColor: \"blue\",\r\n    width: \"auto\",\r\n    height: \"50px\",\r\n    position: \"fixed\",\r\n    left: \"100px\",\r\n    top: \"100px\",\r\n    zIndex: \"100\",\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div ref={mainmenuRef}>{props.children}</div>\r\n\r\n      <div className=\"frontMain body-frontMain\" ref={frontRef}>\r\n        <main className=\"pagefront frontMain-pagefront\" ref={pageFrontRef}>\r\n          {/* <Hamburger /> */}\r\n          <MenuIcon ref={menuIconRef} />\r\n          {/* <div style={sampleStyle}>Sample 1</div> */}\r\n          {/* <Article getClasses={() => \"align-middle\"}> */}\r\n          {/* <SectSlider /> */}\r\n          <Slider\r\n            windHeight={windowHeight}\r\n            windWidth={windowWidth}\r\n            // photoWidth={handlePhotoWidth}\r\n            // keepArrows={keepArrowsInsideImg}\r\n            ref={sliderSectRef}\r\n            // ref={addToRefs}\r\n          />\r\n          <AboutMe ref={aboutRef} textAppearStart={aboutTxtStart} />\r\n          {/* </Article> */}\r\n          {/* <Article getClasses={() => \"align-middle\"}> */}\r\n          <Services ref={addToRefs} refProp={servicesSectRef} />\r\n          <Skills\r\n            ref={addToRefs}\r\n            handleStartCount={ifStartCount}\r\n            refProp={skillsSectRef}\r\n          />\r\n          {/* </Article> */}\r\n          {/* <Article getClasses={() => \"align-middle\"}> */}\r\n          <Projects ref={projectsSectRef} />\r\n          {/* <section\r\n              style={{\r\n                backgroundColor: \"greenyellow\",\r\n                // color: \"black\",\r\n                textAlign: \"center\",\r\n                height: \"100vh\",\r\n              }}\r\n              ref={projectsSectRef}\r\n            >\r\n              Projects\r\n            </section> */}\r\n          <section\r\n            style={{\r\n              backgroundColor: \"royalblue\",\r\n              color: \"ghostwhite\",\r\n              textAlign: \"center\",\r\n              height: \"100vh\",\r\n            }}\r\n            ref={contactSectRef}\r\n          >\r\n            Contact\r\n          </section>\r\n          <div>{counter}</div>\r\n          <button onClick={() => setCounter((c) => c + 1)}>\r\n            Click to incr counter value\r\n          </button>{\" \"}\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            // onChange={(e) => setName(e.target.value)}\r\n            onChange={(e) => callSetName(e.target.value)}\r\n          />\r\n          <div>My name is {name} </div>\r\n          <div>This page has been rendered {renderCountRef.current} </div>\r\n          <div>Render index = {renderIndex} </div>\r\n          {/* <div>{divsToShowWithClassInView}</div> */}\r\n          {/* <div>{divsToHideWithClassNotInView}</div> */}\r\n          {/* </Article> */}\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FrontPage;\r\n","C:\\CODING\\React\\codencr\\src\\componentsHook\\Skills.jsx",["279","280"],"import React, {\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useCallback,\r\n  useRef,\r\n  memo,\r\n} from \"react\";\r\nimport CountUp from \"react-countup\";\r\n\r\n// function getFlipBackQuoteClass(ind) {\r\n\r\n// const txtSkillsQuotation = [\r\n//   \"The most\",\r\n//   \"important\",\r\n//   \"property of\",\r\n//   \"a program\",\r\n//   \"is\",\r\n//   \"whether it\",\r\n//   \"accomp- lishes\",\r\n//   \"the intention\",\r\n//   \"of its\",\r\n//   \"user.\",\r\n//   \"- C.A.R.\",\r\n//   \"Hoare\",\r\n// ];\r\n\r\nconst txtSkillsQ = [\r\n  \"The\",\r\n  \"most\",\r\n  \"important\",\r\n  \"property\",\r\n  \"of a\",\r\n  \"program\",\r\n  \"is\",\r\n  \"whether it\",\r\n  \"accomp- lishes\",\r\n  \"the\",\r\n  \"intention\",\r\n  \"of its\",\r\n  \"user.\",\r\n  \"- C.A.R.\",\r\n  \"Hoare\",\r\n];\r\nconst countEnds = [75, 75, 70, 70, 75, 75, 75, 65, 65, 65, 55, 55, 60, 70, 50];\r\nconst countingTime = 7;\r\n\r\nconst Skills = React.forwardRef(({ handleStartCount, refProp }, ref) => {\r\n  //\r\n  const [countTextArr, setCountTextArr] = useState([\r\n    \"HTML5\",\r\n    \"CSS3\",\r\n    \"JS\",\r\n    \"jQUERY\",\r\n    \"REACT.JS\",\r\n    \"HOOKS\",\r\n    \"Bootstrap\",\r\n    \"NodeJS\",\r\n    \"NPM\",\r\n    \"Express.js\",\r\n    \"PHP\",\r\n    \"MySQL\",\r\n    \"mongoDB\",\r\n    \"GIT\",\r\n    \"C++\",\r\n  ]);\r\n\r\n  // const [txtSkillsQuotation, setTxtSkillsQuotation] = useState([...txtSkillsQ]);\r\n  // const [txtSkillsQuotation, setTxtSkillsQuotation] = useState([\r\n  //   \"The most\",\r\n  //   \"important\",\r\n  //   \"property of\",\r\n  //   \"a program\",\r\n  //   \"is\",\r\n  //   \"whether it\",\r\n  //   \"accomp- lishes\",\r\n  //   \"the intention\",\r\n  //   \"of its\",\r\n  //   \"user.\",\r\n  //   \"- C.A.R.\",\r\n  //   \"Hoare\",\r\n  // ]);\r\n\r\n  const [counter, setCounter] = useState(0);\r\n  // const [counter2, setCounter2] = useState(0);\r\n\r\n  const numberRef = useRef(2);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"Skills render\");\r\n    // console.log(handleStartCount);\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   handleStartCount();\r\n  // }, [handleStartCount]);\r\n\r\n  const changeCountText = () => {\r\n    // const changeCountText = useMemo(() => {\r\n    // return{\r\n    console.log(\"changeCountText\");\r\n    console.log(countTextArr);\r\n    return setCountTextArr([\r\n      \"REACT\",\r\n      \"C++\",\r\n      \"GIT\",\r\n      \"mongoDB\",\r\n      \"MySQL\",\r\n      \"PHP\",\r\n      \"NodeJS\",\r\n      \"Webpack\",\r\n      \"Bootstrap\",\r\n      \"JS\",\r\n      \"CSS\",\r\n      \"HTML\",\r\n    ]);\r\n  };\r\n  // }, [countTextArr]);\r\n\r\n  // const countText = useMemo(\r\n  //   () => [\r\n  //     \"HTML\",\r\n  //     \"CSS\",\r\n  //     \"JS\",\r\n  //     \"Bootstrap\",\r\n  //     \"Webpack\",\r\n  //     \"NodeJS\",\r\n  //     \"PHP\",\r\n  //     \"MySQL\",\r\n  //     \"mongoDB\",\r\n  //     \"GIT\",\r\n  //     \"C++\",\r\n  //     \"REACT\",\r\n  //   ],\r\n  //   []\r\n  // );\r\n\r\n  // const txtSkillsQ = useMemo(\r\n  //   () => [\r\n  //     \"The most\",\r\n  //     \"important\",\r\n  //     \"property of\",\r\n  //     \"a program\",\r\n  //     \"is\",\r\n  //     \"whether it\",\r\n  //     \"accomp- lishes\",\r\n  //     \"the intention\",\r\n  //     \"of its\",\r\n  //     \"user.\",\r\n  //     \"- C.A.R.\",\r\n  //     \"Hoare\",\r\n  //   ],\r\n  //   // [numberRef.current]\r\n  //   []\r\n  // );\r\n\r\n  useEffect(() => {\r\n    // setCircleB(circleBoxes);\r\n    // console.log(countTextArr);\r\n    // console.log(txtSkillsQuotation);\r\n    // circleBoxes();\r\n    // setCircleB([...circleB, circleBoxes]);\r\n    console.log(\"Skills mounted\");\r\n    // console.log(txtSkillsQuotation);\r\n    // getCircleBoxes(txtSkillsQuotation);\r\n    // console.log(circleBoxesMemo);\r\n    // console.log(circleB);\r\n    // }, []);\r\n  }, []);\r\n\r\n  //   const getFlipBackQuoteClass = useMemo(\r\n  //     (ind) => {\r\n  //       let classes;\r\n  //       console.log(\"classes\");\r\n  //       classes = ind > 9 ? \"flip-back-quote authorFontStyle\" : \"flip-back-quote\";\r\n  //       return classes;\r\n  //     },\r\n  //     [circleB]\r\n  //   );\r\n\r\n  const increment = () => {\r\n    setCounter(counter + 1);\r\n    // numberRef.current = counter;\r\n  };\r\n\r\n  const circleBoxes = useMemo(() => {\r\n    // const circleBoxes = useCallback(() => {\r\n    // console.log(txtSkillsQuotation);\r\n    // console.log(\"circles\");\r\n    // return txtSkillsQuotation.map((txt, index) => {\r\n    // return txtSkillsQuotation.map((txt, index) => {\r\n    return txtSkillsQ.map((txt, index) => {\r\n      let divsArrSkills;\r\n\r\n      divsArrSkills = (\r\n        <div\r\n          className=\"flip-card col-md-4 mx-4 mb-4 mt-5 px-0 animated NotInView fadeOutDown\"\r\n          key={index}\r\n          ref={ref}\r\n        >\r\n          <div className=\"flip-card-inner\">\r\n            <div className=\"flip-card-front\">\r\n              <div\r\n                className={\"row-counting counting count\" + index}\r\n                data-controller=\"Appear\"\r\n              >\r\n                {/* {countTextArr[index]} */}\r\n                <div className=\"percent counting-percent\">\r\n                  {/* {props.handleStartCount[index] >= 0 ? props.handleStartCount[index] : \"\"}% */}\r\n                  {/* <CountUp end={countEnds[index]} duration={5} suffix=\"%\"> */}\r\n                  <CountUp\r\n                    end={\r\n                      handleStartCount[index] === false ? 0 : countEnds[index]\r\n                    }\r\n                    duration={countingTime}\r\n                    suffix=\"%\"\r\n                    delay={2}\r\n                  >\r\n                    {({ countUpRef }) => (\r\n                      <div style={{ fontWeight: \"bold\" }}>\r\n                        <div ref={countUpRef}></div>\r\n                        {/* <button onClick={start}>Start</button> */}\r\n                      </div>\r\n                    )}\r\n                  </CountUp>\r\n                </div>\r\n                <div className=\"skillName counting-skillName\">\r\n                  {countTextArr[index]}\r\n                </div>\r\n                {/* {countText[index]} */}\r\n                {/* {index + numberRef.current} */}\r\n              </div>\r\n            </div>\r\n            <div className={\"flip-card-back row-counting flipBgColor\" + index}>\r\n              {/* <div className={(index) => getFlipBackQuoteClass}>{txt}</div> */}\r\n              <div\r\n                className={\r\n                  index > 12\r\n                    ? \"flip-back-quote authorFontStyle\"\r\n                    : \"flip-back-quote\"\r\n                }\r\n              >\r\n                {txt}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n      // console.log(divsArrSkills);\r\n\r\n      return divsArrSkills;\r\n    });\r\n    // }, [txtSkillsQuotation, ref]);\r\n    // }, [txtSkillsQuotation, countText, ref]);\r\n    // }, [txtSkillsQuotation, countTextArr, ref]);\r\n  }, [countTextArr, handleStartCount, ref]);\r\n\r\n  return (\r\n    <section\r\n      className=\"skills section bgr-cov-norp text-center pb-4\"\r\n      data-no=\"3\"\r\n      data-ctrlnav=\"ScrollNav\"\r\n      ref={refProp}\r\n    >\r\n      <header className=\"title sec-title title-col-bright title-bgr-dark\">\r\n        SKILLS PILLS\r\n      </header>\r\n      <div style={{ color: \"white\" }}>{counter}</div>\r\n      <button onClick={increment}>Click</button>\r\n      {/* <button onClick={increment}>Click</button> */}\r\n      <button onClick={changeCountText}>changeCountText Button</button>\r\n      <div className=\"container sec-cont\">\r\n        <div className=\"row justify-content-center align-middle py-4\">\r\n          {circleBoxes}\r\n          {/* {circleBoxesMemo} */}\r\n          {/* {circleB} */}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\n// export default Skills;\r\nexport default memo(Skills);\r\n","C:\\CODING\\React\\codencr\\src\\componentsHook\\NavItem.jsx",["281"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NavItem({ navItem }) {\r\n  console.log(\"NavItem render\");\r\n  return (\r\n    <li className=\"nav-item bgr-col-dark pt-1\">\r\n      <div\r\n        // href=\"#\"\r\n        role=\"link\"\r\n        className={\"nav-link transform-scale-sm \" + navItem.nameClass}\r\n      >\r\n        {navItem.content}\r\n      </div>\r\n    </li>\r\n\r\n    // <li className=\"nav-item bgr-col-dark\">\r\n    //   <Link\r\n    //     to=\"/\"\r\n    // className={\r\n    //   \"nav-link p-3 shadow-dark color-dark bgr-col-org-bright transform-scale-sm \" +\r\n    //   props.navItem.nameClass\r\n    // }\r\n    //   >\r\n    //     {props.navItem.content}\r\n    //   </Link>\r\n    // </li>\r\n  );\r\n}\r\n\r\nexport default NavItem;\r\n","C:\\CODING\\React\\codencr\\src\\componentsHook\\About.jsx",["282","283","284","285","286"],"import React, {\r\n  useRef,\r\n  useEffect,\r\n  useState,\r\n  useCallback,\r\n  useMemo,\r\n} from \"react\";\r\nimport $ from \"jquery\";\r\nimport phI from \"../img/ja_odb4-2.jpg\";\r\nimport useStateAsync from \"./customHooks/useStateAsync\";\r\n\r\nconst aboutTitle = \"ABOUT ME\";\r\nconst mainTitle = \"Krzysztof Lalik\";\r\nconst subTitles = [\r\n  \"Front-end Developing\",\r\n  \"Back-end Supporting\",\r\n  \"Programming & designing websites\",\r\n  \"Fully responsive & interactive\",\r\n  \"Individuals & Companies\",\r\n  \"Sync & Async\",\r\n  \"MVC Pattern\",\r\n  \"Desktop, Tablet, Mobile\",\r\n];\r\n\r\nconst timeToDisplayTxt1 = 180;\r\nconst timeToDisplayTxt2 = 100;\r\nconst pause1 = 1500;\r\nconst pause2 = 1800;\r\nconst pause3 = 1200;\r\n\r\n// function About(props) {\r\nconst About = React.forwardRef((props, ref) => {\r\n  const {\r\n    // scrollPageFrontValue,\r\n    aboutTxtAppear,\r\n    // onAboutTxtAppear,\r\n    // windHeight,\r\n  } = props;\r\n  // const currentSubTitle = useRef(\"Front-end Developing\");\r\n  // const [currentSubTitle, setcurrentSubTitle] = useState(subTitles[0]);\r\n  // currentSubTitle - musi być w useState a nie w useRef, bo jego zmiana musi wyrenderować nowe zdanie w jsx\r\n  // const [currentSubTitle, setcurrentSubTitle] = useStateAsync(subTitles[0]);\r\n  const [currentSubTitle, setcurrentSubTitle] = useStateAsync(\"\", 1000);\r\n  const [spanSubChange, setSpanSubChange] = useState(false);\r\n\r\n  const mainTxtShown = useRef(false);\r\n\r\n  const subTxtCurrentIndex = useRef(0);\r\n\r\n  // const spanMainTitleRefTab = useRef([]);\r\n  // const spanSubTitleRefTab = useRef([]);\r\n  const visibility = useRef(\"hidden\");\r\n\r\n  // const mainTxt = React.createRef();\r\n  // const subTxt = React.createRef();\r\n\r\n  // mainTxtRef - reference to the div embracing the mainTitle within spanMainTitleRef.current\r\n  // const mainTxtRef = React.createRef();\r\n  const mainTxtRef = useRef();\r\n\r\n  // subTxtRef - reference to the div embracing the currentSubTitle within spanSubTitleRef.current\r\n  // const subTxtRef = React.createRef();\r\n  const subTxtRef = useRef();\r\n\r\n  // reference array to mainTitle 's each letter embraced around span\r\n  const spanMainTitleRef = useRef([]);\r\n\r\n  // reference array to currentSubTitle 's each letter embraced around span\r\n  const spanSubTitleRef = useRef([]);\r\n\r\n  // componentDidMount() {\r\n  // console.log(\"about componentDidMount\");\r\n  // let flagC = true;\r\n  // console.log(this.mainTxt);\r\n  // console.log(this.state.currentSubTitle);\r\n  //   this.setState({\r\n  //     spanMainTitleRefTab: [...this.spanMainTitleRef],\r\n  //     spanSubTitleRefTab: [...this.spanSubTitleRef],\r\n  //   });\r\n  // }\r\n\r\n  // if (el && el !== null) {\r\n  //   (!servicesRef.current.includes(el))\r\n  // }\r\n\r\n  useEffect(() => {\r\n    console.log(\"About render every time\");\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (aboutTxtAppear === true) {\r\n      console.log(\"useEffect spanMainTitleRef\");\r\n      // callDisplay(spanMainTitleRef.current, 0, subTxtCurrentIndex.current);\r\n      display(spanMainTitleRef.current, 0, subTxtCurrentIndex.current);\r\n    }\r\n  }, [aboutTxtAppear]);\r\n\r\n  useEffect(() => {\r\n    // console.log(spanSubTitleRef.current[0]);\r\n    // console.log(spanSubTitleRef.current[3]);\r\n    // console.log(spanSubTitleRef.current.length);\r\n    if (mainTxtShown.current === true && spanSubTitleRef.current.length > 0) {\r\n      // console.log(\"useEffect spanSubTitleRef\");\r\n      // callDisplay(spanSubTitleRef.current, 0, subTxtCurrentIndex.current);\r\n      display(spanSubTitleRef.current, 0, subTxtCurrentIndex.current);\r\n    }\r\n  }, [spanSubChange]);\r\n  // }, [mainTxtShown]);\r\n\r\n  // const subTitleAddRef = useCallback(\r\n  const subTitleAddRef = (el) => {\r\n    if (el && el !== null && !spanSubTitleRef.current.includes(el)) {\r\n      // console.log(\"subTitleAddRef Fn\");\r\n      spanSubTitleRef.current.push(el);\r\n      // console.log(\"sub span pushed!\");\r\n    }\r\n  };\r\n  // [spanSubTitleRef, spanSubChange]\r\n  // [spanSubTitleRef]\r\n  // );\r\n\r\n  const mainTitleAddRef = useCallback(\r\n    (el) => {\r\n      if (el && el !== null && !spanMainTitleRef.current.includes(el)) {\r\n        spanMainTitleRef.current.push(el);\r\n      }\r\n    },\r\n    [spanMainTitleRef]\r\n  );\r\n\r\n  // resolve tutaj to pusty callback, ale musi być, żeby Promise mógł cos zwrócić, bo inaczej wyrzuci błąd\r\n  // const setStateAsync = (state) => {\r\n  // console.log(\"Promise\");\r\n  //   return new Promise((resolve, reject) => {\r\n  //     if (reject.length > 1) reject(new Error(\"Error!\"));\r\n  //     else {\r\n  //       this.setState(state, resolve);\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n  // await setStateAsync(\"setWindowWidth\", windowWidth, window.innerWidth);\r\n  // await setStateAsync(\"setResizeFlag\", resizeFlag, true);\r\n\r\n  // spanTab - spanMainTitleRef or spanSubTitleRef\r\n  // iSubTab - subTxtCurrentIndex\r\n  const display = (spanTab, i, iSubTab) => {\r\n    // const {\r\n    //   mainTxtShown,\r\n    //   pause1,\r\n    //   spanMainTitleRefTab,\r\n    //   spanSubTitleRefTab,\r\n    //   subTxtCurrentIndex,\r\n    //   timeToDisplayTxt1,\r\n    //   timeToDisplayTxt2,\r\n    // } = this.state;\r\n    if (subTxtRef.current.classList.contains(\"fadeOutFast\")) {\r\n      subTxtRef.current.classList.remove(\"fadeOutFast\");\r\n    }\r\n    if (subTxtRef.current.classList.contains(\"fadeOut\")) {\r\n      subTxtRef.current.classList.remove(\"fadeOut\");\r\n    }\r\n    if (mainTxtRef.current.classList.contains(\"fadeOut\")) {\r\n      mainTxtRef.current.classList.remove(\"fadeOut\");\r\n    }\r\n\r\n    // if the mainTitle has not been displayed yet\r\n    if (mainTxtShown.current === false) {\r\n      //   const spansArray = [...this.state.spanMainTitleRefTab];\r\n      if (i < spanTab.length) {\r\n        displayOneSentence(spanTab, i, iSubTab, timeToDisplayTxt1);\r\n      } else {\r\n        // set current index of the span array to 0\r\n        i = 0;\r\n        mainTxtShown.current = true;\r\n        setTimeout(async () => {\r\n          // console.log(\"call spanSub first\");\r\n          // this.setState({ mainTxtShown: true }, () => {\r\n          // display(spanSubTitleRef.current, i, subTxtCurrentIndex);\r\n          await setcurrentSubTitle(\r\n            subTitles[subTxtCurrentIndex.current],\r\n            currentSubTitle\r\n          );\r\n          // });\r\n        }, pause1);\r\n      }\r\n    }\r\n    // if the mainTitle has already been displayed\r\n    else {\r\n      // if index of the particular sentence from subTitle array has not reached its last element\r\n      if (i < spanTab.length) {\r\n        // console.log(\"call spanSub next\");\r\n        displayOneSentence(spanTab, i, iSubTab, timeToDisplayTxt2);\r\n      }\r\n      // if index of the particular sentence from subTitle array has reached its last element (letter)\r\n      else {\r\n        // i = 0;\r\n        // console.log(\"call spanSub last\");\r\n        // if(subTxtCurrentIndex.current <=0){\r\n        // console.log(subTxtRef.current);\r\n        // }\r\n        subTxtCurrentIndex.current++;\r\n        // here we have to clear spanSubTitleRef.current since another spans with another letter will have to be stored in this reference\r\n        spanSubTitleRef.current = [];\r\n\r\n        // // if index of the subTitles array HAS NOT reached its last element (sentence) = if index of the subTitles array is less or equal to its last element (sentence)\r\n        if (subTxtCurrentIndex.current < subTitles.length) {\r\n          setTimeout(() => {\r\n            // console.log(subTxtRef.current);\r\n            subTxtRef.current.classList.add(\"fadeOutFast\");\r\n            setTimeout(async () => {\r\n              spanTab.forEach((span) => {\r\n                $(span).css(\"visibility\", \"hidden\");\r\n              });\r\n              await setcurrentSubTitle(\r\n                subTitles[subTxtCurrentIndex.current],\r\n                currentSubTitle\r\n              );\r\n            }, pause1 / 2);\r\n          }, pause3 / 2);\r\n        }\r\n\r\n        // if index of the subTitles array HAS REACHED its last element (sentence) - so what to do next\r\n        else {\r\n          // console.log(subTxtRef.current);\r\n          setTimeout(() => {\r\n            mainTxtRef.current.classList.add(\"fadeOut\");\r\n            subTxtRef.current.classList.add(\"fadeOut\");\r\n            subTxtCurrentIndex.current = 0;\r\n            mainTxtShown.current = false;\r\n\r\n            setTimeout(() => {\r\n              spanTab.forEach((span) => {\r\n                $(span).css(\"visibility\", \"hidden\");\r\n              });\r\n              spanMainTitleRef.current.forEach((span) => {\r\n                $(span).css(\"visibility\", \"hidden\");\r\n              });\r\n              // await setcurrentSubTitle(\r\n              //   subTitles[subTxtCurrentIndex.current],\r\n              //   currentSubTitle\r\n              // );\r\n              // console.log(\"subTxtCurrentIndex.current < subTitles.length\");\r\n\r\n              setTimeout(() => {\r\n                display(\r\n                  spanMainTitleRef.current,\r\n                  0,\r\n                  subTxtCurrentIndex.current\r\n                );\r\n              }, pause1);\r\n            }, pause1);\r\n          }, pause2);\r\n        }\r\n\r\n        // $(subTxtRef.current).html(\"\");\r\n\r\n        // callDisplay(spanSubTitleRef.current, i, subTxtCurrentIndex.current);\r\n      }\r\n    }\r\n  };\r\n\r\n  //\r\n  // const displayOneSentence = (spanTab, i, titleRefTab, iSubTab, time) => {\r\n  const displayOneSentence = (spanTab, i, iSubTab, time) => {\r\n    setTimeout(() => {\r\n      $(spanTab[i]).css(\"visibility\", \"visible\");\r\n      //   spansArray[i] = el;\r\n      i++;\r\n      // this.setState({ spanMainTitleRefTab: spansArray }, () => {\r\n      // setState({ titleRefTab: spanTab }, () => {\r\n      // console.log(this.state.spanMainTitleRefTab);\r\n      // display(titleRefTab, i, iSubTab);\r\n      // });\r\n      display(spanTab, i, iSubTab);\r\n    }, time);\r\n  };\r\n\r\n  // sectionStyle = () => {\r\n  // console.log(\"section style\");\r\n  //   return {\r\n  //     backgroundImage: \"url(\" + phI + \")\",\r\n  //     backgroundPosition: \"right\",\r\n  //   };\r\n  // };\r\n  const sectionStyle = {\r\n    // console.log(\"section style\");\r\n    backgroundImage: \"url(\" + phI + \")\",\r\n    backgroundPosition: \"right\",\r\n  };\r\n\r\n  // const {\r\n  //   mainTitle,\r\n  //   aboutTitle,\r\n  //   currentMainTitle,\r\n  //   currentSubTitle,\r\n  // } = this.state;\r\n\r\n  // mainTitle divided into each letter embraced around span\r\n  const mainTitleSpans = useMemo(() => {\r\n    return [...mainTitle].map((letter, ind) => {\r\n      // console.log(\"mainTitleSpan\");\r\n      // if(ind>= this.state)\r\n      return (\r\n        <span\r\n          // style={mainTxtShown.current === false ? { visibility: visibility } : ''}\r\n          style={\r\n            mainTxtShown.current === false\r\n              ? { visibility: \"hidden\" }\r\n              : { visibility: \"visible\" }\r\n          }\r\n          key={ind}\r\n          ref={mainTitleAddRef}\r\n          // ref={(ref) => (this.spanMainTitleRef[ind] = ref)}\r\n        >\r\n          {letter}\r\n        </span>\r\n      );\r\n    });\r\n  }, [mainTitle]);\r\n\r\n  // const mainTitleSpansMemo = React.memo([...mainTitleSpans]);\r\n\r\n  // currentSubTitle divided into each letter embraced around span\r\n  const subTitleSpans = useMemo(() => {\r\n    if (currentSubTitle.length > 0) {\r\n      const subTitleArray = [...currentSubTitle].map((letter, ind) => {\r\n        // console.log(\"subTitleSpans\");\r\n        // console.log([...currentSubTitle]);\r\n        // console.log(this.spanSubTitleRefTab);\r\n        return (\r\n          <span\r\n            // style={{ visibility: visibility }}\r\n            style={{ visibility: \"hidden\" }}\r\n            key={ind}\r\n            ref={subTitleAddRef}\r\n            // ref={(ref) => (this.spanSubTitleRef[ind] = ref)}\r\n            // ref={(ref) => this.setState(spanSubTitleRefTab: [ref)}\r\n            //   ref={(ref) =>\r\n            //     this.state((prevState) => {\r\n            //       return {\r\n            //         spanSubTitleRefTab: [...prevState.spanSubTitleRefTab, ref],\r\n            //       };\r\n            //     })\r\n            //   }\r\n          >\r\n            {letter}\r\n          </span>\r\n        );\r\n      });\r\n\r\n      // ta poniższa linia uruchamia ciąg wyświetlania subTitles\r\n      // setSpanSubChange let spanSubTitleRef.current to be filled out only after currentSubTitle and consequently  subTitleSpans have changed, not earlier\r\n      setSpanSubChange(!spanSubChange);\r\n      // console.log(\"setSpanSubChange after\");\r\n      return subTitleArray;\r\n    } else {\r\n      return null;\r\n    }\r\n  }, [currentSubTitle]);\r\n\r\n  return (\r\n    <section\r\n      className=\"section photo2 parallax art-sect bgr-center text-center\"\r\n      data-no=\"1\"\r\n      data-ctrlnav=\"ScrollNav\"\r\n      style={sectionStyle}\r\n      ref={ref}\r\n    >\r\n      <header className=\"title sec-title title-col-bright title-bgr-dark-bright-grad\">\r\n        {aboutTitle}\r\n      </header>\r\n      {/* <img src={phI} alt=\"Me\" className=\"photo2\" /> */}\r\n      <div className=\"container sec-cont\">\r\n        <div className=\"row justify-content-left cont-about-me about-me align-left\">\r\n          <div\r\n            className=\"text1 row-text1 col-sm-10 mb-4 h1 animated \"\r\n            ref={mainTxtRef}\r\n          >\r\n            {/* {currentMainTitle} */}\r\n            {mainTitleSpans}\r\n            {/* {mainTitleSpansMemo} */}\r\n          </div>\r\n          <div\r\n            className=\"text2 row-text2 col-sm-10 mb-4 h2 animated \"\r\n            ref={subTxtRef}\r\n          >\r\n            {subTitleSpans}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\n// export default React.forwardRef(About);\r\nexport default React.memo(About);\r\n\r\n// this.spanSubTitleRefTab = [];\r\n// let currSpanTabLeng = this.spanSubTitleRefTab.length;\r\n// let correctedArrayByLength;\r\n// let difference = Math.abs(currSpanTabLeng - prevSpanTabLeng);\r\n// let longer;\r\n// if (currSpanTabLeng < prevSpanTabLeng) {\r\n// currSpanTabLeng > prevSpanTabLeng ? longer=currSpanTabLeng : longer=prevSpanTabLeng;\r\n\r\n//   for (let i = 0; i < difference; i++) {\r\n//     this.spanSubTitleRefTab.pop();\r\n//   }\r\n// }\r\n\r\n// console.log(this.spanSubTitleRefTab);\r\n// console.log(this.spanSubTitleRefTab.length);\r\n// console.log(this.state.currentSubTitle);\r\n// console.log(this.state.currentSubTitle.length);\r\n","C:\\CODING\\React\\codencr\\src\\componentsHook\\Services.jsx",["287","288","289","290"],"import React, { useState, useEffect, useRef, useMemo } from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nconst txtSerives = [\r\n  \"UI Designing Front-End Developing Back-End Support\",\r\n  \"Modern Frameworks &\\u00A0Technologies REACT\\u00A0JS\\u00A0HOOKS\",\r\n  \"Coding Graphic Custom-made &\\u00A0Standard\",\r\n  \"Fully Responsive For\\u00A0All Displays\",\r\n  \"Innovative Ideas Sync\\u00A0/ Async\",\r\n  \"Projects for Individuals &\\u00A0Companies\",\r\n  \"High Quality, Clear, Interactive &\\u00A0Animated\",\r\n  \"Consultations Web Design &\\u00A0Content\",\r\n];\r\n\r\nconst iconNames = [\r\n  \"flaticon-layers\",\r\n  \"flaticon-code\",\r\n  \"flaticon-mechanism\",\r\n  \"flaticon-devices\",\r\n  \"icon-lightbulb\",\r\n  \"icon-sitemap\",\r\n  \"flaticon-diamond\",\r\n  \"flaticon-support\",\r\n];\r\n\r\n// function Services(props) {\r\nconst Services = React.forwardRef((props, ref) => {\r\n  const sectionRef = useRef();\r\n\r\n  // const iconRef = useRef([]);\r\n  // let iconRef = useRef([]);\r\n  // const iconRef = useRef(null);\r\n  // iconRef.current = [];\r\n\r\n  // let iconCopyRef = [];\r\n  // const refs = useRef([]);\r\n  // const handleRefs = (refs) => {\r\n  //   useMemo(() => {\r\n  //     return (ref = refs);\r\n  //   }, [iconRef]);\r\n  // };\r\n  // let icRefer;\r\n  // let icRef = useMemo(() => {\r\n  //   for (let i = 0; i < iconRef; i++) {\r\n  //     if (iconRef[i] != null) icRefer[i] = iconRef[i];\r\n  //   }\r\n  //   return icRefer;\r\n  // }, []);\r\n\r\n  console.log(\"Services Render\");\r\n\r\n  // useEffect(() => {\r\n  //   props.refProp = sectionRef.current;\r\n  // }, [sectionRef]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Services mounted\");\r\n    // console.log(sectionRef.current);\r\n    // console.log($(sectionRef.current).attr(\"class\").split(/\\s+/));\r\n    // console.log($(sectionRef.current).prop(\"classList\"));\r\n    // console.log($(sectionRef.current).prop(\"classList\")[1]);\r\n    // console.log($(sectionRef.current).prop(\"classList\").value);\r\n    // console.log(iconRef);\r\n    // console.log(iconRef.current);\r\n    // props.arrRef(iconRef.current);\r\n    // iconRef.forEach((el)=> {el=useRef()})\r\n    // iconCopyRef.length = iconRef.length;\r\n    // for(let i=0; i<iconRef.length; i++){\r\n    // handleRefs(iconRef);\r\n    // console.log(refs);\r\n    // }\r\n    // console.log(icRefer);\r\n    // props.arrRef(iconRef.current);\r\n    // ref = iconRef;\r\n  }, []);\r\n\r\n  // const addToRefs = (el) => {\r\n  //   if (el && !iconRef.current.includes(el)) {\r\n  //     iconRef.current.push(el);\r\n  //   }\r\n  //   console.log(iconRef.current);\r\n  // };\r\n\r\n  // const refs = useMemo(() => {\r\n  //   console.log(\"Memo service\");\r\n  //   // ref = iconRef.current;\r\n  //   props.arrRef(iconRef.current);\r\n  // }, [iconRef.current]);\r\n\r\n  const serviceDivs = txtSerives.map((txt, index) => {\r\n    // console.log(\"service\");\r\n    let servDiv;\r\n    if (index < 6) {\r\n      // console.log(index);\r\n      servDiv = (\r\n        <div\r\n          className=\"col-sm-4 box appear row-box animated NotInView fadeOutDown\"\r\n          data-controller=\"Appear\"\r\n          key={index}\r\n          // ref={ref}\r\n          // ref={(ref) => (ref[index] = ref)}\r\n          // ref={(ref) => (iconRef[index] = ref)}\r\n          // ref={(ref) => (iconRef.current = [...iconRef.current, ref])}\r\n          // ref={(ref) => props.arrRef(ref)}\r\n          // ref={props.arrRef(ref)}\r\n          // ref={props.arrRef(iconRef[index])}\r\n          // ref={ref}\r\n          ref={ref}\r\n          // ref={ref = ref[index]}\r\n          // ref={addToRefs}\r\n        >\r\n          <i className={iconNames[index]}></i>\r\n          <div className=\"infotxt mt-1\">\r\n            <p className=\"h4\">{txt}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      // console.log(index);\r\n      servDiv = (\r\n        <div\r\n          className=\"col-sm-6 box appear row-box animated NotInView fadeOutDown\"\r\n          data-controller=\"Appear\"\r\n          key={index}\r\n          // ref={(ref) => (iconRef[index] = ref)}\r\n          // ref={(ref) => props.arrRef(ref)}\r\n          // ref={props.arrRef(ref)}\r\n          ref={ref}\r\n          // ref={ref[index]}\r\n          // ref={(ref) => (iconRef.current = [...iconRef.current, ref])}\r\n          // ref={addToRefs}\r\n        >\r\n          <i className={iconNames[index]}></i>\r\n          <div className=\"infotxt mt-1\">\r\n            <p className=\"h4\">{txt}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return servDiv;\r\n  });\r\n\r\n  return (\r\n    <section\r\n      className=\"services section photo3 text-center\"\r\n      data-no=\"2\"\r\n      data-ctrlnav=\"ScrollNav\"\r\n      // data-ref={props.arrRef(iconRef)}\r\n      // ref={sectionRef}\r\n      ref={props.refProp}\r\n    >\r\n      <header className=\"title sec-title\">SERVICES</header>\r\n      <div className=\"container sec-cont py-3\">\r\n        <div className=\"row \">{serviceDivs}</div>\r\n      </div>\r\n    </section>\r\n  );\r\n  // }\r\n});\r\n\r\n// export default Services;\r\nexport default React.memo(Services);\r\n","C:\\CODING\\React\\codencr\\src\\componentsHook\\CarouselSlider.jsx",["291","292","293","294","295","296","297","298","299","300","301","302"],"C:\\CODING\\React\\codencr\\src\\componentsHook\\MenuIcon.jsx",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\Article.jsx",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\Carousel.jsx",["303","304","305","306","307","308","309","310","311","312","313"],"C:\\CODING\\React\\codencr\\src\\componentsHook\\Slider.jsx",["314","315","316","317","318","319","320","321","322","323"],"import React, { useState, useEffect, useCallback, useMemo, memo } from \"react\";\r\nimport $ from \"jquery\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport photo1 from \"../img/coding-924920_1280.jpg\";\r\nimport photo2 from \"../img/iphone_and_ipad-wallpaper-1280x853.jpg\";\r\nimport sign50 from \"../img/sign50.png\";\r\nimport photo3 from \"../img/programming-1857236_1280.jpg\";\r\nimport photo4 from \"../img/matrix_1280.jpg\";\r\nimport photo5 from \"../img/ja_odb4-1.jpg\";\r\nimport photo6 from \"../img/web-design-2906159_1280.jpg\";\r\nimport photo7 from \"../img/html5-386614_1280.jpg\";\r\nimport photo8 from \"../img/code-2620118_1280.jpg\";\r\nimport photo9 from \"../img/programming-1009134_1280.jpg\";\r\nimport photo10 from \"../img/monitors.jpg\";\r\nimport photo11 from \"../img/technology-785742_1280.jpg\";\r\nimport photo12 from \"../img/macbook-336704_1280.jpg\";\r\nimport { getAllByDisplayValue } from \"@testing-library/react\";\r\n\r\nconst carouselItemIndicators = [\r\n  \"item1 active\",\r\n  \"item2\",\r\n  \"item3\",\r\n  \"item4\",\r\n  \"item5\",\r\n  \"item6\",\r\n  \"item7\",\r\n  \"item8\",\r\n  \"item9\",\r\n  \"item10\",\r\n  \"item11\",\r\n  \"item12\",\r\n];\r\nconst carouselItemsPhotos = [\r\n  photo1,\r\n  photo2,\r\n  photo3,\r\n  photo4,\r\n  photo5,\r\n  photo6,\r\n  photo7,\r\n  photo8,\r\n  photo9,\r\n  photo10,\r\n  photo11,\r\n  photo12,\r\n];\r\nconst carouselHead = [\r\n  [\"Web-Developing & Designing\", \"Front & Back End Support\"],\r\n  [\"Up to\", sign50, \"ideas / h\", \"in built-up area\"],\r\n  [\"To make sens\", \"to make order\"],\r\n  [\"from tangle\", \"of non-decimal numbers\"],\r\n  [\"COD </> ENCJA\", \"Front-end developing\", \"Back-end supporting\"],\r\n  [\r\n    \"Programming & designing websites\",\r\n    \"Eye-catching & functional\",\r\n    \"Fully Responsive\",\r\n  ],\r\n  [\r\n    \"For individuals & companies\",\r\n    \"Portfolios, blogs, online-shops\",\r\n    \"adjusted to Customer expectations\",\r\n  ],\r\n  [\"Desktop, Tablet, Mobile\", \"MVC Pattern\", \"standard & original templates\"],\r\n  [\"Meeting high standards\", \"Update with new trends and technology\"],\r\n  [\"creative design animations\", \"with one to one swipe movement!\"],\r\n  [\"Flexible working time\"],\r\n  [\"until the project is done\"],\r\n];\r\nconst nonVisibileClass = \"notvisible\";\r\nconst captionsClass = \"carl-caption-capt animated\";\r\nconst animShowArr1 = \"fadeInDown\";\r\nconst animShowArr2 = [\"fadeInDown\", \"fadeInUp\"];\r\nconst animShowArr3 = [\"fadeInDown\", \"fadeInLeft\", \"fadeInRight\"];\r\nconst animShowArr4 = [\r\n  \"fadeInDown\",\r\n  \"bounceInLeft\",\r\n  \"fadeInLeft\",\r\n  \"fadeInRight\",\r\n];\r\n\r\n// export const logMsg = (txt) => {\r\n//   const msgDisplay = () => {\r\n//     console.log(\"msgDisplay!\");\r\n//   };\r\n\r\n//   <CarouselSlider logs={msgDisplay} />;\r\n//   console.log(\"logMsg Fn\");\r\n//   // <CarouselSlider log= />;\r\n//   return txt + \" morning!\";\r\n// };\r\n\r\n// export const setArrowMargins = (photoWidth, windWidth) => {\r\n//   // const { btnPrev, btnNext } = this.state;\r\n//   if (windWidth > photoWidth) {\r\n//     const mrgnExt = (windWidth - photoWidth) / 2.35;\r\n//     setCss(btnPrev, \"margin-left\", mrgnExt + \"px\");\r\n//     setCss(btnNext, \"margin-right\", mrgnExt + \"px\");\r\n//   } else {\r\n//     setCss(btnPrev, \"margin-left\", 0);\r\n//     setCss(btnNext, \"margin-right\", 0);\r\n//   }\r\n// };\r\n\r\n// export const keepArrowsInsideImg = (windHeight, windWidth) => {\r\n//   const proportionPhoto = 1.5;\r\n//   let photoWidth, photoHeight;\r\n//   if (windHeight >= windWidth) {\r\n//     photoWidth = windWidth;\r\n//   } else {\r\n//     photoHeight = windHeight;\r\n//     photoWidth = photoHeight * proportionPhoto;\r\n//   }\r\n// setArrowMargins(photoWidth, windWidth);\r\n// this.setState({ photoWidth }, () => {\r\n// this.setArrowMargins(this.state.photoWidth, windWidth);\r\n// console.log(this.state.photoWidth);\r\n// console.log(windHeight);\r\n// console.log(windWidth);\r\n// });\r\n// };\r\n\r\n// class CarouselSlider extends Component {\r\n// function CarouselSlider({ windHeight, windWidth }) {\r\nconst Slider = React.forwardRef(({ windHeight, windWidth }, ref) => {\r\n  // ({ windHeight, windWidth }, ref) => {\r\n  const [captionsRef, setCaptionsRef] = useState();\r\n  const [btnPrev, setBtnPrev] = useState();\r\n  const [btnNext, setBtnNext] = useState();\r\n  const [photoWidth, setPhotoWidth] = useState(0);\r\n  const [photoWindowWidthDifference, setPhotoWindowWidthDifference] = useState(\r\n    0\r\n  );\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  const secSliderRef = React.createRef();\r\n  // const crslItemRef = React.createRef();\r\n  // captionsRef = React.createRef([]);\r\n  const captionsRefer = [];\r\n\r\n  useEffect(() => {\r\n    console.log(\"CarouselSlider Rendered!\");\r\n    // console.log(btnPrev);\r\n    // console.log(btnNext);\r\n    console.log(\"photoWidth: -> \" + photoWidth);\r\n  });\r\n\r\n  useEffect(() => {\r\n    // console.log(\"useEffect 0 run - setPhotoWidth(keepArrows())\");\r\n    // setPhotoWidth(keepArrows(windHeight, windWidth));\r\n    // keepArrows(windHeight, windWidth);\r\n    // asyncSetStateCall();\r\n    // console.log(captionsRefer);\r\n    setCaptionsRef([...captionsRefer]);\r\n\r\n    // keepArrowsInsideImg(windHeight, windWidth)\r\n    // keepArrowsInsideImg(windHeight, windWidth)\r\n    // const msg2 = logMsg(\"Sunny\");\r\n    // console.log(logs);\r\n    // console.log(windHeight);\r\n    // setMsg(msg2);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect btnPrev btnNext\");\r\n    // secSliderRef.current.element - to 'element' to property dodawane przy React.createRef()\r\n    const btnPrevC = secSliderRef.current.element.childNodes[2];\r\n    const btnNextC = secSliderRef.current.element.childNodes[3];\r\n    setBtnPrev(btnPrevC);\r\n    setBtnNext(btnNextC);\r\n    // console.log(btnPrev);\r\n    // console.log(btnNext);\r\n    // }, [btnPrev, btnNext]);\r\n  }, []);\r\n\r\n  // const callSetPhotoWidth = (phWidth) => {\r\n  // const callSetPhotoWidth = useCallback(() => {\r\n  // console.log(phWidth);\r\n  //   console.log(\"callSetPhotoWidth\");\r\n  //   return new Promise((resolve, reject) => {\r\n  //     if (reject.length > 1) reject(new Error(\"Error in callSetPhotoWidth!\"));\r\n  //     else {\r\n  // setPhotoWidth(phWidth);\r\n  // console.log(phWidth);\r\n  // resolve(phWidth);\r\n  // setPhotoWidth(keepArrows(windHeight, windWidth));\r\n  // console.log(keepArrows());\r\n  // const phWidth = keepArrows();\r\n  //   const phWidth = keepArrows(windHeight, windWidth);\r\n  // setPhotoWidth(keepArrows());\r\n  //   console.log(phWidth);\r\n  //   resolve(phWidth);\r\n  // }\r\n  //   });\r\n  // };\r\n  // }, [windWidth]);\r\n  // }, [keepArrows]);\r\n\r\n  // const asyncSetStateCall = useCallback(\r\n  //   async (btnPrevVar, btnNextVar) => {\r\n  //     console.log(\"asyncSetStateCall\");\r\n  //     console.log(btnPrevVar);\r\n  //     console.log(windHeight);\r\n  //     console.log(windWidth);\r\n  //     // const photoW = await callSetPhotoWidth(keepArrows(windHeight, windWidth));\r\n  //     const photoW = await callSetPhotoWidth();\r\n  //     console.log(photoW);\r\n  //     // if (photoW > 0) {\r\n  //     // console.log(btnPrev);\r\n  //     console.log(btnNext);\r\n  //     // setCss(btnPrev, \"margin-left\", 200 + \"px\");\r\n  //     // setCss(btnNext, \"margin-right\", 200 + \"px\");\r\n  //     setArrowMargins(photoW, windWidth, btnPrevVar, btnNextVar);\r\n  //     // }\r\n  //     // }, [windWidth, windHeight]);\r\n  //   },\r\n  //   [windWidth]\r\n  // );\r\n\r\n  // to obliczanie phWidth jest nieprawidłowe - trzeba je poprawić\r\n  useEffect(() => {\r\n    console.log(\"useEffect setPhotoWidth\");\r\n    let phWidth;\r\n    const proportionPhoto = 1.5;\r\n    if (windHeight * proportionPhoto >= windWidth) {\r\n      phWidth = windWidth;\r\n    } else {\r\n      phWidth = windHeight * proportionPhoto;\r\n      //   phWidth = windWidth / proportionPhoto;\r\n    }\r\n    console.log(\"WINDWidth -> \" + windWidth);\r\n    console.log(phWidth);\r\n    setPhotoWidth(phWidth);\r\n\r\n    // if (windWidth > phWidth) {\r\n    setPhotoWindowWidthDifference(windWidth - phWidth);\r\n    // }\r\n  }, [windWidth, windHeight]);\r\n\r\n  // useEffect(() => {\r\n  //   if (windWidth - photoWidth > 5) {\r\n  //     setPhotoWindowWidthDifference(windWidth - photoWidth);\r\n  //   }\r\n  // }, [windWidth, windHeight]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect keepArrows\");\r\n    console.log(photoWindowWidthDifference);\r\n    // console.log(btnPrev);\r\n    // console.log(btnNext);\r\n    // console.log(typeof btnPrev);\r\n    // console.log(typeof btnNext);\r\n    if (typeof btnPrev !== \"undefined\" && typeof btnNext !== \"undefined\") {\r\n      // if (typeof btnPrev === \"object\" && typeof btnNext === \"object\") {\r\n      console.log(\"Call keepArrowsInsideImg\");\r\n      keepArrowsInsideImg(btnPrev, btnNext);\r\n    }\r\n    // return () => {\r\n    //   keepArrowsInsideImg();\r\n    // };\r\n    // }, [keepArrows]);\r\n    // }, [windWidth]);\r\n    //   }, [btnPrev, windWidth, windHeight]);\r\n  }, [photoWindowWidthDifference]);\r\n  // }, [windWidth, windHeight]);\r\n  // }, []);\r\n  //   });\r\n\r\n  // console.log(\"photoWidth: \" + photoWidth);\r\n  // console.log(\"windWidth: \" + windWidth);\r\n  // console.log(\"windHeight: \" + windHeight);\r\n\r\n  // useEffect(() => {\r\n  // setMsg(logs());\r\n  // console.log(msg);\r\n  // return () => {\r\n  //   logs();\r\n  // };\r\n  // }, [logs]);\r\n\r\n  // const msgShow = () => {\r\n  //   console.log(\"msgShow from Carousel\");\r\n  // };\r\n\r\n  // ta funkcja powinna reagować na zmianę różnicy pomiedzy wartością photoWidth a windowWidth\r\n  // const keepArrowsInsideImg = useCallback(\r\n  const keepArrowsInsideImg = (btnPrevVar, btnNextVar) => {\r\n    console.log(\"keepArrowsInsideImg Fn\");\r\n    console.log(\"windWidth - \" + windWidth);\r\n    //   const proportionPhoto = 1.5;\r\n    //   let photoWidth, photoHeight;\r\n    //   if (windHeight >= windWidth) {\r\n    //     photoWidth = windWidth;\r\n    //   } else {\r\n    //     photoHeight = windHeight;\r\n    //     photoWidth = photoHeight * proportionPhoto;\r\n    //   }\r\n    //   console.log(photoWidth);\r\n    // return { photoWidth, windWidth };\r\n    //   return photoWidth;\r\n    setArrowMargins(photoWidth, windWidth, btnPrevVar, btnNextVar);\r\n    // },[windowWidth, windowHeight]);\r\n  };\r\n  // },\r\n  // [windWidth, windHeight]\r\n  // [photoWindowWidthDifference]\r\n  // );\r\n\r\n  // const setArrowMargins = useCallback(\r\n  const setArrowMargins = (photoW, windWidth, btnP, btnN) => {\r\n    // const setArrowMargins = () => {\r\n    console.log(\"setArrowMargins Fn\");\r\n    //   console.log(photoW);\r\n    //   console.log(windWidth);\r\n    // console.log(btnPrev);\r\n    // console.log(btnNext);\r\n    // const { btnPrev, btnNext } = this.state;\r\n    if (windWidth > photoW) {\r\n      const mrgnExt = (windWidth - photoW) / 2.35;\r\n      // setCss(btnPrev, \"margin-left\", mrgnExt + \"px\");\r\n      // setCss(btnNext, \"margin-right\", mrgnExt + \"px\");\r\n      setCss(btnP, \"margin-left\", mrgnExt + \"px\");\r\n      setCss(btnN, \"margin-right\", mrgnExt + \"px\");\r\n    } else {\r\n      // setCss(btnPrev, \"margin-left\", 0);\r\n      // setCss(btnNext, \"margin-right\", 0);\r\n      setCss(btnP, \"margin-left\", 0);\r\n      setCss(btnN, \"margin-right\", 0);\r\n    }\r\n  };\r\n  // },\r\n  // [windWidth, windHeight]\r\n  // [photoWindowWidthDifference]\r\n  // [keepArrowsInsideImg]\r\n  // );\r\n\r\n  const handleNextSlide = (ind) => {\r\n    // console.log(ind);\r\n    // const {\r\n    //   animShowArr2,\r\n    //   animShowArr3,\r\n    //   animShowArr4,\r\n    //   nonVisibileClass,\r\n    //   captionsRef,\r\n    // } = this.state;\r\n    const captionsCopy = [...captionsRef];\r\n    // const captionNext = captionsCopy[ind];\r\n    // console.log(captionsCopy);\r\n    // console.log(captionsCopy[i].childNodes[0].className);\r\n    const captionsNextArray = captionsCopy[ind].childNodes;\r\n    // console.log(captionsNextArray);\r\n    // console.log(captionsArray[0]);\r\n\r\n    let animationArray;\r\n    if (captionsNextArray.length < 3) animationArray = animShowArr2;\r\n    else if (captionsNextArray.length === 3) animationArray = animShowArr3;\r\n    else if (captionsNextArray.length > 3) animationArray = animShowArr4;\r\n    // captionsCopy[i].childNodes[0].className += \" \" + this.state.visibileClass + \" \"+ this.state.fadeInDown;\r\n    for (let i = 0; i < captionsNextArray.length; i++) {\r\n      captionsNextArray[i].classList.remove(nonVisibileClass);\r\n      captionsNextArray[i].classList.add(animationArray[i]);\r\n    }\r\n\r\n    // console.log(captionsNextArray);\r\n    // console.log([...this.state.captionsRef]);\r\n\r\n    // captionsCopy[ind].childNodes[0].classList.remove(this.state.nonVisibileClass);\r\n    // captionsCopy[ind].childNodes[0].classList.add(this.state.fadeInDown);\r\n    // console.log(captionsCopy[i].childNodes[0].className);\r\n  };\r\n\r\n  const handlePrevSlide = (ind) => {\r\n    // const {\r\n    //   animShowArr2,\r\n    //   animShowArr3,\r\n    //   animShowArr4,\r\n    //   nonVisibileClass,\r\n    //   carouselItemsPhotos,\r\n    //   captionsRef,\r\n    // } = this.state;\r\n    let index;\r\n    ind === 0 ? (index = carouselItemsPhotos.length - 1) : (index = ind - 1);\r\n    // console.log(index);\r\n    const captionsCopy = [...captionsRef];\r\n    // const captionNext = captionsCopy[ind];\r\n    // console.log(captionsCopy);\r\n    // console.log(captionsCopy[i].childNodes[0].className);\r\n    const captionsPrevArray = captionsCopy[index].childNodes;\r\n    // console.log(captionsNextArray);\r\n    // console.log(captionsArray[0]);\r\n\r\n    let animationArray;\r\n    if (captionsPrevArray.length < 3) animationArray = animShowArr2;\r\n    else if (captionsPrevArray.length === 3) animationArray = animShowArr3;\r\n    else if (captionsPrevArray.length > 3) animationArray = animShowArr4;\r\n    // captionsCopy[i].childNodes[0].className += \" \" + this.state.visibileClass + \" \"+ this.state.fadeInDown;\r\n    for (let i = 0; i < captionsPrevArray.length; i++) {\r\n      captionsPrevArray[i].classList.remove(animationArray[i]);\r\n      captionsPrevArray[i].classList.add(nonVisibileClass);\r\n    }\r\n  };\r\n\r\n  const setCss = (div, property, val) => {\r\n    $(div).css(property, val);\r\n    // console.log(property);\r\n    // console.log(val);\r\n    // console.log(div);\r\n  };\r\n\r\n  // const setArrowMargins = (photoWidth, windWidth) => {\r\n  //   // const { btnPrev, btnNext } = this.state;\r\n  //   if (windWidth > photoWidth) {\r\n  //     const mrgnExt = (windWidth - photoWidth) / 2.35;\r\n  //     setCss(btnPrev, \"margin-left\", mrgnExt + \"px\");\r\n  //     setCss(btnNext, \"margin-right\", mrgnExt + \"px\");\r\n  //   } else {\r\n  //     setCss(btnPrev, \"margin-left\", 0);\r\n  //     setCss(btnNext, \"margin-right\", 0);\r\n  //   }\r\n  // };\r\n\r\n  // ustawienie położenia strzałek kontrolnych prev i next w trakcie resize\r\n  // setArrowPosition = async function (vH, vW) {\r\n  //   try {\r\n  //     imgWidth = await self.getImgSize(vH, vW);\r\n  //     await self.setMrgnArr(imgWidth, vW);\r\n  //   } catch (error) {\r\n  //     throw new Error(error);\r\n  //   }\r\n  // };\r\n\r\n  // const keepArrowsInsideImg = (windHeight, windWidth) => {\r\n  //   const proportionPhoto = 1.5;\r\n  //   let photoWidth, photoHeight;\r\n  //   if (windHeight >= windWidth) {\r\n  //     photoWidth = windWidth;\r\n  //   } else {\r\n  //     photoHeight = windHeight;\r\n  //     photoWidth = photoHeight * proportionPhoto;\r\n  //   }\r\n  //   setArrowMargins(photoWidth, windWidth);\r\n  // // this.setState({ photoWidth }, () => {\r\n  // // this.setArrowMargins(this.state.photoWidth, windWidth);\r\n  // // console.log(this.state.photoWidth);\r\n  // // console.log(windHeight);\r\n  // // console.log(windWidth);\r\n  // // });\r\n  // };\r\n\r\n  // const { carouselHead, captionsClass, nonVisibileClass } = this.state;\r\n\r\n  const carslHeaders = (index) => {\r\n    const carslCaptions = carouselHead[index].map((header, index2) => {\r\n      // let i = 0;\r\n      // while (i < 100000000) i++;\r\n      let carslCaption;\r\n      if (index2 === 1 && index === 1) {\r\n        carslCaption = (\r\n          // <div className={this.state.captionsClassSign} key={index2}>\r\n          <div\r\n            className={\r\n              captionsClass + \" sign carl-caption-sign \" + nonVisibileClass\r\n            }\r\n            key={index2}\r\n          >\r\n            <img src={header} alt=\"50 ideas/h\" className=\"sign-img\"></img>\r\n          </div>\r\n        );\r\n      } else {\r\n        carslCaption = (\r\n          <div\r\n            className={\r\n              index === 0\r\n                ? `${captionsClass} capt head1`\r\n                : index !== 0 && index2 === 0\r\n                ? `${captionsClass} capt head1 ${nonVisibileClass}`\r\n                : `${captionsClass} capt ${nonVisibileClass}`\r\n            }\r\n            key={index2}\r\n          >\r\n            {header}\r\n          </div>\r\n        );\r\n      }\r\n      // console.log(carslCaption);\r\n      return carslCaption;\r\n    });\r\n\r\n    // console.log(carslCaptions);\r\n    return carslCaptions;\r\n  };\r\n\r\n  const carouselItemList = carouselItemsPhotos.map((photo, index) => {\r\n    // const newRef = React.createRef();\r\n    // this.captionsRef.push(newRef);\r\n    return (\r\n      // <Carousel.Item key={index} ref={crslItemRef}>\r\n      <Carousel.Item key={index}>\r\n        {/* <center> */}\r\n        <img\r\n          src={photo}\r\n          alt={\"Slide \" + index}\r\n          className=\"carous-img carous-item-img\"\r\n        />\r\n        {/* </center> */}\r\n        {/* <Carousel.Caption key={index} ref={newRef}> */}\r\n        <Carousel.Caption\r\n          key={index}\r\n          ref={(refe) => (captionsRefer[index] = refe)}\r\n        >\r\n          {carslHeaders(index)}\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <center>\r\n      <section\r\n        id=\"slider\"\r\n        className=\"section slider article-slider\"\r\n        data-no=\"0\"\r\n        data-ctrlnav=\"ScrollNav\"\r\n        ref={ref}\r\n      >\r\n        <Carousel\r\n          style={{ position: \"relative\" }}\r\n          fade={true}\r\n          ref={secSliderRef}\r\n          onSlide={(ind) => {\r\n            handleNextSlide(ind);\r\n          }}\r\n          onSlid={(ind) => {\r\n            handlePrevSlide(ind);\r\n          }}\r\n          // onSlid={(el) => console.log(el)}\r\n          // onSelect={(activeIndex) => console.log(activeIndex)}\r\n        >\r\n          {carouselItemList}\r\n        </Carousel>\r\n      </section>\r\n    </center>\r\n  );\r\n});\r\n// export default msgShow;\r\nexport default memo(Slider);\r\n","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useStateAsync.js",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\AboutMe.jsx",["324","325","326","327","328"],"import React, { useEffect } from \"react\";\r\nimport phI from \"../img/ja_odb4-2.jpg\";\r\nimport WriteText from \"./WriteText\";\r\n\r\nconst aboutTitle = \"ABOUT ME\";\r\nconst mainTitle = \"COD </&# ENCJA\";\r\nconst subTitles = [\r\n  \"Front-end Developing\",\r\n  \"Back-end Supporting\",\r\n  \"Programming & designing websites\",\r\n  \"Fully responsive & interactive\",\r\n  \"Individuals & Companies\",\r\n  \"Sync & Async\",\r\n  \"MVC Pattern\",\r\n  \"Desktop, Tablet, Mobile\",\r\n];\r\n\r\nconst timeToDisplayTxt1 = 180;\r\nconst timeToDisplayTxt2 = 100;\r\nconst pause1 = 1500;\r\nconst pause2 = 1800;\r\nconst pause3 = 1200;\r\n\r\n// function About(props) {\r\nconst About = React.forwardRef((props, ref) => {\r\n  const {\r\n    // scrollPageFrontValue,\r\n    textAppearStart,\r\n    // onAboutTxtAppear,\r\n    // windHeight,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    console.log(\"About Me render every time\");\r\n  });\r\n\r\n  const sectionStyle = {\r\n    // console.log(\"section style\");\r\n    backgroundImage: \"url(\" + phI + \")\",\r\n    backgroundPosition: \"right\",\r\n  };\r\n\r\n  return (\r\n    <section\r\n      className=\"section photo2 bgr-center text-center\"\r\n      data-no=\"1\"\r\n      data-ctrlnav=\"ScrollNav\"\r\n      style={sectionStyle}\r\n      ref={ref}\r\n    >\r\n      <header className=\"title sec-title title-col-bright title-bgr-dark-bright-grad\">\r\n        {aboutTitle}\r\n      </header>\r\n      {/* <img src={phI} alt=\"Me\" className=\"photo2\" /> */}\r\n      <div className=\"container sec-cont\">\r\n        <WriteText\r\n          textAppearStart={textAppearStart}\r\n          pauseBetweenNewSentenceAppear={1200}\r\n          pauseAfterAllTextsDisplayed={1800}\r\n          pauseBeforeOneSubTitleSentenceFadeOut={800}\r\n          timeToDisplayText1={180}\r\n          timeToDisplayText2={100}\r\n          mainTitle={mainTitle}\r\n          subTitles={subTitles}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\n// export default React.forwardRef(About);\r\nexport default React.memo(About);\r\n","C:\\CODING\\React\\codencr\\src\\componentsHook\\WriteText.jsx",["329","330","331","332"],"import React, {\r\n  useRef,\r\n  useEffect,\r\n  useState,\r\n  useCallback,\r\n  useMemo,\r\n} from \"react\";\r\nimport $ from \"jquery\";\r\nimport useStateAsync from \"./customHooks/useStateAsync\";\r\n\r\nfunction WriteText(props) {\r\n  const {\r\n    textAppearStart,\r\n    pauseBetweenNewSentenceAppear,\r\n    pauseAfterAllTextsDisplayed,\r\n    pauseBeforeOneSubTitleSentenceFadeOut,\r\n    timeToDisplayText1,\r\n    timeToDisplayText2,\r\n    mainTitle,\r\n    subTitles,\r\n  } = props;\r\n  // currentSubTitle - musi być w useState a nie w useRef, bo jego zmiana musi wyrenderować nowe zdanie w jsx\r\n  const [currentSubTitle, setCurrentSubTitle] = useStateAsync(\"\", 1000);\r\n  const [spanSubChange, setSpanSubChange] = useState(false);\r\n\r\n  const mainTxtShown = useRef(false);\r\n\r\n  const subTxtCurrentIndex = useRef(0);\r\n\r\n  // mainTxtRef - reference to the div embracing the mainTitle within spanMainTitleRef.current\r\n  const mainTxtRef = useRef();\r\n\r\n  // subTxtRef - reference to the div embracing the currentSubTitle within spanSubTitleRef.current\r\n  const subTxtRef = useRef();\r\n\r\n  // reference array to mainTitle 's each letter embraced around span\r\n  const spanMainTitleRef = useRef([]);\r\n\r\n  // reference array to currentSubTitle 's each letter embraced around span\r\n  const spanSubTitleRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"About render every time\");\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (textAppearStart === true) {\r\n      console.log(\"useEffect spanMainTitleRef\");\r\n      // callDisplay(spanMainTitleRef.current, 0, subTxtCurrentIndex.current);\r\n      display(spanMainTitleRef.current, 0, subTxtCurrentIndex.current);\r\n    }\r\n  }, [textAppearStart]);\r\n\r\n  useEffect(() => {\r\n    // console.log(spanSubTitleRef.current[3]);\r\n    // console.log(spanSubTitleRef.current.length);\r\n    if (mainTxtShown.current === true && spanSubTitleRef.current.length > 0) {\r\n      // console.log(\"useEffect spanSubTitleRef\");\r\n      // callDisplay(spanSubTitleRef.current, 0, subTxtCurrentIndex.current);\r\n      display(spanSubTitleRef.current, 0, subTxtCurrentIndex.current);\r\n    }\r\n  }, [spanSubChange]);\r\n\r\n  // const subTitleAddRef = useCallback(\r\n  const subTitleAddRef = (el) => {\r\n    if (el && el !== null && !spanSubTitleRef.current.includes(el)) {\r\n      // console.log(\"subTitleAddRef Fn\");\r\n      spanSubTitleRef.current.push(el);\r\n      // console.log(\"sub span pushed!\");\r\n    }\r\n  };\r\n\r\n  const mainTitleAddRef = useCallback(\r\n    (el) => {\r\n      if (el && el !== null && !spanMainTitleRef.current.includes(el)) {\r\n        spanMainTitleRef.current.push(el);\r\n      }\r\n    },\r\n    [spanMainTitleRef]\r\n  );\r\n\r\n  // spanTab - spanMainTitleRef or spanSubTitleRef\r\n  // iSubTab - subTxtCurrentIndex\r\n  const display = (spanTab, i, iSubTab) => {\r\n    if (subTxtRef.current.classList.contains(\"fadeOutFast\")) {\r\n      subTxtRef.current.classList.remove(\"fadeOutFast\");\r\n    }\r\n    if (subTxtRef.current.classList.contains(\"fadeOut\")) {\r\n      subTxtRef.current.classList.remove(\"fadeOut\");\r\n    }\r\n    if (mainTxtRef.current.classList.contains(\"fadeOut\")) {\r\n      mainTxtRef.current.classList.remove(\"fadeOut\");\r\n    }\r\n\r\n    // if the mainTitle has not been displayed yet\r\n    if (mainTxtShown.current === false) {\r\n      //   const spansArray = [...this.state.spanMainTitleRefTab];\r\n      if (i < spanTab.length) {\r\n        displayOneSentence(spanTab, i, iSubTab, timeToDisplayText1);\r\n      } else {\r\n        // set current index of the span array to 0\r\n        i = 0;\r\n        mainTxtShown.current = true;\r\n        setTimeout(async () => {\r\n          // console.log(\"call spanSub first\");\r\n\r\n          await setCurrentSubTitle(\r\n            subTitles[subTxtCurrentIndex.current],\r\n            currentSubTitle\r\n          );\r\n          // });\r\n        }, pauseBetweenNewSentenceAppear);\r\n      }\r\n    }\r\n    // if the mainTitle has already been displayed\r\n    else {\r\n      // if index of the particular sentence from subTitle array has not reached its last element\r\n      if (i < spanTab.length) {\r\n        // console.log(\"call spanSub next\");\r\n        displayOneSentence(spanTab, i, iSubTab, timeToDisplayText2);\r\n      }\r\n      // if index of the particular sentence from subTitle array has reached its last element (letter)\r\n      else {\r\n        subTxtCurrentIndex.current++;\r\n        // here we have to clear spanSubTitleRef.current since another spans with another letter will have to be stored in this reference\r\n        spanSubTitleRef.current = [];\r\n\r\n        // if index of the subTitles array HAS NOT reached its last element (sentence) = if index of the subTitles array is less or equal to its last element (sentence)\r\n        if (subTxtCurrentIndex.current < subTitles.length) {\r\n          setTimeout(() => {\r\n            // console.log(subTxtRef.current);\r\n            subTxtRef.current.classList.add(\"fadeOutFast\");\r\n            setTimeout(async () => {\r\n              spanTab.forEach((span) => {\r\n                $(span).css(\"visibility\", \"hidden\");\r\n              });\r\n              await setCurrentSubTitle(\r\n                subTitles[subTxtCurrentIndex.current],\r\n                currentSubTitle\r\n              );\r\n            }, pauseBetweenNewSentenceAppear / 2);\r\n          }, pauseBeforeOneSubTitleSentenceFadeOut);\r\n        }\r\n\r\n        // if index of the subTitles array HAS REACHED its last element (sentence) - so what to do next\r\n        else {\r\n          // console.log(subTxtRef.current);\r\n          setTimeout(() => {\r\n            mainTxtRef.current.classList.add(\"fadeOut\");\r\n            subTxtRef.current.classList.add(\"fadeOut\");\r\n            subTxtCurrentIndex.current = 0;\r\n            mainTxtShown.current = false;\r\n\r\n            setTimeout(() => {\r\n              spanTab.forEach((span) => {\r\n                $(span).css(\"visibility\", \"hidden\");\r\n              });\r\n              spanMainTitleRef.current.forEach((span) => {\r\n                $(span).css(\"visibility\", \"hidden\");\r\n              });\r\n\r\n              setTimeout(() => {\r\n                display(\r\n                  spanMainTitleRef.current,\r\n                  0,\r\n                  subTxtCurrentIndex.current\r\n                );\r\n              }, pauseBetweenNewSentenceAppear);\r\n            }, pauseBetweenNewSentenceAppear);\r\n          }, pauseAfterAllTextsDisplayed);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  //\r\n  // const displayOneSentence = (spanTab, i, titleRefTab, iSubTab, time) => {\r\n  const displayOneSentence = (spanTab, i, iSubTab, time) => {\r\n    setTimeout(() => {\r\n      $(spanTab[i]).css(\"visibility\", \"visible\");\r\n      i++;\r\n      display(spanTab, i, iSubTab);\r\n    }, time);\r\n  };\r\n\r\n  // mainTitle divided into each letter embraced around span\r\n  const mainTitleSpans = useMemo(() => {\r\n    return [...mainTitle].map((letter, ind) => {\r\n      // console.log(\"mainTitleSpan\");\r\n      return (\r\n        <span\r\n          style={\r\n            mainTxtShown.current === false\r\n              ? { visibility: \"hidden\" }\r\n              : { visibility: \"visible\" }\r\n          }\r\n          key={ind}\r\n          ref={mainTitleAddRef}\r\n        >\r\n          {letter}\r\n        </span>\r\n      );\r\n    });\r\n  }, [mainTitle]);\r\n\r\n  // currentSubTitle divided into each letter embraced around span\r\n  const subTitleSpans = useMemo(() => {\r\n    if (currentSubTitle.length > 0) {\r\n      const subTitleArray = [...currentSubTitle].map((letter, ind) => {\r\n        // console.log(\"subTitleSpans\");\r\n\r\n        return (\r\n          <span style={{ visibility: \"hidden\" }} key={ind} ref={subTitleAddRef}>\r\n            {letter}\r\n          </span>\r\n        );\r\n      });\r\n\r\n      // ta poniższa linia uruchamia ciąg wyświetlania subTitles\r\n      // setSpanSubChange let spanSubTitleRef.current to be filled out only after currentSubTitle and consequently  subTitleSpans have changed, not earlier\r\n      setSpanSubChange(!spanSubChange);\r\n      // console.log(\"setSpanSubChange after\");\r\n      return subTitleArray;\r\n    } else {\r\n      return null;\r\n    }\r\n  }, [currentSubTitle]);\r\n\r\n  return (\r\n    <div className=\"row justify-content-left cont-about-me about-me align-left\">\r\n      <div\r\n        className=\"text1 row-text1 col-sm-10 mb-4 h1 animated \"\r\n        ref={mainTxtRef}\r\n      >\r\n        {mainTitleSpans}\r\n      </div>\r\n      <div\r\n        className=\"text2 row-text2 col-sm-10 mb-4 h2 animated \"\r\n        ref={subTxtRef}\r\n      >\r\n        {subTitleSpans}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WriteText;\r\n","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useAppear.js",["333","334"],"import { useState } from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nfunction useAppear(\r\n  animShow1,\r\n  animShow2,\r\n  animShow3,\r\n  animShow4,\r\n  animHide1,\r\n  animHide2,\r\n  animHide3,\r\n  animHide4\r\n) {\r\n  const [divJustAppeared, setDivJustAppeared] = useState();\r\n  // resolve must be inside setTimeout function otherwise the result will be executed immediately after invoking the Promise\r\n  // showDivsAnimation(divsToShowInOneRow[rowInd], rowLength, rowInd, appearTime);\r\n  const showDivsAnimation = (oneDiv, rowLength, rowIndex, time) => {\r\n    // console.log(\"showDivsAnimation\");\r\n\r\n    return new Promise((resolve, reject) => {\r\n      if (reject.length > 1) reject(new Error(\"Error\"));\r\n      else {\r\n        if (rowIndex >= 4) {\r\n          const maxIndexLength =\r\n            animShow4.length * Math.floor(rowIndex / animShow4.length);\r\n          // console.log(maxIndexLength);\r\n          rowIndex = rowIndex - maxIndexLength;\r\n        }\r\n        if (rowLength > 4) {\r\n          rowLength = 4;\r\n        }\r\n        const arrShowName = eval(\"animShow\" + rowLength);\r\n        // const arrHideName = eval(\"animHide\" + rowLength);\r\n        setTimeout(() => {\r\n          // resolve(function () {\r\n          if ($(oneDiv).hasClass(animHide1[0])) {\r\n            $(oneDiv).removeClass(animHide1[0]);\r\n            // console.log(\"remove fadeOutDown\");\r\n          } else {\r\n            $(oneDiv).removeClass(function (index, css) {\r\n              // console.log(css);\r\n              return (css.match(/(^|\\s)fade\\S+/g) || []).join(\" \");\r\n            });\r\n          }\r\n          $(oneDiv).addClass(arrShowName[rowIndex]);\r\n          setDivJustAppeared(oneDiv);\r\n\r\n          setTimeout(() => {\r\n            if ($(oneDiv).hasClass(animShow1[0])) {\r\n              $(oneDiv).removeClass(animShow1[0]);\r\n            } else {\r\n              // $(oneDiv).removeClass(state.arrHideName[rowIndex]);\r\n              $(oneDiv).removeClass(function (index, css) {\r\n                // console.log(css);\r\n                return (css.match(/(^|\\s)fade\\S+/g) || []).join(\" \");\r\n              });\r\n            }\r\n          }, 1300);\r\n\r\n          // console.log(countDiv.prop(\"classList\"));\r\n          // a może by tu dodać jakąś zmienną typu useState, która będzie wskazywać na to, że animacja appearing została wykonana dla danego diva i tą zmienną zwrócić z tej funkcji?\r\n          // if (\r\n          //   $(oneDiv).find(\".counting\").length > 0 &&\r\n          //   !oneDiv.classList.contains(\"countStarted\")\r\n          // ) {\r\n          //   // console.log(\"COUNTING OBJECT\");\r\n          //   const index = skillsRef.current.indexOf(oneDiv);\r\n\r\n          //   startCountFlag(oneDiv, index);\r\n          // }\r\n          resolve(arrShowName);\r\n        }, time);\r\n      }\r\n    });\r\n  };\r\n\r\n  const hideDivsAnimation = (oneDiv, rowLength, rowIndex, time) => {\r\n    console.log(\"hideDivsAnimation\");\r\n    return new Promise((resolve, reject) => {\r\n      if (reject.length > 1) reject(new Error(\"Error\"));\r\n      else {\r\n        if (rowIndex >= 4) {\r\n          const maxIndexLength =\r\n            animShow4.length * Math.floor(rowIndex / animShow4.length);\r\n          rowIndex = rowIndex - maxIndexLength;\r\n        }\r\n        if (rowLength > 4) {\r\n          rowLength = 4;\r\n        }\r\n        // const arrShowName = eval(\"animShow\" + rowLength);\r\n        const arrHideName = eval(\"animHide\" + rowLength);\r\n        setTimeout(() => {\r\n          // if ($(oneDiv).hasClass(animShow1[0])) {\r\n          // $(oneDiv).removeClass(animShow1[0]);\r\n          // } else {\r\n          // $(oneDiv).removeClass(state.arrHideName[rowIndex]);\r\n          //   $(oneDiv).removeClass(function (index, css) {\r\n          //     // console.log(css);\r\n          //     return (css.match(/(^|\\s)fade\\S+/g) || []).join(\" \");\r\n          //   });\r\n          // }\r\n          $(oneDiv).addClass(arrHideName[rowIndex]);\r\n        }, time / 3);\r\n        resolve(arrHideName);\r\n      }\r\n    });\r\n  };\r\n\r\n  // if (\r\n  // windowHeight >= getDivTop.elTop + getDivTop.elHeight &&\r\n  // $(serviceAppearRef[i]).hasClass(\"NotInView\")\r\n  // )\r\n  // usuwa klasę \"NotInView\" a dodaje \"inView\" dla elementów znajdujących się w jednym rzędzie\r\n  const showDiv = (\r\n    divsToAppear,\r\n    indexInAllAppearDivs,\r\n    elem,\r\n    elemTopConst,\r\n    elemNext,\r\n    elemNextTopConst\r\n  ) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      // console.log(\"showDiv Fn\");\r\n      if (divsToAppear.length <= 0) reject(new Error(\"Error\"));\r\n      else {\r\n        // resolve(\r\n        // if the element's top value is the same as its neighbour top value and the neighbour / next element exist at all\r\n        if (elemTopConst === elemNextTopConst && elemNext != null) {\r\n          // console.log(\"remove NotInView 1\");\r\n          $(elem).removeClass(\"NotInView\");\r\n          $(elem).addClass(\"inView\");\r\n          // console.log(\"setStateAsync 1\");\r\n        }\r\n        // if the element's top value is different than its next neighbour\r\n        else if (\r\n          elemTopConst !== elemNextTopConst ||\r\n          elemNext === null ||\r\n          indexInAllAppearDivs === divsToAppear.length - 1\r\n        ) {\r\n          // console.log(\"remove NotInView 2\");\r\n          $(elem).removeClass(\"NotInView\");\r\n          $(elem).addClass(\"inView\");\r\n          // console.log(\"setStateAsync 2\");\r\n        }\r\n\r\n        resolve({\r\n          element: elem,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  // hiding elements\r\n  const hideDiv = (\r\n    divsToAppear,\r\n    indexInAllAppearDivs,\r\n    elem,\r\n    elemTopConst,\r\n    elemNext,\r\n    elemNextTopConst\r\n  ) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (divsToAppear.length <= 0) reject(new Error(\"Error\"));\r\n      else {\r\n        if (elemNextTopConst === elemTopConst && elemNext != null) {\r\n          $(elem).removeClass(\"inView\");\r\n          $(elem).addClass(\"NotInView\");\r\n          // console.log(\"setStateAsync 4\");\r\n        } else if (\r\n          elemNextTopConst !== elemTopConst ||\r\n          elemNext === null ||\r\n          indexInAllAppearDivs === divsToAppear.length - 1\r\n        ) {\r\n          $(elem).removeClass(\"inView\");\r\n          $(elem).addClass(\"NotInView\");\r\n          // console.log(\"setStateAsync 5\");\r\n        }\r\n        resolve({\r\n          element: elem,\r\n        });\r\n      }\r\n      // })()\r\n      // );\r\n    });\r\n  };\r\n\r\n  const getDivTopVal = (frontScroll, elem) => {\r\n    // console.log(\"getDivTopVal Fn\");\r\n    return new Promise((resolve, reject) => {\r\n      if (reject.length > 1)\r\n        reject(new Error(\"Error to get div appear top value\"));\r\n      else {\r\n        resolve({\r\n          elem: elem,\r\n          elTopConst: elem.offsetTop,\r\n          // elTop: elem.offsetTop - pageFrontScrollBar,\r\n          // elTop: elem.offsetTop - pageFrontScrollVar.current,\r\n          elTop: elem.offsetTop - frontScroll,\r\n          elHeight: elem.offsetHeight / 2,\r\n          elNext: elem.nextElementSibling,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleAppearing = async (\r\n    windowHeight,\r\n    pFrontScroll,\r\n    appearTime,\r\n    divsToAppear\r\n  ) => {\r\n    // const { current } = appearDivsRef;\r\n    let divsToShowInOneRow = [];\r\n    let divsToHideInOneRow = [];\r\n    try {\r\n      // console.log(\"try\");\r\n      let getDivTop,\r\n        elNextTopConst = null;\r\n      // showDivVar,\r\n      // hideDivVar;\r\n      for (let i = 0; i < divsToAppear.length; i++) {\r\n        // console.log(\"try loop\");\r\n        getDivTop = await getDivTopVal(pFrontScroll, divsToAppear[i]);\r\n        // console.log(getDivTop.elem);\r\n        // console.log(getDivTop.elHeight);\r\n        // console.log(getDivTop.elTop);\r\n        // console.log(current[i].classList);\r\n        // let elNextTopConst = null;\r\n        // console.log(\"getDivTop after\");\r\n        if (getDivTop.elNext !== null) {\r\n          elNextTopConst = getDivTop.elNext.offsetTop;\r\n        }\r\n        // if the element's top offset value plus its height are smaller than windowHeight and it hasn't got a \"NotInView\" class i.e. it hasn't appeared yet\r\n        if (\r\n          windowHeight >= getDivTop.elTop + getDivTop.elHeight &&\r\n          $(divsToAppear[i]).hasClass(\"NotInView\")\r\n        ) {\r\n          // console.log(\"has class NotInView\");\r\n          // tu gdzieś trzeba zrobić pętlę żeby uzyskać oneRowOfDivs.length\r\n          // the below function pushes to an array all divs that stay in one row that has to appear\r\n          const showDivVar = await showDiv(\r\n            divsToAppear,\r\n            i,\r\n            getDivTop.elem,\r\n            getDivTop.elTopConst,\r\n            getDivTop.elNext,\r\n            elNextTopConst\r\n          );\r\n          // console.log(\"showDivVar after\");\r\n          divsToShowInOneRow.push(showDivVar.element);\r\n          // console.log(getDivTop.elem);\r\n          // console.log(showDiv.oneRowOfDivs);\r\n        } else if (\r\n          windowHeight < getDivTop.elTop + getDivTop.elHeight &&\r\n          $(divsToAppear[i]).hasClass(\"inView\")\r\n        ) {\r\n          // console.log(\"has class inView\");\r\n          const hideDivVar = await hideDiv(\r\n            divsToAppear,\r\n            i,\r\n            divsToAppear[i],\r\n            getDivTop.elTopConst,\r\n            getDivTop.elNext,\r\n            elNextTopConst\r\n          );\r\n          divsToHideInOneRow.push(hideDivVar.element);\r\n        }\r\n      }\r\n      // po skończeniu loopowania wszystkich divów pokazujemy lub ukrywamy wybrane divy po kolei\r\n      // if (divsToShowWithClassInView.length > 0) {\r\n      if (divsToShowInOneRow.length > 0) {\r\n        // console.log(showDiv.oneRowOfDivs);\r\n        let rowInd = 0;\r\n        // let rowLength = divsToShowWithClassInView.length;\r\n        let rowLength = divsToShowInOneRow.length;\r\n        // console.log(\"call showDivsAnimation before\");\r\n        // console.log(rowLength);\r\n        // await callShowDivsAnimation(divsToShowInOneRow, appearTime);\r\n        // console.log(\"call showDivsAnimation after\");\r\n        while (rowInd < rowLength) {\r\n          await showDivsAnimation(\r\n            // divsToShowWithClassInView[rowInd],\r\n            divsToShowInOneRow[rowInd],\r\n            rowLength,\r\n            rowInd,\r\n            appearTime\r\n          );\r\n          // console.log(rowInd);\r\n          rowInd++;\r\n        }\r\n      }\r\n      if (divsToHideInOneRow.length > 0) {\r\n        let rowInd = 0;\r\n        // let rowLength = divsToHideWithClassNotInView.length;\r\n        let rowLength = divsToHideInOneRow.length;\r\n        // console.log(rowLength);\r\n        // console.log(\"call hideDivsAnimation\");\r\n        // console.log(rowLength);\r\n        while (rowInd < rowLength) {\r\n          await hideDivsAnimation(\r\n            // divsToHideWithClassNotInView[rowInd],\r\n            divsToHideInOneRow[rowInd],\r\n            rowLength,\r\n            rowInd,\r\n            appearTime\r\n          );\r\n          // console.log(rowInd);\r\n          rowInd++;\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return { handleAppearing, divJustAppeared };\r\n}\r\n\r\nexport default useAppear;\r\n","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useParallaxBgrImage.js",["335"],"import React from \"react\";\r\n\r\nconst speedToMoveBgrImg = 2.5,\r\n  hem = 1;\r\n\r\nfunction useParallaxBgrImage(windowHeight) {\r\n  // function launched at the very beginning and after resize\r\n  const setSizeParallaxBackgroundImage = (\r\n    divsWithMovingBgrImage,\r\n    scrollValue\r\n  ) => {\r\n    for (let i = 0; i < divsWithMovingBgrImage.length; i++) {\r\n      const elem = divsWithMovingBgrImage[i];\r\n      const elemHeight = elem.offsetHeight;\r\n      const elemWidth = elem.offsetWidth;\r\n\r\n      // ustalenie nowego rozmiaru imgbackgroundu\r\n      const img = new Image();\r\n      const styleImg = getComputedStyle(elem);\r\n      const imgUrl = styleImg.backgroundImage;\r\n      img.src = styleImg.backgroundImage.slice(\r\n        imgUrl.lastIndexOf(\"(\") + 2,\r\n        imgUrl.lastIndexOf(\")\") - 1\r\n      );\r\n      const imgW = img.width,\r\n        imgH = img.height;\r\n      const proportion = imgW / imgH;\r\n      let elemNewWidth, elemNewHeight;\r\n\r\n      if (elemHeight <= windowHeight) {\r\n        if (elemHeight <= elemWidth) {\r\n          elemNewWidth = (elemWidth + windowHeight / speedToMoveBgrImg) * hem;\r\n          elemNewHeight = elemNewWidth / proportion;\r\n          if (elemNewHeight < elemHeight + windowHeight / speedToMoveBgrImg) {\r\n            elemNewHeight =\r\n              (elemHeight + windowHeight / speedToMoveBgrImg) * hem;\r\n          }\r\n        } else if (elemHeight > elemWidth) {\r\n          elemNewHeight = (elemHeight + windowHeight / speedToMoveBgrImg) * hem;\r\n        }\r\n      } else if (elemHeight > windowHeight) {\r\n        if (elemHeight <= elemWidth) {\r\n          elemNewWidth = (elemWidth + elemHeight / speedToMoveBgrImg) * hem;\r\n          elemNewHeight = elemNewWidth / proportion;\r\n          if (elemNewHeight < elemHeight + elemHeight / speedToMoveBgrImg) {\r\n            elemNewHeight = (elemHeight + elemHeight / speedToMoveBgrImg) * hem;\r\n          }\r\n        } else if (elemHeight > elemWidth) {\r\n          elemNewHeight = (elemHeight + elemHeight / speedToMoveBgrImg) * hem;\r\n        }\r\n      }\r\n\r\n      elem.style.backgroundSize = \"auto \" + elemNewHeight + \"px\";\r\n\r\n      // wScr = $(\"#pagefront\").scrollTop(); // wartośc bez 'px'\r\n      const elemOffTop = elem.offsetTop;\r\n      const elTopValue = elemOffTop - scrollValue;\r\n      elem.style.backgroundPositionY = -(elTopValue / speedToMoveBgrImg) + \"px\";\r\n\r\n      // eOff = e.offsetTop;\r\n      // eT = eOff - pageFrontScrollVar.current;\r\n    }\r\n  };\r\n\r\n  const handleParallaxBgrImg = (divsWithMovingBgrImage, scrollValue) => {\r\n    // vH=window.innerHeight;\r\n    // wScr = $(\"#pagefront\").scrollTop(); // wartośc bez 'px'\r\n\r\n    for (let i = 0; i < divsWithMovingBgrImage.length; i++) {\r\n      const elem = divsWithMovingBgrImage[i];\r\n      // const elemOffTop = elem.offsetTop;\r\n      const elTopValue = elem.offsetTop - scrollValue;\r\n      if (elTopValue <= windowHeight) {\r\n        elem.style.backgroundPositionY =\r\n          -(elTopValue / speedToMoveBgrImg) + \"px\";\r\n      }\r\n      // eOff = e.offsetTop;\r\n      // eT = eOff - wScr;\r\n    }\r\n  };\r\n\r\n  return { handleParallaxBgrImg, setSizeParallaxBackgroundImage };\r\n}\r\n\r\nexport default useParallaxBgrImage;\r\n","C:\\CODING\\React\\codencr\\src\\componentsHook\\Projects.jsx",["336"],"import React, { useMemo, useRef, useCallback, useEffect } from \"react\";\r\nimport clockWall from \"../img/projects/clock.jpg\";\r\nimport contact from \"../img/projects/contact.jpg\";\r\nimport counterApp from \"../img/projects/counter-app.jpg\";\r\nimport cssVariables from \"../img/projects/css-var.jpg\";\r\nimport exchange from \"../img/projects/exchange.jpg\";\r\nimport todoList from \"../img/projects/todoList.jpg\";\r\n\r\n// const projectsName = [\r\n//   \"Online shop - front-end side\",\r\n//   \"Change css variables with inputs\",\r\n//   \"Wall-clock animation\",\r\n//   \"Todo-list with axios\",\r\n//   \"Exchange currency\",\r\n//   \"Contact Form Page\",\r\n// ];\r\n\r\nconst projectsPhotos = [\r\n  [todoList, \"Todo-list with axios\", \"https://kodencja.github.io/react-todo/\"],\r\n  [\r\n    cssVariables,\r\n    \"Change css variables with inputs\",\r\n    \"https://kodencja.github.io/css-variables/\",\r\n  ],\r\n  [clockWall, \"Wall-clock animation\", \"https://kodencja.github.io/wall-clock/\"],\r\n  [\r\n    counterApp,\r\n    \"Let's buy some products - frontend side\",\r\n    \"https://kodencja.github.io/counter-app/\",\r\n  ],\r\n  [\r\n    exchange,\r\n    \"Currency exchange rate with validation - plus backend\",\r\n    \"https://exchange-codenc.herokuapp.com/\",\r\n  ],\r\n  [\r\n    contact,\r\n    \"Contact Form Page with validation - plus backend\",\r\n    \"https://contactcodenc.herokuapp.com/\",\r\n  ],\r\n];\r\n\r\nconst Projects = React.forwardRef((props, ref) => {\r\n  const projectsRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    const projCurrent = projectsRef.current;\r\n    projCurrent.forEach((project) => {\r\n      project.addEventListener(\"mousemove\", (e) => {\r\n        projectTransform(project, e);\r\n      });\r\n      project.addEventListener(\"mouseleave\", () => {\r\n        projectStartTransform(project);\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      projCurrent.forEach((project) => {\r\n        project.removeEventListener(\"mousemove\", (e) => {\r\n          projectTransform(project, e);\r\n        });\r\n        project.removeEventListener(\"mouseleave\", () => {\r\n          projectStartTransform(project);\r\n        });\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  const projectTransform = (project, e) => {\r\n    const deg = 30;\r\n    const stepX = deg / project.clientWidth;\r\n    const stepY = deg / project.clientHeight;\r\n    let rotateX = 0.5 * deg - e.layerY * stepY;\r\n    let rotateY = -0.5 * deg + e.layerX * stepX;\r\n    project.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(1.05)`;\r\n  };\r\n\r\n  const projectStartTransform = (project) => {\r\n    project.style.transform = `perspective(1000px) rotateX(0deg) rotateY(0deg) scale(1)`;\r\n  };\r\n\r\n  const addToProjectRef = useCallback(\r\n    (el) => {\r\n      if (el && !projectsRef.current.includes(el)) {\r\n        console.log(\"addToProjectRef Fn\");\r\n        projectsRef.current.push(el);\r\n      }\r\n    },\r\n    [projectsRef]\r\n  );\r\n\r\n  //   const animateProjects = () => {\r\n  //     projectsRef.current.forEach((project) => {\r\n  //       const deg = 30;\r\n  //       const stepX = deg / project.clientWidth;\r\n  //       const stepY = deg / project.clientHeight;\r\n  //       project.addEventListener(\"mousemove\", (e) => {\r\n  //         let rotateX = 0.5 * deg - e.layerY * stepY;\r\n  //         let rotateY = -0.5 * deg + e.layerX * stepX;\r\n  //         project.style.transform = `perspective(800px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(1.05)`;\r\n  //       });\r\n  //       project.addEventListener(\"mouseleave\", () => {\r\n  //         project.style.transform = `perspective(800px) rotateX(0deg) rotateY(0deg) scale(1)`;\r\n  //       });\r\n  //     });\r\n  //   };\r\n\r\n  const projects = useMemo(() => {\r\n    return projectsPhotos.map((project, ind) => {\r\n      return (\r\n        <div\r\n          key={ind}\r\n          className=\"project\"\r\n          ref={addToProjectRef}\r\n          style={{ backgroundImage: \"url(\" + project[0] + \")\" }}\r\n        >\r\n          <a\r\n            href={project[2]}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            className=\"project-link\"\r\n          >\r\n            <div className=\"project-description\">{project[1]}</div>\r\n          </a>\r\n        </div>\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"projects section text-center\" ref={ref}>\r\n      <header className=\"title sec-title\">MY PROJECTS</header>\r\n      <div className=\"container py-4\">\r\n        <div className=\"row mx-auto projects-row px-3\">{projects}</div>\r\n      </div>\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default Projects;\r\n",{"ruleId":"337","severity":1,"message":"338","line":4,"column":8,"nodeType":"339","messageId":"340","endLine":4,"endColumn":9},{"ruleId":"337","severity":1,"message":"341","line":5,"column":8,"nodeType":"339","messageId":"340","endLine":5,"endColumn":14},{"ruleId":"337","severity":1,"message":"342","line":12,"column":8,"nodeType":"339","messageId":"340","endLine":12,"endColumn":13},{"ruleId":"343","replacedBy":"344"},{"ruleId":"345","replacedBy":"346"},{"ruleId":"337","severity":1,"message":"347","line":2,"column":10,"nodeType":"339","messageId":"340","endLine":2,"endColumn":14},{"ruleId":"337","severity":1,"message":"348","line":6,"column":8,"nodeType":"339","messageId":"340","endLine":6,"endColumn":28},{"ruleId":"337","severity":1,"message":"349","line":8,"column":8,"nodeType":"339","messageId":"340","endLine":8,"endColumn":18},{"ruleId":"337","severity":1,"message":"350","line":9,"column":8,"nodeType":"339","messageId":"340","endLine":9,"endColumn":16},{"ruleId":"337","severity":1,"message":"351","line":148,"column":9,"nodeType":"339","messageId":"340","endLine":148,"endColumn":10},{"ruleId":"337","severity":1,"message":"352","line":273,"column":9,"nodeType":"339","messageId":"340","endLine":273,"endColumn":10},{"ruleId":"337","severity":1,"message":"353","line":290,"column":13,"nodeType":"339","messageId":"340","endLine":290,"endColumn":21},{"ruleId":"337","severity":1,"message":"338","line":2,"column":8,"nodeType":"339","messageId":"340","endLine":2,"endColumn":9},{"ruleId":"343","replacedBy":"354"},{"ruleId":"345","replacedBy":"355"},{"ruleId":"337","severity":1,"message":"338","line":2,"column":8,"nodeType":"339","messageId":"340","endLine":2,"endColumn":9},{"ruleId":"337","severity":1,"message":"356","line":17,"column":10,"nodeType":"339","messageId":"340","endLine":17,"endColumn":30},{"ruleId":"357","severity":1,"message":"358","line":73,"column":1,"nodeType":"359","messageId":"360","endLine":83,"endColumn":2},{"ruleId":"337","severity":1,"message":"338","line":2,"column":8,"nodeType":"339","messageId":"340","endLine":2,"endColumn":9},{"ruleId":"337","severity":1,"message":"361","line":252,"column":11,"nodeType":"339","messageId":"340","endLine":252,"endColumn":27},{"ruleId":"357","severity":1,"message":"358","line":311,"column":1,"nodeType":"359","messageId":"360","endLine":318,"endColumn":2},{"ruleId":"357","severity":1,"message":"358","line":319,"column":1,"nodeType":"359","messageId":"360","endLine":321,"endColumn":2},{"ruleId":"357","severity":1,"message":"358","line":322,"column":1,"nodeType":"359","messageId":"360","endLine":333,"endColumn":2},{"ruleId":"337","severity":1,"message":"362","line":48,"column":9,"nodeType":"339","messageId":"340","endLine":48,"endColumn":14},{"ruleId":"337","severity":1,"message":"363","line":114,"column":7,"nodeType":"339","messageId":"340","endLine":114,"endColumn":24},{"ruleId":"337","severity":1,"message":"364","line":123,"column":7,"nodeType":"339","messageId":"340","endLine":123,"endColumn":16},{"ruleId":"337","severity":1,"message":"365","line":124,"column":7,"nodeType":"339","messageId":"340","endLine":124,"endColumn":16},{"ruleId":"337","severity":1,"message":"366","line":125,"column":7,"nodeType":"339","messageId":"340","endLine":125,"endColumn":26},{"ruleId":"337","severity":1,"message":"367","line":249,"column":7,"nodeType":"339","messageId":"340","endLine":249,"endColumn":23},{"ruleId":"337","severity":1,"message":"362","line":55,"column":9,"nodeType":"339","messageId":"340","endLine":55,"endColumn":14},{"ruleId":"337","severity":1,"message":"367","line":251,"column":7,"nodeType":"339","messageId":"340","endLine":251,"endColumn":23},{"ruleId":"337","severity":1,"message":"368","line":1,"column":17,"nodeType":"339","messageId":"340","endLine":1,"endColumn":25},{"ruleId":"337","severity":1,"message":"369","line":1,"column":46,"nodeType":"339","messageId":"340","endLine":1,"endColumn":53},{"ruleId":"337","severity":1,"message":"338","line":2,"column":8,"nodeType":"339","messageId":"340","endLine":2,"endColumn":9},{"ruleId":"337","severity":1,"message":"348","line":6,"column":8,"nodeType":"339","messageId":"340","endLine":6,"endColumn":28},{"ruleId":"337","severity":1,"message":"370","line":7,"column":8,"nodeType":"339","messageId":"340","endLine":7,"endColumn":17},{"ruleId":"337","severity":1,"message":"349","line":8,"column":8,"nodeType":"339","messageId":"340","endLine":8,"endColumn":18},{"ruleId":"337","severity":1,"message":"350","line":9,"column":8,"nodeType":"339","messageId":"340","endLine":9,"endColumn":16},{"ruleId":"337","severity":1,"message":"371","line":14,"column":8,"nodeType":"339","messageId":"340","endLine":14,"endColumn":18},{"ruleId":"337","severity":1,"message":"372","line":205,"column":13,"nodeType":"339","messageId":"340","endLine":205,"endColumn":29},{"ruleId":"337","severity":1,"message":"373","line":271,"column":7,"nodeType":"339","messageId":"340","endLine":271,"endColumn":16},{"ruleId":"337","severity":1,"message":"374","line":272,"column":7,"nodeType":"339","messageId":"340","endLine":272,"endColumn":16},{"ruleId":"337","severity":1,"message":"375","line":273,"column":7,"nodeType":"339","messageId":"340","endLine":273,"endColumn":16},{"ruleId":"337","severity":1,"message":"376","line":276,"column":7,"nodeType":"339","messageId":"340","endLine":276,"endColumn":16},{"ruleId":"337","severity":1,"message":"377","line":277,"column":7,"nodeType":"339","messageId":"340","endLine":277,"endColumn":16},{"ruleId":"337","severity":1,"message":"378","line":278,"column":7,"nodeType":"339","messageId":"340","endLine":278,"endColumn":16},{"ruleId":"379","severity":1,"message":"380","line":295,"column":26,"nodeType":"381","messageId":"382","endLine":295,"endColumn":30},{"ruleId":"379","severity":1,"message":"380","line":296,"column":26,"nodeType":"381","messageId":"382","endLine":296,"endColumn":30},{"ruleId":"337","severity":1,"message":"374","line":390,"column":7,"nodeType":"339","messageId":"340","endLine":390,"endColumn":16},{"ruleId":"337","severity":1,"message":"375","line":391,"column":7,"nodeType":"339","messageId":"340","endLine":391,"endColumn":16},{"ruleId":"337","severity":1,"message":"383","line":393,"column":7,"nodeType":"339","messageId":"340","endLine":393,"endColumn":16},{"ruleId":"337","severity":1,"message":"376","line":394,"column":7,"nodeType":"339","messageId":"340","endLine":394,"endColumn":16},{"ruleId":"337","severity":1,"message":"377","line":395,"column":7,"nodeType":"339","messageId":"340","endLine":395,"endColumn":16},{"ruleId":"337","severity":1,"message":"378","line":396,"column":7,"nodeType":"339","messageId":"340","endLine":396,"endColumn":16},{"ruleId":"379","severity":1,"message":"380","line":411,"column":26,"nodeType":"381","messageId":"382","endLine":411,"endColumn":30},{"ruleId":"379","severity":1,"message":"380","line":412,"column":26,"nodeType":"381","messageId":"382","endLine":412,"endColumn":30},{"ruleId":"337","severity":1,"message":"372","line":621,"column":7,"nodeType":"339","messageId":"340","endLine":621,"endColumn":23},{"ruleId":"337","severity":1,"message":"384","line":624,"column":7,"nodeType":"339","messageId":"340","endLine":624,"endColumn":32},{"ruleId":"337","severity":1,"message":"385","line":625,"column":7,"nodeType":"339","messageId":"340","endLine":625,"endColumn":35},{"ruleId":"337","severity":1,"message":"386","line":666,"column":11,"nodeType":"339","messageId":"340","endLine":666,"endColumn":18},{"ruleId":"337","severity":1,"message":"387","line":680,"column":11,"nodeType":"339","messageId":"340","endLine":680,"endColumn":18},{"ruleId":"337","severity":1,"message":"388","line":5,"column":3,"nodeType":"339","messageId":"340","endLine":5,"endColumn":14},{"ruleId":"337","severity":1,"message":"389","line":59,"column":30,"nodeType":"339","messageId":"340","endLine":59,"endColumn":51},{"ruleId":"337","severity":1,"message":"390","line":77,"column":9,"nodeType":"339","messageId":"340","endLine":77,"endColumn":18},{"ruleId":"337","severity":1,"message":"369","line":4,"column":3,"nodeType":"339","messageId":"340","endLine":4,"endColumn":10},{"ruleId":"337","severity":1,"message":"391","line":27,"column":9,"nodeType":"339","messageId":"340","endLine":27,"endColumn":18},{"ruleId":"337","severity":1,"message":"392","line":43,"column":10,"nodeType":"339","messageId":"340","endLine":43,"endColumn":18},{"ruleId":"337","severity":1,"message":"393","line":43,"column":20,"nodeType":"339","messageId":"340","endLine":43,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":98,"column":6,"nodeType":"396","endLine":98,"endColumn":8,"suggestions":"397"},{"ruleId":"394","severity":1,"message":"398","line":204,"column":6,"nodeType":"396","endLine":204,"endColumn":20,"suggestions":"399"},{"ruleId":"337","severity":1,"message":"368","line":1,"column":17,"nodeType":"339","messageId":"340","endLine":1,"endColumn":25},{"ruleId":"337","severity":1,"message":"369","line":6,"column":3,"nodeType":"339","messageId":"340","endLine":6,"endColumn":10},{"ruleId":"337","severity":1,"message":"400","line":9,"column":13,"nodeType":"339","messageId":"340","endLine":9,"endColumn":18},{"ruleId":"337","severity":1,"message":"401","line":17,"column":8,"nodeType":"339","messageId":"340","endLine":17,"endColumn":15},{"ruleId":"337","severity":1,"message":"402","line":24,"column":8,"nodeType":"339","messageId":"340","endLine":24,"endColumn":13},{"ruleId":"337","severity":1,"message":"403","line":42,"column":3,"nodeType":"339","messageId":"340","endLine":42,"endColumn":20},{"ruleId":"337","severity":1,"message":"404","line":43,"column":3,"nodeType":"339","messageId":"340","endLine":43,"endColumn":6},{"ruleId":"394","severity":1,"message":"405","line":137,"column":6,"nodeType":"396","endLine":137,"endColumn":23,"suggestions":"406"},{"ruleId":"394","severity":1,"message":"407","line":244,"column":6,"nodeType":"396","endLine":244,"endColumn":8,"suggestions":"408"},{"ruleId":"394","severity":1,"message":"409","line":257,"column":6,"nodeType":"396","endLine":257,"endColumn":19,"suggestions":"410"},{"ruleId":"394","severity":1,"message":"411","line":264,"column":6,"nodeType":"396","endLine":264,"endColumn":30,"suggestions":"412"},{"ruleId":"337","severity":1,"message":"413","line":502,"column":9,"nodeType":"339","messageId":"340","endLine":502,"endColumn":20},{"ruleId":"337","severity":1,"message":"388","line":5,"column":3,"nodeType":"339","messageId":"340","endLine":5,"endColumn":14},{"ruleId":"337","severity":1,"message":"390","line":87,"column":9,"nodeType":"339","messageId":"340","endLine":87,"endColumn":18},{"ruleId":"337","severity":1,"message":"347","line":2,"column":10,"nodeType":"339","messageId":"340","endLine":2,"endColumn":14},{"ruleId":"337","severity":1,"message":"414","line":52,"column":9,"nodeType":"339","messageId":"340","endLine":52,"endColumn":19},{"ruleId":"394","severity":1,"message":"415","line":96,"column":6,"nodeType":"396","endLine":96,"endColumn":22,"suggestions":"416"},{"ruleId":"394","severity":1,"message":"415","line":107,"column":6,"nodeType":"396","endLine":107,"endColumn":21,"suggestions":"417"},{"ruleId":"394","severity":1,"message":"418","line":320,"column":6,"nodeType":"396","endLine":320,"endColumn":17,"suggestions":"419"},{"ruleId":"394","severity":1,"message":"420","line":360,"column":6,"nodeType":"396","endLine":360,"endColumn":23,"suggestions":"421"},{"ruleId":"337","severity":1,"message":"368","line":1,"column":17,"nodeType":"339","messageId":"340","endLine":1,"endColumn":25},{"ruleId":"337","severity":1,"message":"369","line":1,"column":46,"nodeType":"339","messageId":"340","endLine":1,"endColumn":53},{"ruleId":"337","severity":1,"message":"338","line":2,"column":8,"nodeType":"339","messageId":"340","endLine":2,"endColumn":9},{"ruleId":"337","severity":1,"message":"422","line":28,"column":9,"nodeType":"339","messageId":"340","endLine":28,"endColumn":19},{"ruleId":"337","severity":1,"message":"356","line":17,"column":10,"nodeType":"339","messageId":"340","endLine":17,"endColumn":30},{"ruleId":"337","severity":1,"message":"423","line":19,"column":7,"nodeType":"339","messageId":"340","endLine":19,"endColumn":29},{"ruleId":"337","severity":1,"message":"424","line":71,"column":7,"nodeType":"339","messageId":"340","endLine":71,"endColumn":19},{"ruleId":"337","severity":1,"message":"425","line":130,"column":24,"nodeType":"339","messageId":"340","endLine":130,"endColumn":37},{"ruleId":"337","severity":1,"message":"426","line":131,"column":12,"nodeType":"339","messageId":"340","endLine":131,"endColumn":15},{"ruleId":"337","severity":1,"message":"427","line":131,"column":17,"nodeType":"339","messageId":"340","endLine":131,"endColumn":23},{"ruleId":"394","severity":1,"message":"428","line":158,"column":8,"nodeType":"396","endLine":158,"endColumn":10,"suggestions":"429"},{"ruleId":"394","severity":1,"message":"430","line":169,"column":8,"nodeType":"396","endLine":169,"endColumn":10,"suggestions":"431"},{"ruleId":"394","severity":1,"message":"432","line":192,"column":8,"nodeType":"396","endLine":192,"endColumn":20,"suggestions":"433"},{"ruleId":"394","severity":1,"message":"434","line":212,"column":7,"nodeType":"396","endLine":212,"endColumn":18,"suggestions":"435"},{"ruleId":"394","severity":1,"message":"436","line":225,"column":8,"nodeType":"396","endLine":225,"endColumn":28,"suggestions":"437"},{"ruleId":"394","severity":1,"message":"438","line":274,"column":7,"nodeType":"396","endLine":274,"endColumn":18,"suggestions":"439"},{"ruleId":"337","severity":1,"message":"369","line":1,"column":51,"nodeType":"339","messageId":"340","endLine":1,"endColumn":58},{"ruleId":"337","severity":1,"message":"356","line":17,"column":10,"nodeType":"339","messageId":"340","endLine":17,"endColumn":30},{"ruleId":"337","severity":1,"message":"423","line":19,"column":7,"nodeType":"339","messageId":"340","endLine":19,"endColumn":29},{"ruleId":"337","severity":1,"message":"424","line":71,"column":7,"nodeType":"339","messageId":"340","endLine":71,"endColumn":19},{"ruleId":"337","severity":1,"message":"426","line":130,"column":10,"nodeType":"339","messageId":"340","endLine":130,"endColumn":13},{"ruleId":"337","severity":1,"message":"427","line":130,"column":15,"nodeType":"339","messageId":"340","endLine":130,"endColumn":21},{"ruleId":"394","severity":1,"message":"428","line":157,"column":6,"nodeType":"396","endLine":157,"endColumn":8,"suggestions":"440"},{"ruleId":"394","severity":1,"message":"430","line":168,"column":6,"nodeType":"396","endLine":168,"endColumn":8,"suggestions":"441"},{"ruleId":"394","severity":1,"message":"442","line":224,"column":6,"nodeType":"396","endLine":224,"endColumn":38,"suggestions":"443"},{"ruleId":"394","severity":1,"message":"444","line":267,"column":5,"nodeType":"396","endLine":267,"endColumn":28,"suggestions":"445"},{"ruleId":"394","severity":1,"message":"446","line":294,"column":5,"nodeType":"396","endLine":294,"endColumn":28,"suggestions":"447"},{"ruleId":"337","severity":1,"message":"388","line":1,"column":38,"nodeType":"339","messageId":"340","endLine":1,"endColumn":49},{"ruleId":"337","severity":1,"message":"369","line":1,"column":51,"nodeType":"339","messageId":"340","endLine":1,"endColumn":58},{"ruleId":"337","severity":1,"message":"356","line":17,"column":10,"nodeType":"339","messageId":"340","endLine":17,"endColumn":30},{"ruleId":"337","severity":1,"message":"423","line":19,"column":7,"nodeType":"339","messageId":"340","endLine":19,"endColumn":29},{"ruleId":"337","severity":1,"message":"424","line":71,"column":7,"nodeType":"339","messageId":"340","endLine":71,"endColumn":19},{"ruleId":"337","severity":1,"message":"426","line":133,"column":10,"nodeType":"339","messageId":"340","endLine":133,"endColumn":13},{"ruleId":"337","severity":1,"message":"427","line":133,"column":15,"nodeType":"339","messageId":"340","endLine":133,"endColumn":21},{"ruleId":"394","severity":1,"message":"428","line":161,"column":6,"nodeType":"396","endLine":161,"endColumn":8,"suggestions":"448"},{"ruleId":"394","severity":1,"message":"430","line":173,"column":6,"nodeType":"396","endLine":173,"endColumn":8,"suggestions":"449"},{"ruleId":"394","severity":1,"message":"450","line":263,"column":6,"nodeType":"396","endLine":263,"endColumn":34,"suggestions":"451"},{"ruleId":"337","severity":1,"message":"363","line":18,"column":7,"nodeType":"339","messageId":"340","endLine":18,"endColumn":24},{"ruleId":"337","severity":1,"message":"452","line":19,"column":7,"nodeType":"339","messageId":"340","endLine":19,"endColumn":24},{"ruleId":"337","severity":1,"message":"453","line":20,"column":7,"nodeType":"339","messageId":"340","endLine":20,"endColumn":13},{"ruleId":"337","severity":1,"message":"454","line":21,"column":7,"nodeType":"339","messageId":"340","endLine":21,"endColumn":13},{"ruleId":"337","severity":1,"message":"455","line":22,"column":7,"nodeType":"339","messageId":"340","endLine":22,"endColumn":13},{"ruleId":"394","severity":1,"message":"415","line":52,"column":6,"nodeType":"396","endLine":52,"endColumn":23,"suggestions":"456"},{"ruleId":"394","severity":1,"message":"415","line":62,"column":6,"nodeType":"396","endLine":62,"endColumn":21,"suggestions":"457"},{"ruleId":"394","severity":1,"message":"458","line":204,"column":6,"nodeType":"396","endLine":204,"endColumn":17,"suggestions":"459"},{"ruleId":"394","severity":1,"message":"420","line":227,"column":6,"nodeType":"396","endLine":227,"endColumn":23,"suggestions":"460"},{"ruleId":"379","severity":1,"message":"380","line":32,"column":29,"nodeType":"381","messageId":"382","endLine":32,"endColumn":33},{"ruleId":"379","severity":1,"message":"380","line":91,"column":29,"nodeType":"381","messageId":"382","endLine":91,"endColumn":33},{"ruleId":"337","severity":1,"message":"461","line":1,"column":8,"nodeType":"339","messageId":"340","endLine":1,"endColumn":13},{"ruleId":"394","severity":1,"message":"462","line":128,"column":6,"nodeType":"396","endLine":128,"endColumn":8,"suggestions":"463"},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","'AppCl' is defined but never used.","no-native-reassign",["464"],"no-negated-in-lhs",["465"],"'Link' is defined but never used.","'CarouselBtstrpSlider' is defined but never used.","'SectSlider' is defined but never used.","'AboutSec' is defined but never used.","'m' is assigned a value but never used.","'x' is assigned a value but never used.","'captions' is assigned a value but never used.",["464"],["465"],"'getAllByDisplayValue' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'carouselItemList' is assigned a value but never used.","'flagC' is assigned a value but never used.","'timeToDisplayTxt1' is assigned a value but never used.","'subTitles' is assigned a value but never used.","'mainTitle' is assigned a value but never used.","'spanMainTitleRefTab' is assigned a value but never used.","'currentMainTitle' is assigned a value but never used.","'useState' is defined but never used.","'useMemo' is defined but never used.","'Hamburger' is defined but never used.","'SkillsSect' is defined but never used.","'serviceAppearRef' is assigned a value but never used.","'animShow1' is assigned a value but never used.","'animShow2' is assigned a value but never used.","'animShow3' is assigned a value but never used.","'animHide2' is assigned a value but never used.","'animHide3' is assigned a value but never used.","'animHide4' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","'animHide1' is assigned a value but never used.","'divsToShowWithClassInView' is assigned a value but never used.","'divsToHideWithClassNotInView' is assigned a value but never used.","'showDiv' is assigned a value but never used.","'hideDiv' is assigned a value but never used.","'useCallback' is defined but never used.","'setTxtSkillsQuotation' is assigned a value but never used.","'numberRef' is assigned a value but never used.","'countText' is assigned a value but never used.","'counter2' is assigned a value but never used.","'setCounter2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callSetCircleBox' and 'circleBox'. Either include them or remove the dependency array.","ArrayExpression",["466"],"React Hook useCallback has a missing dependency: 'circleBoxes'. Either include it or remove the dependency array.",["467"],"'speed' is defined but never used.","'Article' is defined but never used.","'About' is defined but never used.","'speedToMoveBgrImg' is assigned a value but never used.","'hem' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'startCountFlag'. Either include it or remove the dependency array.",["468"],"React Hook useEffect has missing dependencies: 'handleResize', 'handleScroll', 'movePageFront', and 'scrollLink'. Either include them or remove the dependency array.",["469"],"React Hook useEffect has a missing dependency: 'ifStartCount'. Either include it or remove the dependency array.",["470"],"React Hook useEffect has a missing dependency: 'setSizeParallaxBackgroundImage'. Either include it or remove the dependency array.",["471"],"'sampleStyle' is assigned a value but never used.","'visibility' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'display'. Either include it or remove the dependency array.",["472"],["473"],"React Hook useMemo has a missing dependency: 'mainTitleAddRef'. Either include it or remove the dependency array. Outer scope values like 'mainTitle' aren't valid dependencies because mutating them doesn't re-render the component.",["474"],"React Hook useMemo has a missing dependency: 'spanSubChange'. Either include it or remove the dependency array. You can also do a functional update 'setSpanSubChange(s => ...)' if you only need 'spanSubChange' in the 'setSpanSubChange' call.",["475"],"'sectionRef' is assigned a value but never used.","'carouselItemIndicators' is assigned a value but never used.","'animShowArr1' is assigned a value but never used.","'setPhotoWidth' is assigned a value but never used.","'msg' is assigned a value but never used.","'setMsg' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'captionsRefer'. Either include it or remove the dependency array.",["476"],"React Hook useEffect has a missing dependency: 'secSliderRef'. Either include it or remove the dependency array.",["477"],"React Hook useCallback has missing dependencies: 'windHeight' and 'windWidth'. Either include them or remove the dependency array.",["478"],"React Hook useCallback has missing dependencies: 'btnNext', 'callSetPhotoWidth', 'setArrowMargins', and 'windHeight'. Either include them or remove the dependency array.",["479"],"React Hook useEffect has missing dependencies: 'asyncSetStateCall' and 'btnNext'. Either include them or remove the dependency array.",["480"],"React Hook useCallback has an unnecessary dependency: 'windWidth'. Either exclude it or remove the dependency array.",["481"],["482"],["483"],"React Hook useEffect has missing dependencies: 'btnNext' and 'keepArrowsInsideImg'. Either include them or remove the dependency array.",["484"],"React Hook useCallback has a missing dependency: 'setArrowMargins'. Either include it or remove the dependency array.",["485"],"React Hook useCallback has unnecessary dependencies: 'windHeight' and 'windWidth'. Either exclude them or remove the dependency array.",["486"],["487"],["488"],"React Hook useEffect has missing dependencies: 'btnNext', 'btnPrev', and 'keepArrowsInsideImg'. Either include them or remove the dependency array.",["489"],"'timeToDisplayTxt2' is assigned a value but never used.","'pause1' is assigned a value but never used.","'pause2' is assigned a value but never used.","'pause3' is assigned a value but never used.",["490"],["491"],"React Hook useMemo has a missing dependency: 'mainTitleAddRef'. Either include it or remove the dependency array.",["492"],["493"],"'React' is defined but never used.","React Hook useMemo has a missing dependency: 'addToProjectRef'. Either include it or remove the dependency array.",["494"],"no-global-assign","no-unsafe-negation",{"desc":"495","fix":"496"},{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},{"desc":"501","fix":"502"},{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},{"desc":"507","fix":"508"},{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"519","fix":"520"},{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},{"desc":"515","fix":"527"},{"desc":"517","fix":"528"},{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"525","fix":"533"},{"desc":"515","fix":"534"},{"desc":"517","fix":"535"},{"desc":"536","fix":"537"},{"desc":"538","fix":"539"},{"desc":"509","fix":"540"},{"desc":"541","fix":"542"},{"desc":"513","fix":"543"},{"desc":"544","fix":"545"},"Update the dependencies array to be: [callSetCircleBox, circleBox]",{"range":"546","text":"547"},"Update the dependencies array to be: [circleBoxes]",{"range":"548","text":"549"},"Update the dependencies array to be: [divJustAppeared, startCountFlag]",{"range":"550","text":"551"},"Update the dependencies array to be: [handleResize, handleScroll, movePageFront, scrollLink]",{"range":"552","text":"553"},"Update the dependencies array to be: [countedFlag, ifStartCount]",{"range":"554","text":"555"},"Update the dependencies array to be: [divsWithMovingBgrImage, setSizeParallaxBackgroundImage]",{"range":"556","text":"557"},"Update the dependencies array to be: [aboutTxtAppear, display]",{"range":"558","text":"559"},"Update the dependencies array to be: [display, spanSubChange]",{"range":"560","text":"561"},"Update the dependencies array to be: [mainTitleAddRef]",{"range":"562","text":"563"},"Update the dependencies array to be: [currentSubTitle, spanSubChange]",{"range":"564","text":"565"},"Update the dependencies array to be: [captionsRefer]",{"range":"566","text":"567"},"Update the dependencies array to be: [secSliderRef]",{"range":"568","text":"569"},"Update the dependencies array to be: [keepArrows, windHeight, windWidth]",{"range":"570","text":"571"},"Update the dependencies array to be: [btnNext, callSetPhotoWidth, setArrowMargins, windHeight, windWidth]",{"range":"572","text":"573"},"Update the dependencies array to be: [asyncSetStateCall, btnNext, btnPrev, windWidth]",{"range":"574","text":"575"},"Update the dependencies array to be: []",{"range":"576","text":"577"},{"range":"578","text":"567"},{"range":"579","text":"569"},"Update the dependencies array to be: [btnPrev, windWidth, windHeight, btnNext, keepArrowsInsideImg]",{"range":"580","text":"581"},"Update the dependencies array to be: [windWidth, windHeight, setArrowMargins]",{"range":"582","text":"583"},{"range":"584","text":"577"},{"range":"585","text":"567"},{"range":"586","text":"569"},"Update the dependencies array to be: [btnNext, btnPrev, keepArrowsInsideImg, photoWindowWidthDifference]",{"range":"587","text":"588"},"Update the dependencies array to be: [display, textAppearStart]",{"range":"589","text":"590"},{"range":"591","text":"561"},"Update the dependencies array to be: [mainTitle, mainTitleAddRef]",{"range":"592","text":"593"},{"range":"594","text":"565"},"Update the dependencies array to be: [addToProjectRef]",{"range":"595","text":"596"},[2705,2707],"[callSetCircleBox, circleBox]",[6147,6161],"[circleBoxes]",[5262,5279],"[divJustAppeared, startCountFlag]",[8742,8744],"[handleResize, handleScroll, movePageFront, scrollLink]",[9137,9150],"[countedFlag, ifStartCount]",[9300,9324],"[divsWithMovingBgrImage, setSizeParallaxBackgroundImage]",[3002,3018],"[aboutTxtAppear, display]",[3491,3506],"[display, spanSubChange]",[10828,10839],"[mainTitleAddRef]",[12328,12345],"[currentSubTitle, spanSubChange]",[5066,5068],"[captionsRefer]",[5445,5447],"[secSliderRef]",[6264,6276],"[keepArrows, windHeight, windWidth]",[7029,7040],"[btnNext, callSetPhotoWidth, setArrowMargins, windHeight, windWidth]",[7352,7372],"[asyncSetStateCall, btnNext, btnPrev, windWidth]",[8912,8923],"[]",[5000,5002],[5359,5361],[7193,7225],"[btnPrev, windWidth, windHeight, btnNext, keepArrowsInsideImg]",[8391,8414],"[windWidth, windHeight, setArrowMargins]",[9341,9364],[5149,5151],[5604,5606],[8630,8658],"[btnNext, btnPrev, keepArrowsInsideImg, photoWindowWidthDifference]",[1632,1649],"[display, textAppearStart]",[2073,2088],[7112,7123],"[mainTitle, mainTitleAddRef]",[7948,7965],[4137,4139],"[addToProjectRef]"]