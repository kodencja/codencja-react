[{"C:\\CODING\\React\\codencr\\src\\index.js":"1","C:\\CODING\\React\\codencr\\src\\App.js":"2","C:\\CODING\\React\\codencr\\src\\reportWebVitals.js":"3","C:\\CODING\\React\\codencr\\src\\componentsHook\\Navbar.jsx":"4","C:\\CODING\\React\\codencr\\src\\componentsHook\\FrontPage.jsx":"5","C:\\CODING\\React\\codencr\\src\\componentsHook\\Skills.jsx":"6","C:\\CODING\\React\\codencr\\src\\componentsHook\\NavItem.jsx":"7","C:\\CODING\\React\\codencr\\src\\componentsHook\\About.jsx":"8","C:\\CODING\\React\\codencr\\src\\componentsHook\\Services.jsx":"9","C:\\CODING\\React\\codencr\\src\\componentsHook\\MenuIcon.jsx":"10","C:\\CODING\\React\\codencr\\src\\componentsHook\\Slider.jsx":"11","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useStateAsync.js":"12","C:\\CODING\\React\\codencr\\src\\componentsHook\\WriteText.jsx":"13","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useAppear.js":"14","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useParallaxBgrImage.js":"15","C:\\CODING\\React\\codencr\\src\\componentsHook\\Projects.jsx":"16","C:\\CODING\\React\\codencr\\src\\componentsHook\\Contact.jsx":"17","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useHide.js":"18","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useScrollTo.js":"19","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useMoveFrontPage.js":"20","C:\\CODING\\React\\codencr\\src\\componentsHook\\Curtail.jsx":"21"},{"size":836,"mtime":1622553000713,"results":"22","hashOfConfig":"23"},{"size":880,"mtime":1626423539962,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":1333,"mtime":1622709838306,"results":"26","hashOfConfig":"23"},{"size":13611,"mtime":1626423573390,"results":"27","hashOfConfig":"23"},{"size":4661,"mtime":1624997623962,"results":"28","hashOfConfig":"23"},{"size":358,"mtime":1622709826406,"results":"29","hashOfConfig":"23"},{"size":1272,"mtime":1623320726698,"results":"30","hashOfConfig":"23"},{"size":2474,"mtime":1626422821611,"results":"31","hashOfConfig":"23"},{"size":328,"mtime":1622733276232,"results":"32","hashOfConfig":"23"},{"size":7647,"mtime":1626414670490,"results":"33","hashOfConfig":"23"},{"size":1275,"mtime":1622575896173,"results":"34","hashOfConfig":"23"},{"size":7500,"mtime":1622733388986,"results":"35","hashOfConfig":"23"},{"size":9191,"mtime":1622733175577,"results":"36","hashOfConfig":"23"},{"size":3041,"mtime":1622737047249,"results":"37","hashOfConfig":"23"},{"size":4547,"mtime":1624997496552,"results":"38","hashOfConfig":"23"},{"size":1608,"mtime":1622733261782,"results":"39","hashOfConfig":"23"},{"size":1936,"mtime":1622575782986,"results":"40","hashOfConfig":"23"},{"size":731,"mtime":1622575845573,"results":"41","hashOfConfig":"23"},{"size":2570,"mtime":1626417411052,"results":"42","hashOfConfig":"23"},{"size":6453,"mtime":1626423435855,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"u5m90o",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\CODING\\React\\codencr\\src\\index.js",["91"],"import \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"bootstrap-slider/dist/css/bootstrap-slider.css\"\nimport \"react-multi-carousel/lib/styles.css\";\n// import $ from \"jquery\";\nimport Popper from \"popper.js\";\n// import \"bootstrap/dist/js/bootstrap.bundle.min\";\n// import './fontello/css/fontello.css';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import AppCl from \"./AppCl\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["92","93"],"C:\\CODING\\React\\codencr\\src\\App.js",[],"C:\\CODING\\React\\codencr\\src\\reportWebVitals.js",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\Navbar.jsx",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\FrontPage.jsx",["94","95","96","97","98","99","100"],"C:\\CODING\\React\\codencr\\src\\componentsHook\\Skills.jsx",["101"],"import React, { useEffect, useRef, memo } from \"react\";\r\nimport CountUp from \"react-countup\";\r\nimport(\"../css/skills.css\");\r\n\r\nconst hardSkills = [\r\n  \"HTML5\",\r\n  \"CSS3\",\r\n  \"JS(ES6)\",\r\n  \"jQUERY\",\r\n  \"REACT.JS\",\r\n  \"HOOKS\",\r\n  \"Bootstrap\",\r\n  \"SASS\",\r\n  \"TypeScript\",\r\n  \"NodeJS\",\r\n  \"Express.js\",\r\n  \"GIT\",\r\n];\r\nconst hardSkillsPercent = [75, 75, 75, 75, 75, 75, 75, 70, 70, 60, 65, 70];\r\n\r\nconst softSkills = [\r\n  \"NPM\",\r\n  \"REST API\",\r\n  \"EJS View\",\r\n  \"mongoDB\",\r\n  \"C++\",\r\n  \"PHP\",\r\n  \"MySQL\",\r\n  \"MVC\",\r\n  \"BEM\",\r\n  \"PhotoShop\",\r\n  \"Illustrator\",\r\n  \"Premiere\",\r\n];\r\n\r\nconst softQuotation = [\r\n  \"...\",\r\n  \"First,\",\r\n  \"solve\",\r\n  \"the\",\r\n  \"problem.\",\r\n  \"Then,\",\r\n  \"write\",\r\n  \"the\",\r\n  \"code\",\r\n  \" - \",\r\n  \"John\",\r\n  \"Johnson\",\r\n];\r\n\r\nconst hardQuotation = [\r\n  \"The most\",\r\n  \"important\",\r\n  \"property\",\r\n  \"of a\",\r\n  \"program is\",\r\n  \"whether it\",\r\n  \"accomp- lishes\",\r\n  \"the intention\",\r\n  \"of its\",\r\n  \"user.\",\r\n  \"- C.A.R.\",\r\n  \"Hoare\",\r\n];\r\n\r\nconst countingTime = 7;\r\n\r\nconst Skills = ({ handleStartCount, skillsDivs, refProp }) => {\r\n  const skillsRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Skills Comp. mounted\");\r\n    if (skillsRef.current.length > 0) {\r\n      skillsDivs(skillsRef.current);\r\n    }\r\n  }, []);\r\n\r\n  const addToSkillsRef = (el) => {\r\n    if (el && el !== undefined && !skillsRef.current.includes(el)) {\r\n      skillsRef.current.push(el);\r\n    }\r\n  };\r\n\r\n  const hardSkillsCircles = hardSkills.map((skill, index) => {\r\n    return (\r\n      <div\r\n        className=\"flip-card col-md-4 mx-4 mb-4 mt-5 px-0 animated NotInView fadeOutDown\"\r\n        key={index}\r\n        ref={addToSkillsRef}\r\n      >\r\n        <div className=\"flip-card-inner\">\r\n          <div className=\"flip-card-front\">\r\n            <div className={\"row-counting counting count-hard-\" + index}>\r\n              <div className=\"percent counting-percent\">\r\n                <CountUp\r\n                  end={\r\n                    handleStartCount[index] === false\r\n                      ? 0\r\n                      : hardSkillsPercent[index]\r\n                  }\r\n                  duration={countingTime}\r\n                  suffix=\"%\"\r\n                  delay={2}\r\n                >\r\n                  {({ countUpRef }) => (\r\n                    <div style={{ fontWeight: \"bold\" }}>\r\n                      <div ref={countUpRef}></div>\r\n                    </div>\r\n                  )}\r\n                </CountUp>\r\n              </div>\r\n              <div className=\"skillName counting-skillName\">{skill}</div>\r\n            </div>\r\n          </div>\r\n          <div className={\"flip-card-back row-counting flipBgrColor\" + index}>\r\n            <div\r\n              className={\r\n                index > hardSkills.length - 3\r\n                  ? \"flip-back-quote authorFontStyle\"\r\n                  : \"flip-back-quote\"\r\n              }\r\n            >\r\n              {hardQuotation[index]}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const softSkillsCircles = softSkills.map((skill, index) => {\r\n    return (\r\n      <div\r\n        className=\"flip-card col-md-4 mx-4 mb-4 mt-5 px-0 animated NotInView fadeOutDown\"\r\n        key={index}\r\n        ref={addToSkillsRef}\r\n      >\r\n        <div className=\"flip-card-inner\">\r\n          <div className=\"flip-card-front\">\r\n            <div\r\n              className={\"row-counting counting soft-row count-soft-\" + index}\r\n            >\r\n              <div className=\"skillName counting-skillName\">{skill}</div>\r\n            </div>\r\n          </div>\r\n          <div className={\"flip-card-back row-counting flipBgrColor\" + index}>\r\n            <div\r\n              className={\r\n                index > softSkills.length - 3\r\n                  ? \"flip-back-quote authorFontStyle\"\r\n                  : \"flip-back-quote\"\r\n              }\r\n            >\r\n              {softQuotation[index]}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <header className=\"title sec-title title-col-bright title-bgr-dark\">\r\n        TECHNICAL SKILLS\r\n      </header>\r\n      <div className=\"container sec-cont\">\r\n        <div className=\"align-middle py-4\">\r\n          <header className=\"skills-header\">Hard Skills</header>\r\n          <div className=\"row justify-content-center skills-row\">\r\n            {hardSkillsCircles}\r\n          </div>\r\n          <header className=\"skills-header\">Soft Skills</header>\r\n          <div className=\"row justify-content-center skills-row\">\r\n            {softSkillsCircles}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default memo(Skills);\r\n","C:\\CODING\\React\\codencr\\src\\componentsHook\\NavItem.jsx",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\About.jsx",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\Services.jsx",["102"],"C:\\CODING\\React\\codencr\\src\\componentsHook\\MenuIcon.jsx",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\Slider.jsx",["103","104","105"],"C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useStateAsync.js",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\WriteText.jsx",["106","107","108"],"import React, { useRef, useEffect, useState, useMemo } from \"react\";\r\nimport $ from \"jquery\";\r\nimport useStateAsync from \"./customHooks/useStateAsync\";\r\n\r\nfunction WriteText(props) {\r\n  const {\r\n    textAppearStart,\r\n    pauseBetweenNewSentenceAppear,\r\n    pauseAfterAllTextsDisplayed,\r\n    pauseBeforeOneSubTitleSentenceFadeOut,\r\n    timeToDisplayText1,\r\n    timeToDisplayText2,\r\n    mainTitle,\r\n    subTitles,\r\n  } = props;\r\n  // currentSubTitle - musi być w useState a nie w useRef, bo jego zmiana musi wyrenderować nowe zdanie w jsx\r\n  const [currentSubTitle, setCurrentSubTitle] = useStateAsync(\"\", 1000);\r\n  const [spanSubChange, setSpanSubChange] = useState(false);\r\n\r\n  const mainTxtShown = useRef(false);\r\n\r\n  const subTxtCurrentIndex = useRef(0);\r\n\r\n  // mainTxtRef - reference to the div embracing the mainTitle within spanMainTitleRef.current\r\n  const mainTxtRef = useRef();\r\n\r\n  // subTxtRef - reference to the div embracing the currentSubTitle within spanSubTitleRef.current\r\n  const subTxtRef = useRef();\r\n\r\n  // reference array to mainTitle 's each letter embraced around span\r\n  const spanMainTitleRef = useRef([]);\r\n\r\n  // reference array to currentSubTitle 's each letter embraced around span\r\n  const spanSubTitleRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"WriteText Comp. mounted!\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (textAppearStart === true) {\r\n      // console.log(\"useEffect spanMainTitleRef\");\r\n      display(spanMainTitleRef.current, 0, subTxtCurrentIndex.current);\r\n    }\r\n  }, [textAppearStart]);\r\n\r\n  useEffect(() => {\r\n    if (mainTxtShown.current === true && spanSubTitleRef.current.length > 0) {\r\n      display(spanSubTitleRef.current, 0, subTxtCurrentIndex.current);\r\n    }\r\n  }, [spanSubChange]);\r\n\r\n  const subTitleAddRef = (el) => {\r\n    if (el && el !== null && !spanSubTitleRef.current.includes(el)) {\r\n      // console.log(\"subTitleAddRef Fn\");\r\n      spanSubTitleRef.current.push(el);\r\n    }\r\n  };\r\n\r\n  const mainTitleAddRef = (el) => {\r\n    if (el && el !== null && !spanMainTitleRef.current.includes(el)) {\r\n      spanMainTitleRef.current.push(el);\r\n    }\r\n  };\r\n  //   },\r\n  //   [spanMainTitleRef]\r\n  // );\r\n\r\n  // spanTab - spanMainTitleRef or spanSubTitleRef\r\n  // iSubTab - subTxtCurrentIndex\r\n  const display = (spanTab, i, iSubTab) => {\r\n    if (subTxtRef.current.classList.contains(\"fadeOutFast\")) {\r\n      subTxtRef.current.classList.remove(\"fadeOutFast\");\r\n    }\r\n    if (subTxtRef.current.classList.contains(\"fadeOut\")) {\r\n      subTxtRef.current.classList.remove(\"fadeOut\");\r\n    }\r\n    if (mainTxtRef.current.classList.contains(\"fadeOut\")) {\r\n      mainTxtRef.current.classList.remove(\"fadeOut\");\r\n    }\r\n\r\n    // if the mainTitle has not been displayed yet\r\n    if (mainTxtShown.current === false) {\r\n      if (i < spanTab.length) {\r\n        displayOneSentence(spanTab, i, iSubTab, timeToDisplayText1);\r\n      } else {\r\n        // set current index of the span array to 0\r\n        i = 0;\r\n        mainTxtShown.current = true;\r\n        setTimeout(async () => {\r\n          await setCurrentSubTitle(\r\n            subTitles[subTxtCurrentIndex.current],\r\n            currentSubTitle\r\n          );\r\n        }, pauseBetweenNewSentenceAppear);\r\n      }\r\n    }\r\n    // if the mainTitle has already been displayed\r\n    else {\r\n      // if index of the particular sentence from subTitle array has not reached its last element\r\n      if (i < spanTab.length) {\r\n        displayOneSentence(spanTab, i, iSubTab, timeToDisplayText2);\r\n      }\r\n      // if index of the particular sentence from subTitle array has reached its last element (letter)\r\n      else {\r\n        subTxtCurrentIndex.current++;\r\n        // here we have to clear spanSubTitleRef.current since another spans with another letter will have to be stored in this reference\r\n        spanSubTitleRef.current = [];\r\n\r\n        // if index of the subTitles array HAS NOT reached its last element (sentence) = if index of the subTitles array is less or equal to its last element (sentence)\r\n        if (subTxtCurrentIndex.current < subTitles.length) {\r\n          setTimeout(() => {\r\n            subTxtRef.current.classList.add(\"fadeOutFast\");\r\n            setTimeout(async () => {\r\n              spanTab.forEach((span) => {\r\n                $(span).css(\"visibility\", \"hidden\");\r\n              });\r\n              await setCurrentSubTitle(\r\n                subTitles[subTxtCurrentIndex.current],\r\n                currentSubTitle\r\n              );\r\n            }, pauseBetweenNewSentenceAppear / 2);\r\n          }, pauseBeforeOneSubTitleSentenceFadeOut);\r\n        }\r\n\r\n        // if index of the subTitles array HAS REACHED its last element (sentence) - so what to do next\r\n        else {\r\n          setTimeout(() => {\r\n            mainTxtRef.current.classList.add(\"fadeOut\");\r\n            subTxtRef.current.classList.add(\"fadeOut\");\r\n            subTxtCurrentIndex.current = 0;\r\n            mainTxtShown.current = false;\r\n\r\n            setTimeout(() => {\r\n              spanTab.forEach((span) => {\r\n                $(span).css(\"visibility\", \"hidden\");\r\n              });\r\n              spanMainTitleRef.current.forEach((span) => {\r\n                $(span).css(\"visibility\", \"hidden\");\r\n              });\r\n\r\n              setTimeout(() => {\r\n                display(\r\n                  spanMainTitleRef.current,\r\n                  0,\r\n                  subTxtCurrentIndex.current\r\n                );\r\n              }, pauseBetweenNewSentenceAppear);\r\n            }, pauseBetweenNewSentenceAppear);\r\n          }, pauseAfterAllTextsDisplayed);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const displayOneSentence = (spanTab, i, iSubTab, time) => {\r\n    setTimeout(() => {\r\n      $(spanTab[i]).css(\"visibility\", \"visible\");\r\n      i++;\r\n      display(spanTab, i, iSubTab);\r\n    }, time);\r\n  };\r\n\r\n  // mainTitle divided into each letter embraced around span\r\n  const mainTitleSpans = useMemo(() => {\r\n    return [...mainTitle].map((letter, ind) => {\r\n      return (\r\n        <span\r\n          style={\r\n            mainTxtShown.current === false\r\n              ? { visibility: \"hidden\" }\r\n              : { visibility: \"visible\" }\r\n          }\r\n          key={ind}\r\n          ref={mainTitleAddRef}\r\n        >\r\n          {letter}\r\n        </span>\r\n      );\r\n    });\r\n  }, [mainTitle]);\r\n\r\n  // currentSubTitle divided into each letter embraced around span\r\n  const subTitleSpans = useMemo(() => {\r\n    if (currentSubTitle.length > 0) {\r\n      const subTitleArray = [...currentSubTitle].map((letter, ind) => {\r\n        return (\r\n          <span style={{ visibility: \"hidden\" }} key={ind} ref={subTitleAddRef}>\r\n            {letter}\r\n          </span>\r\n        );\r\n      });\r\n\r\n      // ta poniższa linia uruchamia ciąg wyświetlania subTitles\r\n      // setSpanSubChange - let spanSubTitleRef.current to be filled out only after currentSubTitle and consequently  subTitleSpans have changed, not earlier\r\n      setSpanSubChange(!spanSubChange);\r\n      return subTitleArray;\r\n    } else {\r\n      return null;\r\n    }\r\n  }, [currentSubTitle]);\r\n\r\n  return (\r\n    <div className=\"row justify-content-left cont-about-me about-me align-left\">\r\n      <div\r\n        className=\"text1 row-text1 col-sm-10 mb-4 h1 animated \"\r\n        ref={mainTxtRef}\r\n      >\r\n        {mainTitleSpans}\r\n      </div>\r\n      <div\r\n        className=\"text2 row-text2 col-sm-10 mb-4 h2 animated \"\r\n        ref={subTxtRef}\r\n      >\r\n        {subTitleSpans}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WriteText;\r\n","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useAppear.js",["109","110"],"import { useState } from \"react\";\r\nimport $ from \"jquery\";\r\n\r\n// dealing with appearing and hiding divs while scrolling\r\nfunction useAppear(\r\n  animShow1,\r\n  animShow2,\r\n  animShow3,\r\n  animShow4,\r\n  animHide1,\r\n  animHide2,\r\n  animHide3,\r\n  animHide4\r\n) {\r\n  const [divJustAppeared, setDivJustAppeared] = useState();\r\n  // resolve must be inside setTimeout function otherwise the result will be executed immediately after invoking the Promise\r\n  // showDivsAnimation(divsToShowInOneRow[rowInd], rowLength, rowInd, appearTime);\r\n  const showDivsAnimation = (oneDiv, rowLength, rowIndex, time) => {\r\n    // console.log(\"showDivsAnimation\");\r\n\r\n    return new Promise((resolve, reject) => {\r\n      if (reject.length > 1) reject(new Error(\"Error\"));\r\n      else {\r\n        if (rowIndex >= 4) {\r\n          const maxIndexLength =\r\n            animShow4.length * Math.floor(rowIndex / animShow4.length);\r\n          // console.log(maxIndexLength);\r\n          rowIndex = rowIndex - maxIndexLength;\r\n        }\r\n        if (rowLength > 4) {\r\n          rowLength = 4;\r\n        }\r\n        const arrShowName = eval(\"animShow\" + rowLength);\r\n        // const arrHideName = eval(\"animHide\" + rowLength);\r\n        setTimeout(() => {\r\n          // remove hide classes\r\n          // resolve(function () {\r\n          if ($(oneDiv).hasClass(animHide1[0])) {\r\n            $(oneDiv).removeClass(animHide1[0]);\r\n            // console.log(\"remove fadeOutDown\");\r\n          } else {\r\n            $(oneDiv).removeClass(function (index, css) {\r\n              // console.log(css);\r\n              return (css.match(/(^|\\s)fade\\S+/g) || []).join(\" \");\r\n            });\r\n          }\r\n          // add the right show class\r\n          $(oneDiv).addClass(arrShowName[rowIndex]);\r\n          setDivJustAppeared(oneDiv);\r\n\r\n          setTimeout(() => {\r\n            // removed show classess\r\n            if ($(oneDiv).hasClass(animShow1[0])) {\r\n              $(oneDiv).removeClass(animShow1[0]);\r\n            } else {\r\n              // $(oneDiv).removeClass(state.arrHideName[rowIndex]);\r\n              $(oneDiv).removeClass(function (index, css) {\r\n                // console.log(css);\r\n                return (css.match(/(^|\\s)fade\\S+/g) || []).join(\" \");\r\n              });\r\n            }\r\n\r\n            $(oneDiv).addClass(\"appeared\");\r\n\r\n            if ($(oneDiv).hasClass(\"box\")) {\r\n              $(oneDiv).addClass(\"box-after-appear\");\r\n            } else if ($(oneDiv).hasClass(\"flip-card\")) {\r\n              $(oneDiv).addClass(\"flip-card-after-appear\");\r\n            }\r\n          }, 1300);\r\n          resolve(arrShowName);\r\n        }, time);\r\n      }\r\n    });\r\n  };\r\n\r\n  const hideDivsAnimation = (oneDiv, rowLength, rowIndex, time) => {\r\n    // console.log(\"hideDivsAnimation\");\r\n    return new Promise((resolve, reject) => {\r\n      if (reject.length > 1) reject(new Error(\"Error\"));\r\n      else {\r\n        if (rowIndex >= 4) {\r\n          const maxIndexLength =\r\n            animShow4.length * Math.floor(rowIndex / animShow4.length);\r\n          rowIndex = rowIndex - maxIndexLength;\r\n        }\r\n        if (rowLength > 4) {\r\n          rowLength = 4;\r\n        }\r\n\r\n        const arrHideName = eval(\"animHide\" + rowLength);\r\n        setTimeout(() => {\r\n          $(oneDiv).addClass(arrHideName[rowIndex]);\r\n          $(oneDiv).removeClass(\"appeared\");\r\n        }, time / 3);\r\n        resolve(arrHideName);\r\n      }\r\n    });\r\n  };\r\n\r\n  // usuwa klasę \"NotInView\" a dodaje \"inView\" dla elementów znajdujących się w jednym rzędzie\r\n  const showDiv = (\r\n    divsToAppear,\r\n    indexInAllAppearDivs,\r\n    elem,\r\n    elemTopConst,\r\n    elemNext,\r\n    elemNextTopConst\r\n  ) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      // console.log(\"showDiv Fn\");\r\n      if (divsToAppear.length <= 0) reject(new Error(\"Error\"));\r\n      else {\r\n        // if the element's top value is the same as its neighbour top value and the neighbour / next element exist at all\r\n        if (\r\n          (elemTopConst === elemNextTopConst && elemNext != null) ||\r\n          elemTopConst !== elemNextTopConst ||\r\n          elemNext === null ||\r\n          indexInAllAppearDivs === divsToAppear.length - 1\r\n        ) {\r\n          $(elem).removeClass(\"NotInView\");\r\n          $(elem).addClass(\"inView\");\r\n        }\r\n        resolve({\r\n          element: elem,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  // hiding elements\r\n  const hideDiv = (\r\n    divsToAppear,\r\n    indexInAllAppearDivs,\r\n    elem,\r\n    elemTopConst,\r\n    elemNext,\r\n    elemNextTopConst\r\n  ) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      if (divsToAppear.length <= 0) reject(new Error(\"Error\"));\r\n      else {\r\n        if (\r\n          (elemNextTopConst === elemTopConst && elemNext != null) ||\r\n          elemNextTopConst !== elemTopConst ||\r\n          elemNext === null ||\r\n          indexInAllAppearDivs === divsToAppear.length - 1\r\n        ) {\r\n          if ($(elem).hasClass(\"box-after-appear\")) {\r\n            $(elem).removeClass(\"box-after-appear\");\r\n          } else if ($(elem).hasClass(\"flip-card-after-appear\")) {\r\n            $(elem).removeClass(\"flip-card-after-appear\");\r\n          }\r\n          $(elem).removeClass(\"inView\");\r\n          $(elem).addClass(\"NotInView\");\r\n        }\r\n        resolve({\r\n          element: elem,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const getDivTopVal = (frontScroll, elem) => {\r\n    // console.log(\"getDivTopVal Fn\");\r\n    return new Promise((resolve, reject) => {\r\n      if (reject.length > 1)\r\n        reject(new Error(\"Error to get div appear top value\"));\r\n      else {\r\n        resolve({\r\n          elem: elem,\r\n          elTopConst: elem.offsetTop,\r\n          elTop: elem.offsetTop - frontScroll,\r\n          elHeight: elem.offsetHeight / 2,\r\n          elNext: elem.nextElementSibling,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleAppearing = async (\r\n    windowHeight,\r\n    pFrontScroll,\r\n    appearTime,\r\n    divsToAppear\r\n  ) => {\r\n    let divsToShowInOneRow = [];\r\n    let divsToHideInOneRow = [];\r\n    try {\r\n      let getDivTop,\r\n        elNextTopConst = null;\r\n      for (let i = 0; i < divsToAppear.length; i++) {\r\n        // console.log(\"try loop\");\r\n        getDivTop = await getDivTopVal(pFrontScroll, divsToAppear[i]);\r\n        if (getDivTop.elNext !== null) {\r\n          elNextTopConst = getDivTop.elNext.offsetTop;\r\n        }\r\n        // if the element's top offset value plus its height are smaller than windowHeight and it hasn't got a \"NotInView\" class and it hasn't appeared yet (nto having class 'appeared')\r\n        if (\r\n          windowHeight >= getDivTop.elTop + getDivTop.elHeight &&\r\n          $(divsToAppear[i]).hasClass(\"NotInView\") &&\r\n          $(divsToAppear[i]).not(\".appeared\")\r\n        ) {\r\n          // console.log(\"has class NotInView\");\r\n          // tu gdzieś trzeba zrobić pętlę żeby uzyskać oneRowOfDivs.length\r\n          // the below function pushes to an array all divs that stay in one row that has to appear\r\n          const showDivVar = await showDiv(\r\n            divsToAppear,\r\n            i,\r\n            getDivTop.elem,\r\n            getDivTop.elTopConst,\r\n            getDivTop.elNext,\r\n            elNextTopConst\r\n          );\r\n          divsToShowInOneRow.push(showDivVar.element);\r\n        } else if (\r\n          windowHeight < getDivTop.elTop + getDivTop.elHeight &&\r\n          $(divsToAppear[i]).hasClass(\"inView\") &&\r\n          $(divsToAppear[i]).hasClass(\"appeared\")\r\n        ) {\r\n          // console.log(\"has class inView\");\r\n          const hideDivVar = await hideDiv(\r\n            divsToAppear,\r\n            i,\r\n            divsToAppear[i],\r\n            getDivTop.elTopConst,\r\n            getDivTop.elNext,\r\n            elNextTopConst\r\n          );\r\n          divsToHideInOneRow.push(hideDivVar.element);\r\n        }\r\n      }\r\n      // po skończeniu loopowania wszystkich divów pokazujemy lub ukrywamy wybrane divy po kolei\r\n      if (divsToShowInOneRow.length > 0) {\r\n        let rowInd = 0;\r\n        let rowLength = divsToShowInOneRow.length;\r\n        if (\r\n          $(divsToShowInOneRow[divsToShowInOneRow.length - 1]).not(\".appeared\")\r\n        ) {\r\n          // console.log(\"showDivsAnimation not appeared yet\");\r\n          while (rowInd < rowLength) {\r\n            await showDivsAnimation(\r\n              divsToShowInOneRow[rowInd],\r\n              rowLength,\r\n              rowInd,\r\n              appearTime\r\n            );\r\n            rowInd++;\r\n          }\r\n        }\r\n      }\r\n      if (divsToHideInOneRow.length > 0) {\r\n        let rowInd = 0;\r\n        let rowLength = divsToHideInOneRow.length;\r\n        if (\r\n          $(divsToHideInOneRow[divsToHideInOneRow.length - 1]).hasClass(\r\n            \"appeared\"\r\n          )\r\n        ) {\r\n          // console.log(\"hideDivsAnimation not hidden yet\");\r\n          while (rowInd < rowLength) {\r\n            await hideDivsAnimation(\r\n              divsToHideInOneRow[rowInd],\r\n              rowLength,\r\n              rowInd,\r\n              appearTime\r\n            );\r\n            rowInd++;\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return { handleAppearing, divJustAppeared };\r\n}\r\n\r\nexport default useAppear;\r\n","C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useParallaxBgrImage.js",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\Projects.jsx",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\Contact.jsx",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useHide.js",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useScrollTo.js",[],"C:\\CODING\\React\\codencr\\src\\componentsHook\\customHooks\\useMoveFrontPage.js",["111"],"C:\\CODING\\React\\codencr\\src\\componentsHook\\Curtail.jsx",["112","113"],{"ruleId":"114","severity":1,"message":"115","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":14},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":111,"column":6,"nodeType":"124","endLine":111,"endColumn":23,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"126","line":140,"column":6,"nodeType":"124","endLine":140,"endColumn":27,"suggestions":"127"},{"ruleId":"122","severity":1,"message":"128","line":157,"column":6,"nodeType":"124","endLine":157,"endColumn":8,"suggestions":"129"},{"ruleId":"122","severity":1,"message":"130","line":244,"column":6,"nodeType":"124","endLine":244,"endColumn":8,"suggestions":"131"},{"ruleId":"122","severity":1,"message":"132","line":254,"column":6,"nodeType":"124","endLine":254,"endColumn":19,"suggestions":"133"},{"ruleId":"122","severity":1,"message":"134","line":262,"column":6,"nodeType":"124","endLine":262,"endColumn":30,"suggestions":"135"},{"ruleId":"122","severity":1,"message":"136","line":279,"column":6,"nodeType":"124","endLine":279,"endColumn":18,"suggestions":"137"},{"ruleId":"122","severity":1,"message":"138","line":76,"column":6,"nodeType":"124","endLine":76,"endColumn":8,"suggestions":"139"},{"ruleId":"122","severity":1,"message":"140","line":40,"column":6,"nodeType":"124","endLine":40,"endColumn":8,"suggestions":"141"},{"ruleId":"114","severity":1,"message":"142","line":58,"column":7,"nodeType":"116","messageId":"117","endLine":58,"endColumn":19},{"ruleId":"122","severity":1,"message":"143","line":87,"column":6,"nodeType":"124","endLine":87,"endColumn":8,"suggestions":"144"},{"ruleId":"122","severity":1,"message":"145","line":108,"column":6,"nodeType":"124","endLine":108,"endColumn":34,"suggestions":"146"},{"ruleId":"122","severity":1,"message":"147","line":45,"column":6,"nodeType":"124","endLine":45,"endColumn":23,"suggestions":"148"},{"ruleId":"122","severity":1,"message":"147","line":51,"column":6,"nodeType":"124","endLine":51,"endColumn":21,"suggestions":"149"},{"ruleId":"122","severity":1,"message":"150","line":201,"column":6,"nodeType":"124","endLine":201,"endColumn":23,"suggestions":"151"},{"ruleId":"152","severity":1,"message":"153","line":33,"column":29,"nodeType":"154","messageId":"155","endLine":33,"endColumn":33},{"ruleId":"152","severity":1,"message":"153","line":91,"column":29,"nodeType":"154","messageId":"155","endLine":91,"endColumn":33},{"ruleId":"114","severity":1,"message":"156","line":1,"column":18,"nodeType":"116","messageId":"117","endLine":1,"endColumn":26},{"ruleId":"122","severity":1,"message":"157","line":29,"column":6,"nodeType":"124","endLine":29,"endColumn":18,"suggestions":"158"},{"ruleId":"122","severity":1,"message":"159","line":44,"column":6,"nodeType":"124","endLine":44,"endColumn":14,"suggestions":"160"},"no-unused-vars","'Popper' is defined but never used.","Identifier","unusedVar","no-native-reassign",["161"],"no-negated-in-lhs",["162"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'startCountFlag'. Either include it or remove the dependency array.","ArrayExpression",["163"],"React Hook useEffect has an unnecessary dependency: 'servicesRef.current'. Either exclude it or remove the dependency array. Mutable values like 'servicesRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["164"],"React Hook useEffect has missing dependencies: 'handleResize' and 'handleScroll'. Either include them or remove the dependency array.",["165"],"React Hook useEffect has missing dependencies: 'allSectionsTopRef', 'mainmenuRef', 'menuUl', 'moveFrontPage', and 'scrollLink'. Either include them or remove the dependency array.",["166"],"React Hook useEffect has a missing dependency: 'ifStartCount'. Either include it or remove the dependency array.",["167"],"React Hook useEffect has a missing dependency: 'setSizeParallaxBackgroundImage'. Either include it or remove the dependency array.",["168"],"React Hook useEffect has missing dependencies: 'handleAppearing', 'setSizeParallaxBackgroundImage', and 'windowHeight'. Either include them or remove the dependency array.",["169"],"React Hook useEffect has a missing dependency: 'skillsDivs'. Either include it or remove the dependency array. If 'skillsDivs' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["170"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["171"],"'animShowArr1' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'secSliderRef'. Either include it or remove the dependency array.",["172"],"React Hook useEffect has missing dependencies: 'btnNext', 'btnPrev', and 'keepArrowsInsideImg'. Either include them or remove the dependency array.",["173"],"React Hook useEffect has a missing dependency: 'display'. Either include it or remove the dependency array.",["174"],["175"],"React Hook useMemo has a missing dependency: 'spanSubChange'. Either include it or remove the dependency array. You can also do a functional update 'setSpanSubChange(s => ...)' if you only need 'spanSubChange' in the 'setSpanSubChange' call.",["176"],"no-eval","eval can be harmful.","CallExpression","unexpected","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'createBoxes'. Either include it or remove the dependency array.",["177"],"React Hook useEffect has a missing dependency: 'randomBoxAppearOrDisappear'. Either include it or remove the dependency array.",["178"],"no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [divJustAppeared, startCountFlag]",{"range":"211","text":"212"},"Update the dependencies array to be: []",{"range":"213","text":"214"},"Update the dependencies array to be: [handleResize, handleScroll]",{"range":"215","text":"216"},"Update the dependencies array to be: [allSectionsTopRef, mainmenuRef, menuUl, moveFrontPage, scrollLink]",{"range":"217","text":"218"},"Update the dependencies array to be: [countedFlag, ifStartCount]",{"range":"219","text":"220"},"Update the dependencies array to be: [divsWithMovingBgrImage, setSizeParallaxBackgroundImage]",{"range":"221","text":"222"},"Update the dependencies array to be: [handleAppearing, resizeFlag, setSizeParallaxBackgroundImage, windowHeight]",{"range":"223","text":"224"},"Update the dependencies array to be: [skillsDivs]",{"range":"225","text":"226"},"Update the dependencies array to be: [props]",{"range":"227","text":"228"},"Update the dependencies array to be: [secSliderRef]",{"range":"229","text":"230"},"Update the dependencies array to be: [btnNext, btnPrev, keepArrowsInsideImg, photoWindowWidthDifference]",{"range":"231","text":"232"},"Update the dependencies array to be: [display, textAppearStart]",{"range":"233","text":"234"},"Update the dependencies array to be: [display, spanSubChange]",{"range":"235","text":"236"},"Update the dependencies array to be: [currentSubTitle, spanSubChange]",{"range":"237","text":"238"},"Update the dependencies array to be: [boxesArrNo, createBoxes]",{"range":"239","text":"240"},"Update the dependencies array to be: [bricks, randomBoxAppearOrDisappear]",{"range":"241","text":"242"},[4148,4165],"[divJustAppeared, startCountFlag]",[5020,5041],"[]",[5543,5545],"[handleResize, handleScroll]",[8309,8311],"[allSectionsTopRef, mainmenuRef, menuUl, moveFrontPage, scrollLink]",[8650,8663],"[countedFlag, ifStartCount]",[8865,8889],"[divsWithMovingBgrImage, setSizeParallaxBackgroundImage]",[9344,9356],"[handleAppearing, resizeFlag, setSizeParallaxBackgroundImage, windowHeight]",[1243,1245],"[skillsDivs]",[1099,1101],"[props]",[2847,2849],"[secSliderRef]",[3455,3483],"[btnNext, btnPrev, keepArrowsInsideImg, photoWindowWidthDifference]",[1530,1547],"[display, textAppearStart]",[1738,1753],"[display, spanSubChange]",[7026,7043],"[currentSubTitle, spanSubChange]",[843,855],"[boxesArrNo, createBoxes]",[1230,1238],"[bricks, randomBoxAppearOrDisappear]"]